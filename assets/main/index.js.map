{"version":3,"sources":["assets/Script/cocos-eazax-kit-master/components/charts/ArcProgressBar.ts","assets/Script/cocos-eazax-kit-master/utils/ArrayUtil.ts","assets/Script/cocos-eazax-kit-master/core/AudioPlayer.ts","assets/Script/cocos-eazax-kit-master/components/BackgroundFitter.ts","assets/Script/cocos-eazax-kit-master/utils/Base64Util.ts","assets/Script/cocos-eazax-kit-master/core/renderer/BaseAssembler.ts","assets/Script/cocos-eazax-kit-master/components/renderers/BaseTextureRenderer.ts","assets/Script/cocos-eazax-kit-master/components/tweens/BounceMoveTween.ts","assets/Script/cocos-eazax-kit-master/components/tweens/BounceScaleTween.ts","assets/Script/cocos-eazax-kit-master/utils/BrowserUtil.ts","assets/Script/cocos-eazax-kit-master/components/effects/ColorBrush.ts","assets/Script/cocos-eazax-kit-master/utils/ColorUtil.ts","assets/Script/cocos-eazax-kit-master/components/popups/ConfirmPopup.ts","assets/Script/cocos-eazax-kit-master/components/Counter.ts","assets/Script/cocos-eazax-kit-master/utils/DebugUtil.ts","assets/Script/cocos-eazax-kit-master/utils/DeviceUtil.ts","assets/Script/cocos-eazax-kit-master/components/interaction/Draggable.ts","assets/Script/cocos-eazax-kit-master/misc/EditorAsset.ts","assets/Script/cocos-eazax-kit-master/core/EventManager.ts","assets/Script/cocos-eazax-kit-master/components/effects/GaussianBlur.ts","assets/Script/cocos-eazax-kit-master/utils/GeometryUtil.ts","assets/Script/cocos-eazax-kit-master/components/renderers/GradientColor.ts","assets/Tools/Help.js","assets/Script/cocos-eazax-kit-master/components/effects/HollowOut.ts","assets/Script/Core/Http.ts","assets/Script/cocos-eazax-kit-master/utils/ImageUtil.ts","assets/Script/cocos-eazax-kit-master/core/InstanceEvent.ts","assets/Script/cocos-eazax-kit-master/components/tweens/JellyTween.ts","assets/Script/cocos-eazax-kit-master/components/localization/LocalizationBase.ts","assets/Script/cocos-eazax-kit-master/components/localization/LocalizationLabelString.ts","assets/Script/cocos-eazax-kit-master/components/localization/LocalizationSpriteFrame.ts","assets/Script/cocos-eazax-kit-master/components/LongPress.ts","assets/Script/cocos-eazax-kit-master/components/Marquee.ts","assets/Script/cocos-eazax-kit-master/utils/MathUtil.ts","assets/Script/cocos-eazax-kit-master/components/effects/Mosaic.ts","assets/Script/cocos-eazax-kit-master/utils/NodeUtil.ts","assets/Script/cocos-eazax-kit-master/utils/ObjectUtil.ts","assets/Script/cocos-eazax-kit-master/components/PersistNode.ts","assets/Script/cocos-eazax-kit-master/components/popups/PopupBase.ts","assets/Script/cocos-eazax-kit-master/core/PopupManager.ts","assets/Script/cocos-eazax-kit-master/components/effects/PostProcessing.ts","assets/Script/cocos-eazax-kit-master/utils/PromiseUtil.ts","assets/Script/cocos-eazax-kit-master/components/charts/RadarChart.ts","assets/Script/cocos-eazax-kit-master/components/effects/RadialBlur.ts","assets/Script/cocos-eazax-kit-master/utils/RegexUtil.ts","assets/Script/cocos-eazax-kit-master/components/remote/RemoteAsset.ts","assets/Script/cocos-eazax-kit-master/utils/RenderUtil.ts","assets/Script/cocos-eazax-kit-master/components/RotateAround.ts","assets/Script/cocos-eazax-kit-master/components/RunInBackground.ts","assets/Script/cocos-eazax-kit-master/core/SceneNavigator.ts","assets/Script/cocos-eazax-kit-master/components/ScreenAdapter.ts","assets/Script/cocos-eazax-kit-master/components/effects/SineWave.ts","assets/Script/cocos-eazax-kit-master/utils/StorageUtil.ts","assets/Script/cocos-eazax-kit-master/components/Subtitle.ts","assets/Script/cocos-eazax-kit-master/components/renderers/TextureWithTilingOffset.ts","assets/Script/cocos-eazax-kit-master/utils/TimeUtil.ts","assets/Script/cocos-eazax-kit-master/components/TouchBlocker2.ts","assets/Script/cocos-eazax-kit-master/components/TouchBlocker.ts","assets/Script/cocos-eazax-kit-master/components/TouchEffect.ts","assets/Script/cocos-eazax-kit-master/utils/TweenUtil.ts","assets/Script/View/TzLayer.ts","assets/Tools/decimal.js","assets/Script/cocos-eazax-kit-master/extensions/eazax.ts","assets/Script/cocos-eazax-kit-master/extensions/extension.ts","assets/Script/View/gameViewlayer.js","assets/Script/Mod/httpDef.js","assets/Script/View/jieguoTimer.js","assets/Script/View/jiesuanLayer.ts","assets/Script/View/ruleLayer.ts"],"names":["_a","cc","_decorator","ccclass","property","requireComponent","executeInEditMode","help","menu","ArcProgressBar","_super","_this","apply","this","arguments","graphics","_radius","_clockwise","_startAngle","_range","_lineWidth","_progress","_lineCap","Graphics","LineCap","ROUND","_backgroundColor","Color","_progressColor","curStartAngle","curStartRadians","curEndRadians","curTween","curTweenRes","__extends","Object","defineProperty","prototype","get","set","value","updateProperties","updateProgress","onLoad","init","resetInEditor","getComponent","show","Promise","res","node","opacity","active","tween","to","call","start","hide","lineWidth","lineCap","angleToRadians","endAngle","clear","strokeColor","arc","stroke","offset","angle","radians","duration","progress","stop","Math","PI","__decorate","tooltip","CC_DEV","range","step","type","Component","exports","default","ArrayUtil","copy2DArray","array","newArray","i","length","push","concat","fisherYatesShuffle","count","index","floor","random","temp","confound","slice","sort","flattening","some","v","Array","isArray","combineArrays","array1","array2","__spreadArrays","getRandomValueInArray","AudioPlayer","_masterVolume","_musicVolume","_effectVolume","setMasterVolume","setMusicVolume","setEffectVolume","setVolume","realVolume","_music","forEach","id","audioEngine","_effect","clip","playMusic","has","stopMusic","play","delete","stopAllMusic","pauseMusic","pause","pauseAllMusic","resumeMusic","resume","resumeAllMusic","playEffect","loop","setFinishCallback","stopEffect","_clip","stopAllEffect","pauseEffect","pauseAllEffect","resumeEffect","resumeAllEffect","stopAll","pauseAll","resumeAll","mute","Map","EventManager_1","require","executionOrder","BackgroundFitter","registerEvent","onEnable","adapt","onDestroy","unregisterEvent","on","off","scale","winSize","screenRatio","height","width","designResolution","Canvas","instance","Base64Util","encodeString","string","chr1","chr2","chr3","enc1","enc2","enc3","enc4","keyString","base64","encodeUtf8","charCodeAt","isNaN","charAt","decodeString","replace","indexOf","String","fromCharCode","decodeUtf8","utf8","c","c1","c2","c3","base64ToBlob","window","atob","strings","split","exec","data","arrayBuffer","ArrayBuffer","uint8Array","Uint8Array","Blob","BaseAssembler","floatsPerVert","verticesCount","indicesCount","uvOffset","colorOffset","_local","_renderData","RenderData","initData","initLocal","renderComp","createQuadData","verticesFloats","updateRenderData","comp","_vertsDirty","updateUVs","updateVerts","updateColor","color","uintVerts","uintVDatas","_val","uv","vData","vDatas","srcOffset","dstOffset","appX","anchorX","appY","anchorY","left","bottom","right","top","local","updateWorldVerts","verts","matrixData","_worldMatrix","m","a","b","d","tx","ty","vl","vr","vb","vt","vertexOffset","al","ar","bl","br","cb","ct","db","dt","fillBuffers","renderer","worldMatDirty","renderData","iData","iDatas","buffer","getBuffer","offsetInfo","request","byteOffset","vertexBuffer","_vData","subarray","indicesBuffer","_iData","vertexId","indicesOffset","indiceOffset","l","_handle","_meshBuffer","Assembler","BaseAssembler_1","disallowMultiple","BaseTextureRenderer","_texture","_assembler","_activateMaterial","Node","EventType","SIZE_CHANGED","setVertsDirty","ANCHOR_CHANGED","onDisable","_resetAssembler","materials","_materials","_getDefaultMaterial","MaterialVariant","create","_updateMaterial","texture","material","getMaterial","undefined","getDefine","define","setProperty","markForRender","disableRender","_validateRender","Texture2D","RenderComponent","BounceMoveTween","frequency","decay","v2","targetPos","time","curPos","getPosition","direction","sub","normalize","amplitude","Vec2","distance","x","y","easing","position","v3","end","current","t","pos","mul","getDifference","angularVelocity","sin","exp","BounceScaleTween","targetScale","totalTime","interval","playOnLoad","originalScale","repeatTimes","times","scalingTime","bouncingTime","repeat","delay","setScale","BrowserUtil","clearUrlParam","history","replaceState","setUrlParam","param","map","key","join","getUrlParam","location","query","search","substrings","keyValue","decodeURIComponent","getUrlParams","params","copy","document","element","createElement","readOnly","style","body","appendChild","select","createRange","selectNodeContents","selection","getSelection","removeAllRanges","addRange","result","execCommand","remove","ColorBrush","addComponent","WHITE","lineJoin","LineJoin","getNodeSize","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","targetOff","event","parent","convertToNodeSpaceAR","getLocation","moveTo","circle","lineTo","ColorUtil","hexToRgba","hex","isHex","r","parseInt","substr","g","rgbaToHex","toString","toUpperCase","test","PopupBase_1","ConfirmPopup","titleLabel","contentLabel","confirmBtn","TOUCH_END","onConfirmBtnClick","updateDisplay","options","title","content","confirmCallback","Label","Counter","keepInteger","label","_value","lastTarget","setValue","setTime","target","callback","by","diff","DebugUtil","log","msg","console","showDynamicAtlas","status","dynamicAtlasManager","showDebug","showStats","debug","setDisplayStats","setStatsColor","font","background","profiler","find","warn","children","getChildByName","addChild","macro","MIN_ZINDEX","setContentSize","getBoundingBoxToWorld","setPosition","rect","fillColor","fill","getDrawCalls","drawCalls","DeviceUtil","getSafeAreaRect","sys","platform","os","ANDROID","isNative","isBrowser","isMobile","IPHONE","IPAD","MOBILE_BROWSER","DESKTOP_BROWSER","WECHAT_GAME","QQ_PLAY","BYTEDANCE_GAME","BAIDU_GAME","VIVO_GAME","OPPO_GAME","XIAOMI_GAME","HUAWEI_GAME","ALIPAY_GAME","Draggable","dragThreshold","touchStartPos","dragOffset","isDragging","TOUCH_CANCEL","onTouchCancel","onTouchEnd","touchPosInNode","getParent","touchPosInWorld","onDragMove","onDragStart","onDragEnd","EditorAsset","load","EventManager","name","events","once","onceEvents","compare","splice","onceEvent","emit","args","_i","_b","removeAll","subscription","inCallback","inTarget","GaussianBlur","sprite","sent","Sprite","spriteFrame","getTexture","packable","Material","setMaterial","radius","EffectAsset","readonly","GeometryUtil","pointOnLine","p","ab","ap","collinear","cross","mag","between","min","max","pointInTriangle","sameSide","_p","_c","ac","v1","dot","pointLineDistance","Vec3","GradientColor","_colors","RED","BLUE","colors","replaceFunction","restoreFunction","renderComponent","assembler","Assembler2D","nodeColor","_renderFlag","RenderFlow","FLAG_COLOR","Help","preserveDecimal","number","precision","pow","toFixed","truncateToTwoDecimalPlacesAndHideZero","num","num2","Number","substring","HollowOutShape","HollowOut","_shape","Rect","_center","_width","_height","_round","_feather","tweenRes","Circle","center","round","feather","getCenter","getWidth","getHeight","getRound","getFeather","rectTo","Tween","stopAllByTarget","unscheduleAllCallbacks","scheduleOnce","circleTo","reset","setNodeSize","sqrt","Enum","visible","IHttpMethod","Http","url","method","GET","getRequest","POST","postRequest","https","s","getUrl","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","responseText","send","paramStr","statusText","ImageUtil","getTrim","minX","maxX","minY","j","maxY","getPixelsData","canvas","ctx","getContext","image","getHtmlElementObj","drawImage","imageData","getImageData","getPixelColor","pixelsData","imageToBase64","extname","includes","canvas_1","ctx_1","image_1","Image","src","onload","dataURL","toDataURL","base64ToCCTexture","initWithElement","InstanceEvent","promises","all","JellyTween","pressScale","pressTime","scaleBackTime","scaleX","scaleY","Lang","DefaultLang","LANG_CHANGED","LocalizationBase","defaultLang","cn","curLang","Cn","langChanged","lang","onLangChanged","LocalizationBase_1","LocalizationLabelString","brasil","columbia","spanish","Brasil","LocalizationSpriteFrame","eng","SpriteFrame","TriggerWay","LONG_PRESS","LongPress","trggerTime","trggerWay","Immediately","longPressEvents","hasAccomplished","registerNodeEvent","unregisterNodeEvent","onPressAccomplished","bind","trigger","AfterLoosing","EventHandler","emitEvents","Marquee","view","texts","speed","isPlaying","endCallback","update","updatePosition","setLabel","next","text","clean","RichText","MathUtil","getRandomInt","getPseudoRandomInt","seed","ceil","getAngle","p1","p2","atan","getDistance","angleToRadian","addSafely","aDigits","bDigits","multiplier","Mosaic","_size","Size","resolution","tileSize","size","NodeUtil","getRelativePosition","container","worldPos","convertToWorldSpaceAR","isPosOnNodeRect","contains","areNodesOverlap","node1","node2","rect1","rect2","containsRect","intersects","getNodeSelfBoundingBoxToWorld","getContentSize","anchorPoint","getAnchorPoint","transformMat4","ObjectUtil","isObject","deepCopy","hasOwnProperty","Date","getTime","JSON","parse","stringify","PersistNode","setParent","director","getScene","game","addPersistRootNode","PopupBase","main","animDuration","blocker","finishCallback","onShow","suspended","BlockInputEvents","onHide","CacheMode","ShowResult","PopupManager","_prefabCache","_nodeCache","_current","_queue","_suspended","path","__awaiter","parseParams","locked","immediately","suspend","Waiting","getNodeFromCache","isValid","loadStartCallback","prefab","loadFinishCallback","Failed","instantiate","popup","setSiblingIndex","MAX_ZINDEX","recycle","mode","Done","_res","nodeCache","prefabCache","addRef","shift","priority","Once","destroy","release","Normal","Frequent","removeFromParent","prefabMap","resources","error","refCount","decRef","PopupParamsType","PostProcessing","inputCamera","outputSprite","renderTexture","onCanvasSizeChanged","RenderTexture","screenSize","getVisibleSizeInPixel","initWithSize","targetTexture","abs","updateSize","Camera","PromiseUtil","sleep","RadarChart","_axisLength","_axes","_axisScales","_drawAxes","_gridLineWidth","_innerGridLineWidth","_gridLineColor","GRAY","_gridFillColor","_dataValuesStrings","_dataLineWidths","_dataLineColors","_dataFillColors","_dataJoinColors","_drawDataJoin","keepUpdating","angles","_curDatas","draw","curDatas","drawWithProperties","datas","valueStrings","dataValuesStrings","lineWidths","lineColors","fillColors","joinColors","values","processValuesString","defaultOptions","lineColor","joinColor","valuesString","parseFloat","drawBase","iAngle","axes","scalesSet","axisLength","axisScales","iLength","scales","radian","cos","out","close","resizeCurDatasValues","data_1","coords","coord","curData","data_2","Integer","RadialBlur","_strength","RegexUtil","isDWORD","RemoteAsset","loaded","interrupted","component","RenderUtil","getRenderTexture","cameraNode","camera","clearFlags","ClearFlags","COLOR","backgroundColor","zoomRatio","render","renderWithMaterial","srcRT","dstRT","tempNode","tempSprite","sizeMode","SizeMode","RAW","trim","flipY","DepthStencilFormat","RB_FMT_S8","readPixels","k","flipped","Axis","RotateAround","clockwise","timePerRound","faceToTarget","faceAxis","NegativeY","autoStart","isRotating","run","PositiveX","PositiveY","NegativeX","anglePerFrame","RunInBackground","worker","onVisibilityChange","addEventListener","removeEventListener","visibilityState","isPaused","Worker","onmessage","terminate","displayName","SceneNavigator","_home","_history","_curScene","_param","setHome","goHome","coverHistory","onLaunched","loadScene","go","back","pop","ScreenAdapter","setResizeCallback","onResize","designRatio","setFitWidth","setFitHeight","fitHeight","fitWidth","SineWaveDirection","SineWave","_amplitude","_angularVelocity","_frequency","_direction","Left","setSpriteFrame","effect","StorageUtil","localStorage","setItem","dataString","getItem","removeItem","Subtitle","queen","curIndex","Subtitle_1","print","TextureWithTilingOffset","_material","_tilingOffset","Vec4","z","w","override","TimeUtil","getTimestamp","getDate","toLocaleDateString","getTargetTimestamp","hour","minute","second","msToHMS","separator","keepHours","hours","minutes","seconds","padStart","TouchBlocker2","allowList","blocked","persist","TouchBlocker2_1","onEvent","setSwallowTouches","clickOnAnyTarget","stopPropagationImmediate","swallow","_touchListener","addTargets","nodes","setTarget","clearTargets","TouchBlocker","isBlockAll","isPassAll","onTouchEvent","blockAll","passAll","TouchEffect","effectPrefab","effectContainer","maxQuantity","triggerByMoving","useNodePool","nodePoolLimit","curCount","lastTriggerTime","nodePool","NodePool","now","recycleEffect","put","Prefab","TweenUtil","flip","onMiddle","onComplete","skewY","parallel","playOnFocus","FloatMove","_edit_play","edit_playing","initShakeSlow","startPos","rotate1","rotate2","rotate3","rotate4","sequence1","sequence","then","repeatForever","stopAllActions","globalScope","Decimal","inexact","noConflict","quadrant","EXP_LIMIT","MAX_DIGITS","NUMERALS","LN10","DEFAULTS","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","tag","mathfloor","mathpow","isBinary","isOctal","isDecimal","BASE","LOG_BASE","LN10_PRECISION","PI_PRECISION","P","toStringTag","digitsToString","ws","indexOfLastWord","str","getZeroString","checkInt32","Error","checkRoundingDigits","rm","repeating","di","rd","convertBase","baseIn","baseOut","arrL","arr","strL","reverse","cosine","Ctor","len","isZero","tinyPow","taylorSeries","cos2x","minus","plus","absoluteValue","constructor","finalise","e","clampedTo","clamp","NaN","gt","cmp","comparedTo","xdL","ydL","xd","yd","xs","ys","pr","sd","toLessThanHalfPi","neg","cubeRoot","cbrt","n","rep","t3","t3plusx","isFinite","toExponential","divide","eq","decimalPlaces","dp","dividedBy","div","dividedToIntegerBy","divToInt","equals","greaterThan","greaterThanOrEqualTo","gte","hyperbolicCosine","cosh","one","cosh2_x","d8","hyperbolicSine","sinh","sinh2_x","d5","d16","d20","hyperbolicTangent","tanh","inverseCosine","acos","halfPi","isNeg","getPi","asin","inverseHyperbolicCosine","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","inverseSine","inverseTangent","px","x2","isInteger","isInt","isNegative","isPositive","isPos","lessThan","lt","lessThanOrEqualTo","logarithm","base","isBase10","denominator","inf","naturalLogarithm","getLn10","xe","xLTy","getBase10Exponent","mod","q","naturalExponential","negated","add","carry","unshift","getPrecision","sine","squareRoot","tangent","tan","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","finiteToString","toFraction","maxD","d0","d1","d2","n0","n1","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","yn","intPow","toPrecision","toSignificantDigits","toSD","truncated","trunc","valueOf","toJSON","multiplyInteger","aL","bL","subtract","logBase","more","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","sign","isTruncated","digits","roundUp","xdi","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","ltgt","guard","sum","c0","numerator","x1","parseDecimal","parseOther","divisor","isFloat","toLowerCase","sin2_x","isHyperbolic","u","pi","atan2","config","obj","useDefaults","defaults","ps","getRandomValues","randomBytes","hypot","isDecimalInstance","log2","log10","Uint32Array","clone","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","amd","module","Symbol","iterator","self","eazax","threshold","suffix","charCount","httpDef","_require","jieguoTimer","Language","Class","extends","properties","language","Columbia","Spanish","btn_dice","Button","btn_music","Toggle","txt_yuce","txt_Multiplicador","txt_Oportunidaddeganar","toggle_scroll1","toggle_scroll2","slider","Slider","progressBar","ProgressBar","bar","progressLabel","btn_min","btn_max","btn_half","btn_double","txt_bet","txt_score","btn_play","saizi_bg","mask","auto_bg2","manual_btn","auto_btn","editbox_number_of_bets","EditBox","editbox_stop_on_profit","editbox_stop_on_loss","editbox_max_bet_amount","editbox_on_win","editbox_on_loss","toggle_on_win","toggle_on_loss","autoOk_btn","popupNode","txt_count","jiesuanLayer","tz_ani","tz","audioSource","AudioSource","ruleLayer","token","address","parmStr","href","parm","ReqStartDefault","parsedData","gold","preloadDir","getDirWithPath","info","resList","loadDir","err","assets","_step","uuidDict","_iterator","_createForOfIteratorHelperLoose","done","item","uuid","_step2","_iterator2","asset","ruleButtonClickEvent","musicButtonClickEvent","switchButtonClickEvent","sliderEvent","playButtonClickEvent","switchAutoButtonClickEvent","betButtonClickEvent","EditboxEvent","resetIncreaseEvent","min_bet","max_bet","bet","scrollSwitch","isAuto","balancegold","goldnumber","prediction","Oportunidaddeganar","play_btn_state","numberofbet","stoponprofit","stoponloss","maxbetamount","onwinincrease","onlossincrease","iswinresetIncrease","islossresetIncrease","totalwin","istop","resetData","isChecked","interactable","playAni","stopAni","getRes","startGame","ReqDiceGameBet","isblue","isauto","startTimer","setTimeout","stopTimer","code","jiesuanLayerOptions","volume","dialog","myUpdate","list","_step3","_iterator3","confirmOptions","updateInterval","schedule","updateNumber","unschedule","randomNumber","winnumLabel","lossnumLabel","rule_sprite","rule_txt","hongdian","huidian","nextBtn","rulebackBtn","min_txt","max_txt","min_num","max_num","checkBtn1","checkBtn2","confirmBtn1","page","onNextBtnClick","onCheckBtnClick"],"mappings":"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","sourcesContent":["const { ccclass, property, requireComponent, executeInEditMode, help, menu } = cc._decorator;\n\n/**\n * 弧形进度条\n * @author 陈皮皮 (ifaswind)\n * @version 20210908\n * @see ArcProgressBar.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/charts/ArcProgressBar.ts\n */\n@ccclass\n@requireComponent(cc.Graphics)\n@executeInEditMode\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/charts/ArcProgressBar.ts')\n@menu('eazax/图表组件/ArcProgressBar')\nexport default class ArcProgressBar extends cc.Component {\n\n    @property(cc.Graphics)\n    protected graphics: cc.Graphics = null;\n\n    @property()\n    protected _radius: number = 100;\n    @property({ tooltip: CC_DEV && '半径' })\n    public get radius() {\n        return this._radius;\n    }\n    public set radius(value: number) {\n        this._radius = value;\n        this.updateProperties();\n    }\n\n    @property()\n    protected _clockwise: boolean = true;\n    @property({ tooltip: CC_DEV && '顺时针方向' })\n    public get clockwise() {\n        return this._clockwise;\n    }\n    public set clockwise(value: boolean) {\n        this._clockwise = value;\n        this.updateProperties();\n    }\n\n    @property()\n    protected _startAngle: number = 90;\n    @property({ tooltip: CC_DEV && '开始角度 (基于 y 轴)' })\n    public get startAngle() {\n        return this._startAngle;\n    }\n    public set startAngle(value: number) {\n        this._startAngle = value;\n        this.updateProperties();\n    }\n\n    @property()\n    protected _range: number = 180;\n    @property({ tooltip: CC_DEV && '范围 (角度)' })\n    public get range() {\n        return this._range;\n    }\n    public set range(value: number) {\n        this._range = value;\n        this.updateProperties();\n    }\n\n    @property()\n    protected _lineWidth: number = 20;\n    @property({ tooltip: CC_DEV && '线宽' })\n    public get lineWidth() {\n        return this._lineWidth;\n    }\n    public set lineWidth(value: number) {\n        this._lineWidth = value;\n        this.updateProperties();\n    }\n\n    @property()\n    protected _progress: number = 0.4;\n    @property({ range: [0, 1], step: 0.01, tooltip: CC_DEV && '进度 (0 ~ 1)' })\n    public get progress() {\n        return this._progress;\n    }\n    public set progress(value: number) {\n        this.updateProgress(value);\n    }\n\n    @property()\n    protected _lineCap: cc.Graphics.LineCap = cc.Graphics.LineCap.ROUND;\n    @property({ type: cc.Graphics.LineCap, tooltip: CC_DEV && '线帽' })\n    public get lineCap() {\n        return this._lineCap;\n    }\n    public set lineCap(value: number) {\n        this._lineCap = value;\n        this.updateProperties();\n    }\n\n    @property()\n    protected _backgroundColor: cc.Color = new cc.Color(255, 255, 255, 255);\n    @property({ type: cc.Color, tooltip: CC_DEV && '背景颜色' })\n    public get backgroundColor() {\n        return this._backgroundColor;\n    }\n    public set backgroundColor(value: cc.Color) {\n        this._backgroundColor = value;\n        this.updateProperties();\n    }\n\n    @property()\n    protected _progressColor: cc.Color = new cc.Color(50, 101, 246, 255);\n    @property({ type: cc.Color, tooltip: CC_DEV && '进度颜色' })\n    public get progressColor() {\n        return this._progressColor;\n    }\n    public set progressColor(value: cc.Color) {\n        this._progressColor = value;\n        this.updateProperties();\n    }\n\n    /**\n     * 预计算的开始角度\n     */\n    protected curStartAngle: number = 0;\n\n    /**\n     * 预计算的开始弧度\n     */\n    protected curStartRadians: number = 0;\n\n    /**\n     * 预计算的结束弧度\n     */\n    protected curEndRadians: number = 0;\n\n    /**\n     * 当前缓动对象\n     */\n    protected curTween: cc.Tween = null;\n\n    /**\n     * 当前缓动的 Promise resolve\n     */\n    protected curTweenRes: Function = null;\n\n    /**\n     * 生命周期：加载\n     */\n    protected onLoad() {\n        this.init();\n    }\n\n    /**\n     * 编辑器回调：重置\n     */\n    protected resetInEditor() {\n        this.init();\n    }\n\n    /**\n     * 初始化\n     */\n    protected init() {\n        if (!this.graphics) {\n            this.graphics = this.getComponent(cc.Graphics);\n        }\n        this.updateProperties();\n    }\n\n    /**\n     * 展示\n     */\n    public show() {\n        return new Promise<void>(res => {\n            const node = this.graphics.node;\n            node.opacity = 0;\n            node.active = true;\n            cc.tween(node)\n                .to(0.1, { opacity: 255 })\n                .call(res)\n                .start();\n        });\n    }\n\n    /**\n     * 隐藏\n     */\n    public hide() {\n        return new Promise<void>(res => {\n            const node = this.graphics.node;\n            cc.tween(node)\n                .to(0.1, { opacity: 0 })\n                .set({ active: false })\n                .call(res)\n                .start();\n        });\n    }\n\n    /**\n     * 更新属性\n     */\n    protected updateProperties() {\n        // 设置样式\n        const graphics = this.graphics;\n        graphics.lineWidth = this._lineWidth;\n        graphics.lineCap = this._lineCap;\n        // 预计算角度\n        this.curStartAngle = this._startAngle + 90;\n        this.curStartRadians = this.angleToRadians(this.curStartAngle);\n        const endAngle = this.curStartAngle + (this._clockwise ? -this._range : this._range);\n        this.curEndRadians = this.angleToRadians(endAngle);\n        // 重新绘制进度条\n        this.updateProgress(this._progress);\n    }\n\n    /**\n     * 更新进度\n     * @param value 进度值（0~1）\n     */\n    public updateProgress(value: number) {\n        // 处理并保存值\n        if (value < 0) {\n            value = 0;\n        } else if (value > 1) {\n            value = 1;\n        }\n        this._progress = value;\n\n        // 清空画布\n        const graphics = this.graphics;\n        graphics.clear();\n\n        // 画出背景\n        graphics.strokeColor = this._backgroundColor;\n        graphics.arc(0, 0, this._radius, this.curStartRadians, this.curEndRadians, !this._clockwise);\n        graphics.stroke();\n\n        // 计算并画出进度\n        const offset = this._clockwise ? -this._range : this._range,\n            angle = this.curStartAngle + (offset * value),\n            radians = this.angleToRadians(angle);\n        graphics.strokeColor = this._progressColor;\n        graphics.arc(0, 0, this._radius, this.curStartRadians, radians, !this._clockwise);\n        graphics.stroke();\n    }\n\n    /**\n     * 缓动进度\n     * @param duration 时长\n     * @param progress 目标进度\n     */\n    public to(duration: number, progress: number) {\n        return new Promise<void>(res => {\n            this.stop();\n            this.curTweenRes = res;\n            this.curTween = cc.tween<ArcProgressBar>(this)\n                .to(duration, { progress })\n                .call(() => {\n                    this.curTween = null;\n                    this.curTweenRes = null;\n                })\n                .call(res)\n                .start();\n        });\n    }\n\n    /**\n     * 停止当前缓动\n     */\n    public stop() {\n        if (this.curTween) {\n            this.curTween.stop();\n            this.curTween = null;\n        }\n        if (this.curTweenRes) {\n            this.curTweenRes();\n            this.curTweenRes = null;\n        }\n    }\n\n    /**\n     * 角度转弧度\n     * @param angle 角度\n     */\n    public angleToRadians(angle: number) {\n        return (Math.PI / 180) * angle;\n    }\n\n}\n","/**\r\n * 数组工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20200812\r\n * @see ArrayUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/ArrayUtil.ts\r\n */\r\nexport default class ArrayUtil {\r\n\r\n    /**\r\n     * 复制二维数组\r\n     * @param array 目标数组 \r\n     */\r\n    public static copy2DArray(array: any[][]): any[][] {\r\n        let newArray: any[][] = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            newArray.push(array[i].concat());\r\n        }\r\n        return newArray;\r\n    }\r\n\r\n    /**\r\n    * Fisher-Yates Shuffle 随机置乱算法\r\n    * @param array 目标数组\r\n    */\r\n    public static fisherYatesShuffle(array: any[]): any[] {\r\n        let count = array.length;\r\n        while (count) {\r\n            let index = Math.floor(Math.random() * count--);\r\n            let temp = array[count];\r\n            array[count] = array[index];\r\n            array[index] = temp;\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n    * 混淆数组\r\n    * @param array 目标数组\r\n    */\r\n    public static confound(array: []): any[] {\r\n        let result = array.slice().sort(() => Math.random() - .5);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 数组扁平化\r\n     * @param array 目标数组\r\n     */\r\n    public static flattening(array: any[]) {\r\n        for (; array.some(v => Array.isArray(v));) {    // 判断 array 中是否有数组\r\n            array = [].concat.apply([], array); // 压扁数组\r\n        }\r\n        return array;\r\n    }\r\n\r\n    // /**\r\n    // * 数组去重\r\n    // * @param array 目标数组\r\n    // */\r\n    // public static removeRepeated(array: []): any[] {\r\n    //     let newArray = [...new Set(array)];\r\n    //     return newArray;\r\n    // }\r\n\r\n    /**\r\n    * 合并数组\r\n    * @param array1 目标数组1\r\n    * @param array2 目标数组2\r\n    */\r\n    public static combineArrays(array1: any[], array2: any[]): any[] {\r\n        let newArray = [...array1, ...array2];\r\n        return newArray;\r\n    }\r\n\r\n    /**\r\n    * 获取随机数组成员\r\n    * @param array 目标数组\r\n    */\r\n    public static getRandomValueInArray(array: any[]): any {\r\n        let newArray = array[Math.floor(Math.random() * array.length)];\r\n        return newArray;\r\n    }\r\n    \r\n}\r\n","/**\r\n * 音频播放类\r\n */\r\nexport default class AudioPlayer {\r\n\r\n    private static _music: Map<cc.AudioClip, number> = new Map();\r\n\r\n    private static _effect: Map<number, cc.AudioClip> = new Map();\r\n\r\n    private static _masterVolume: number = 1.0;\r\n\r\n    /**\r\n     * 主音量\r\n     */\r\n    public static get masterVolume(): number { return this._masterVolume; }\r\n\r\n    private static _musicVolume: number = 1.0;\r\n\r\n    /**\r\n     * 音乐音量\r\n     */\r\n    public static get musicVolume(): number { return this._musicVolume; }\r\n\r\n    private static _effectVolume: number = 1.0;\r\n\r\n    /**\r\n     * 特效音量\r\n     */\r\n    public static get effectVolume(): number { return this._effectVolume; }\r\n\r\n    /**\r\n     * 设置主音量\r\n     * @param value 音量值（0.0 ~ 1.0）\r\n     */\r\n    public static setMasterVolume(value: number): void {\r\n        if (value < 0.0) value = 0.0;\r\n        else if (value > 1.0) value = 1.0;\r\n\r\n        this._masterVolume = value;\r\n        this.setMusicVolume(this._musicVolume);\r\n        this.setEffectVolume(this._effectVolume);\r\n    }\r\n\r\n    /**\r\n     * 设置音量（音乐与特效）\r\n     * @param value 音量值（0.0 ~ 1.0）\r\n     */\r\n    public static setVolume(value: number): void {\r\n        this.setMusicVolume(value);\r\n        this.setEffectVolume(value);\r\n    }\r\n\r\n    /**\r\n     * 设置音乐音量\r\n     * @param value 音量值（0.0 ~ 1.0）\r\n     */\r\n    public static setMusicVolume(value: number): void {\r\n        if (value < 0.0) value = 0.0;\r\n        else if (value > 1.0) value = 1.0;\r\n\r\n        this._musicVolume = value;\r\n        let realVolume = this._masterVolume * value;\r\n        this._music.forEach((id, clip) => cc.audioEngine.setVolume(id, realVolume));\r\n    }\r\n\r\n    /**\r\n     * 设置特效音量\r\n     * @param value 音量值（0.0 ~ 1.0）\r\n     */\r\n    public static setEffectVolume(value: number): void {\r\n        if (value < 0.0) value = 0.0;\r\n        else if (value > 1.0) value = 1.0;\r\n\r\n        this._effectVolume = value;\r\n        let realVolume = this._masterVolume * value;\r\n        this._effect.forEach((clip, id) => cc.audioEngine.setVolume(id, realVolume));\r\n    }\r\n\r\n    /**\r\n     * 播放音乐\r\n     * @param clip 音频\r\n     */\r\n    public static playMusic(clip: cc.AudioClip): void {\r\n        if (this._music.has(clip)) this.stopMusic(clip);\r\n        let id = cc.audioEngine.play(clip, true, this._masterVolume * this._musicVolume);\r\n        this._music.set(clip, id);\r\n    }\r\n\r\n    /**\r\n     * 停止音乐\r\n     * @param clip 音频\r\n     */\r\n    public static stopMusic(clip: cc.AudioClip): void {\r\n        if (!this._music.has(clip)) return;\r\n        cc.audioEngine.stop(this._music.get(clip));\r\n        this._music.delete(clip);\r\n    }\r\n\r\n    /**\r\n     * 停止所有音乐\r\n     */\r\n    public static stopAllMusic(): void {\r\n        this._music.forEach((id, clip) => this.stopMusic(clip));\r\n    }\r\n\r\n    /**\r\n     * 暂停音乐\r\n     * @param clip 音频\r\n     */\r\n    public static pauseMusic(clip: cc.AudioClip): void {\r\n        if (!this._music.has(clip)) return;\r\n        cc.audioEngine.pause(this._music.get(clip));\r\n    }\r\n\r\n    /**\r\n     * 暂停所有音乐\r\n     */\r\n    public static pauseAllMusic(): void {\r\n        this._music.forEach((id, clip) => this.pauseMusic(clip));\r\n    }\r\n\r\n    /**\r\n     * 恢复音乐\r\n     * @param clip 音频\r\n     */\r\n    public static resumeMusic(clip: cc.AudioClip): void {\r\n        if (!this._music.has(clip)) return;\r\n        cc.audioEngine.resume(this._music.get(clip));\r\n    }\r\n\r\n    /**\r\n     * 恢复所有音乐\r\n     */\r\n    public static resumeAllMusic(): void {\r\n        this._music.forEach((id, clip) => this.resumeMusic(clip));\r\n    }\r\n\r\n    /**\r\n     * 播放特效音频\r\n     * @param clip 音频\r\n     * @param loop 循环\r\n     */\r\n    public static playEffect(clip: cc.AudioClip, loop: boolean): void {\r\n        let id = cc.audioEngine.play(clip, loop, this._masterVolume * this._effectVolume);\r\n        this._effect.set(id, clip);\r\n        if (!loop) cc.audioEngine.setFinishCallback(id, () => this._effect.delete(id));\r\n    }\r\n\r\n    /**\r\n     * 停止特效音频\r\n     * @param clip 音频\r\n     */\r\n    public static stopEffect(clip: cc.AudioClip): void {\r\n        this._effect.forEach((_clip, id) => {\r\n            if (_clip === clip) {\r\n                cc.audioEngine.stop(id);\r\n                this._effect.delete(id);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 停止所有特效音频\r\n     */\r\n    public static stopAllEffect(): void {\r\n        this._effect.forEach((clip, id) => {\r\n            cc.audioEngine.stop(id);\r\n            this._effect.delete(id);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 暂停特效音频\r\n     * @param clip 音频\r\n     */\r\n    public static pauseEffect(clip: cc.AudioClip): void {\r\n        this._effect.forEach((_clip, id) => _clip === clip && cc.audioEngine.pause(id));\r\n    }\r\n\r\n    /**\r\n     * 暂停所有特效音频\r\n     */\r\n    public static pauseAllEffect(): void {\r\n        this._effect.forEach((clip, id) => cc.audioEngine.pause(id));\r\n    }\r\n\r\n    /**\r\n     * 恢复特效音频\r\n     * @param clip 音频\r\n     */\r\n    public static resumeEffect(clip: cc.AudioClip): void {\r\n        this._effect.forEach((_clip, id) => _clip === clip && cc.audioEngine.resume(id));\r\n    }\r\n\r\n    /**\r\n     * 恢复所有特效音频\r\n     */\r\n    public static resumeAllEffect(): void {\r\n        this._effect.forEach((clip, id) => cc.audioEngine.resume(id));\r\n    }\r\n\r\n    /**\r\n     * 停止所有音频\r\n     */\r\n    public static stopAll(): void {\r\n        this.stopAllMusic();\r\n        this.stopAllEffect();\r\n    }\r\n\r\n    /**\r\n     * 暂停所有音频\r\n     */\r\n    public static pauseAll(): void {\r\n        this.pauseAllMusic();\r\n        this.pauseAllEffect();\r\n    }\r\n\r\n    /**\r\n     * 恢复所有音频\r\n     */\r\n    public static resumeAll(): void {\r\n        this.resumeAllMusic();\r\n        this.resumeAllEffect();\r\n    }\r\n\r\n    /**\r\n     * 静音\r\n     */\r\n    public static mute(): void {\r\n        this.setMasterVolume(0.0);\r\n    }\r\n\r\n}\r\n","import EventManager from \"../core/EventManager\";\r\n\r\nconst { ccclass, executionOrder } = cc._decorator;\r\n\r\n/**\r\n * 背景适配组件\r\n * @see BackgroundFitter.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/BackgroundFitter.ts\r\n * @version 20210504\r\n */\r\n@ccclass\r\n@executionOrder(-99)\r\nexport default class BackgroundFitter extends cc.Component {\r\n\r\n    /**\r\n     * 生命周期：加载\r\n     */\r\n    protected onLoad() {\r\n        this.registerEvent();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：组件启用\r\n     */\r\n    protected onEnable() {\r\n        this.adapt();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：销毁\r\n     */\r\n    protected onDestroy() {\r\n        this.unregisterEvent();\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    protected registerEvent() {\r\n        EventManager.on('view-resize', this.adapt, this);\r\n    }\r\n\r\n    /**\r\n     * 反注册事件\r\n     */\r\n    protected unregisterEvent() {\r\n        EventManager.off('view-resize', this.adapt, this);\r\n    }\r\n\r\n    /**\r\n     * 适配\r\n     */\r\n    protected adapt() {\r\n        // 实际屏幕比例\r\n        const winSize = cc.winSize,\r\n            screenRatio = winSize.height / winSize.width;\r\n        // 设计比例\r\n        const designResolution = cc.Canvas.instance.designResolution,\r\n            designRatio = designResolution.height / designResolution.width;\r\n        // 缩放\r\n        let scale = 1;\r\n        if (screenRatio >= designRatio) {\r\n            scale = winSize.height / designResolution.height;\r\n        } else {\r\n            scale = winSize.width / designResolution.width;\r\n        }\r\n        this.node.scale = scale;\r\n    }\r\n\r\n}\r\n","/**\n * Base64 工具\n * @author 陈皮皮 (ifaswind)\n * @version 20220122\n * @see Base64Util.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/Base64Util.ts\n */\nexport default class Base64Util {\n\n    /**\n     * 将普通文本编码为 Base64 格式文本\n     * @param string \n     * @see\n     */\n    public static encodeString(string: string) {\n        // codes from http://www.webtoolkit.info/javascript-base64.html\n        const keyString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n        let base64 = '';\n        let i = 0;\n        let chr1: number, chr2: number, chr3: number,\n            enc1: number, enc2: number, enc3: number, enc4: number;\n\n        string = Base64Util.encodeUtf8(string);\n\n        while (i < string.length) {\n            chr1 = string.charCodeAt(i++);\n            chr2 = string.charCodeAt(i++);\n            chr3 = string.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n\n            base64 = base64 + keyString.charAt(enc1) + keyString.charAt(enc2) + keyString.charAt(enc3) + keyString.charAt(enc4);\n        }\n\n        return base64;\n    }\n\n    /**\n     * 将 Base64 格式文本解码为普通文本\n     * @param base64 \n     */\n    public static decodeString(base64: string) {\n        // codes from http://www.webtoolkit.info/javascript-base64.html\n        const keyString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n        let string = '';\n        let i = 0;\n        let chr1: number, chr2: number, chr3: number,\n            enc1: number, enc2: number, enc3: number, enc4: number;\n\n        base64 = base64.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < base64.length) {\n            enc1 = keyString.indexOf(base64.charAt(i++));\n            enc2 = keyString.indexOf(base64.charAt(i++));\n            enc3 = keyString.indexOf(base64.charAt(i++));\n            enc4 = keyString.indexOf(base64.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            string = string + String.fromCharCode(chr1);\n\n            if (enc3 != 64) {\n                string = string + String.fromCharCode(chr2);\n            }\n            if (enc4 != 64) {\n                string = string + String.fromCharCode(chr3);\n            }\n        }\n\n        string = Base64Util.decodeUtf8(string);\n\n        return string;\n    }\n\n    /**\n     * 将普通文本编码为 UTF-8 格式文本\n     * @param string \n     */\n    public static encodeUtf8(string: string) {\n        // codes from http://www.webtoolkit.info/javascript-base64.html\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        let utf8 = '';\n\n        for (let i = 0; i < string.length; i++) {\n            const c = string.charCodeAt(i);\n\n            if (c < 128) {\n                utf8 += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utf8 += String.fromCharCode((c >> 6) | 192);\n                utf8 += String.fromCharCode((c & 63) | 128);\n            } else {\n                utf8 += String.fromCharCode((c >> 12) | 224);\n                utf8 += String.fromCharCode(((c >> 6) & 63) | 128);\n                utf8 += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utf8;\n    }\n\n    /**\n     * 将为 UTF-8 格式文本解码为普通文本\n     * @param utf8 \n     */\n    public static decodeUtf8(utf8: string) {\n        // codes from http://www.webtoolkit.info/javascript-base64.html\n        let string = '';\n        let i = 0;\n        let c1 = 0, c2 = 0, c3 = 0;\n\n        while (i < utf8.length) {\n            c1 = utf8.charCodeAt(i);\n\n            if (c1 < 128) {\n                string += String.fromCharCode(c1);\n                i++;\n            } else if ((c1 > 191) && (c1 < 224)) {\n                c2 = utf8.charCodeAt(i + 1);\n                string += String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utf8.charCodeAt(i + 1);\n                c3 = utf8.charCodeAt(i + 2);\n                string += String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n\n    /**\n     * (仅 Web 平台下可用) 将 Base64 文本转为二进制数据\n     * @param base64 \n     */\n    public static base64ToBlob(base64: string) {\n        if (!window || !window.atob) {\n            return null;\n        }\n        const strings = base64.split(',');\n        const type = /image\\/\\w+|;/.exec(strings[0])[0];\n        const data = window.atob(strings[1]);\n        const arrayBuffer = new ArrayBuffer(data.length);\n        const uint8Array = new Uint8Array(arrayBuffer);\n        for (let i = 0; i < data.length; i++) {\n            uint8Array[i] = data.charCodeAt(i) & 0xff;\n        }\n        return new Blob([uint8Array], { type: type });\n    }\n\n}\n\nif (CC_PREVIEW) {\n    window['Base64Util'] = Base64Util;\n}\n","/**\n * 基础顶点装配器\n * @author 陈皮皮 (ifaswind)\n * @version 20210228\n * @see BaseAssembler.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/renderer/BaseAssembler.ts\n */\nexport default class BaseAssembler extends cc.Assembler {\n\n    /**\n     * 每个顶点的数据数量\n     */\n    public floatsPerVert: number = 5;\n\n    /**\n     * 顶点数量\n     */\n    public verticesCount: number = 4;\n\n    /**\n     * 索引数量\n     */\n    public indicesCount: number = 6;\n\n    /**\n     * UV 偏移\n     */\n    public uvOffset: number = 2;\n\n    /**\n     * 颜色偏移\n     */\n    public colorOffset: number = 4;\n\n    /**\n     * 本地坐标顶点数据\n     */\n    public _local: number[] = null;\n\n    /**\n     * 所有顶点的数据总数量\n     */\n    public get verticesFloats() {\n        return this.verticesCount * this.floatsPerVert;\n    }\n\n    constructor() {\n        super();\n        // 创建渲染数据\n        this._renderData = new cc.RenderData();\n        this._renderData.init(this);\n        // 初始化\n        this.initData();\n        this.initLocal();\n    }\n\n    /**\n     * 初始化\n     * @param renderComp \n     */\n    public init(renderComp: cc.RenderComponent) {\n        super.init(renderComp);\n    }\n\n    /**\n     * 初始化渲染数据\n     */\n    public initData() {\n        this._renderData.createQuadData(0, this.verticesFloats, this.indicesCount);\n    }\n\n    /**\n     * 初始化本地坐标数据\n     */\n    public initLocal() {\n        this._local = [];\n        this._local.length = this.verticesCount;\n    }\n\n    /**\n     * 更新渲染数据\n     * @param comp \n     */\n    public updateRenderData(comp: cc.RenderComponent) {\n        if (comp._vertsDirty) {\n            this.updateUVs(comp);\n            this.updateVerts(comp);\n            comp._vertsDirty = false;\n        }\n    }\n\n    /**\n     * 更新颜色数据\n     * @param comp \n     * @param color \n     */\n    public updateColor(comp: cc.RenderComponent, color: number) {\n        const uintVerts = this._renderData.uintVDatas[0];\n        if (!uintVerts) return;\n        color = color != null ? color : comp.node.color._val;\n        const verticesCount = this.verticesCount;\n        const colorOffset = this.colorOffset;\n        const floatsPerVert = this.floatsPerVert;\n        for (let i = 0; i < verticesCount; i++) {\n            uintVerts[colorOffset + (i * floatsPerVert)] = color;\n        }\n    }\n\n    // 更新 UV 数据\n    public updateUVs(comp: cc.RenderComponent) {\n        // 设置纹理 UV 起始值\n        const left = 0, right = 1, bottom = 1, top = 0;\n        const uv: number[] = [];\n        // 左下\n        uv[0] = left;\n        uv[1] = bottom;\n        // 右下\n        uv[2] = right;\n        uv[3] = bottom;\n        // 左上\n        uv[4] = left;\n        uv[5] = top;\n        // 右上\n        uv[6] = right;\n        uv[7] = top;\n\n        // 填充 UV 数据\n        const vData = this._renderData.vDatas[0];\n        const floatsPerVert = this.floatsPerVert;\n        const uvOffset = this.uvOffset;\n        for (let i = 0; i < 4; i++) {\n            const srcOffset = i * 2;\n            const dstOffset = floatsPerVert * i + uvOffset;\n            vData[dstOffset] = uv[srcOffset];\n            vData[dstOffset + 1] = uv[srcOffset + 1];\n        }\n    }\n\n    /**\n     * 更新本地坐标顶点数据\n     * @param comp \n     */\n    public updateVerts(comp: cc.RenderComponent) {\n        const node = comp.node,\n            width = node.width, height = node.height,\n            appX = node.anchorX * width, appY = node.anchorY * height;\n\n        // 依据宽高和锚点位置计算四个顶点的起始值\n        const left = -appX,\n            bottom = -appY,\n            right = width - appX,\n            top = height - appY;\n\n        // 储存本地坐标值\n        const local = this._local;\n        local[0] = left;\n        local[1] = bottom;\n        local[2] = right;\n        local[3] = top;\n\n        // 更新世界坐标下的顶点数据\n        this.updateWorldVerts(comp);\n    }\n\n    /**\n     * 更新世界坐标顶点数据\n     * @param comp \n     */\n    public updateWorldVerts(comp: cc.RenderComponent) {\n        const local = this._local;\n        const verts = this._renderData.vDatas[0];\n\n        // 节点世界矩阵\n        // @ts-ignore\n        const matrix = comp.node._worldMatrix;\n        const matrixData = matrix.m,\n            a = matrixData[0], b = matrixData[1], c = matrixData[4], d = matrixData[5],\n            tx = matrixData[12], ty = matrixData[13];\n\n        // 本地坐标值\n        const vl = local[0], vr = local[2],\n            vb = local[1], vt = local[3];\n\n        const floatsPerVert = this.floatsPerVert;  // 每个顶点的数据个数\n        let vertexOffset = 0;                      // 当前偏移量\n\n        // 是否只是位置变化\n        const justTranslate = a === 1 && b === 0 && c === 0 && d === 1;\n        if (justTranslate) {\n            // 左下\n            verts[vertexOffset] = vl + tx;\n            verts[vertexOffset + 1] = vb + ty;\n            vertexOffset += floatsPerVert;\n            // 右下\n            verts[vertexOffset] = vr + tx;\n            verts[vertexOffset + 1] = vb + ty;\n            vertexOffset += floatsPerVert;\n            // 左上\n            verts[vertexOffset] = vl + tx;\n            verts[vertexOffset + 1] = vt + ty;\n            vertexOffset += floatsPerVert;\n            // 右上\n            verts[vertexOffset] = vr + tx;\n            verts[vertexOffset + 1] = vt + ty;\n        } else {\n            const al = a * vl, ar = a * vr,\n                bl = b * vl, br = b * vr,\n                cb = c * vb, ct = c * vt,\n                db = d * vb, dt = d * vt;\n\n            // 左下\n            verts[vertexOffset] = al + cb + tx;\n            verts[vertexOffset + 1] = bl + db + ty;\n            vertexOffset += floatsPerVert;\n            // 右下\n            verts[vertexOffset] = ar + cb + tx;\n            verts[vertexOffset + 1] = br + db + ty;\n            vertexOffset += floatsPerVert;\n            // 左上\n            verts[vertexOffset] = al + ct + tx;\n            verts[vertexOffset + 1] = bl + dt + ty;\n            vertexOffset += floatsPerVert;\n            // 右上\n            verts[vertexOffset] = ar + ct + tx;\n            verts[vertexOffset + 1] = br + dt + ty;\n        }\n    }\n\n    /**\n     * 将渲染数据填充到全局缓冲区中\n     * @param comp 组件\n     * @param renderer \n     */\n    public fillBuffers(comp: cc.RenderComponent, renderer: ModelBatcher) {\n\n        // 更新顶点数据\n        // @ts-ignore\n        if (renderer.worldMatDirty) {\n            this.updateWorldVerts(comp);\n        }\n\n        const renderData = this._renderData,\n            vData = renderData.vDatas[0],\n            iData = renderData.iDatas[0];\n\n        // 获取缓冲区\n        const buffer = this.getBuffer(),\n            // 通过设定的顶点数量及顶点索引数量获取 buffer 的数据空间\n            offsetInfo = buffer.request(this.verticesCount, this.indicesCount);\n\n        // 填充顶点数据\n        const vertexOffset = offsetInfo.byteOffset >> 2,\n            vertexBuffer = buffer._vData;\n        if (vData.length + vertexOffset > vertexBuffer.length) {\n            vertexBuffer.set(vData.subarray(0, vertexBuffer.length - vertexOffset), vertexOffset);\n        } else {\n            vertexBuffer.set(vData, vertexOffset);\n        }\n\n        // 填充索引数据\n        const indicesBuffer = buffer._iData,\n            vertexId = offsetInfo.vertexOffset;\n        let indicesOffset = offsetInfo.indiceOffset;\n        for (let i = 0, l = iData.length; i < l; i++) {\n            indicesBuffer[indicesOffset++] = vertexId + iData[i];\n        }\n    }\n\n    /**\n     * 获取缓冲区\n     */\n    public getBuffer() {\n        return cc.renderer._handle._meshBuffer;\n    }\n\n    // /**\n    //  * 打包至动态图集\n    //  * @param comp \n    //  * @param frame \n    //  */\n    // public packToDynamicAtlas(comp, frame) {\n    //     if (CC_TEST) return;\n\n    //     if (!frame._original && cc.dynamicAtlasManager && frame._texture.packable) {\n    //         let packedFrame = cc.dynamicAtlasManager.insertSpriteFrame(frame) as unknown as cc.SpriteFrame;\n    //         if (packedFrame) {\n    //             frame._setDynamicAtlasFrame(packedFrame);\n    //         }\n    //     }\n    //     let material = comp._materials[0];\n    //     if (!material) return;\n\n    //     if (material.getProperty('texture') !== frame._texture) {\n    //         // texture was packed to dynamic atlas, should update uvs\n    //         comp._vertsDirty = true;\n    //         comp._updateMaterial();\n    //     }\n    // }\n\n}\n","import BaseAssembler from \"../../core/renderer/BaseAssembler\";\n\nconst { ccclass, property, executeInEditMode, disallowMultiple, help, menu } = cc._decorator;\n\n/**\n * 基础纹理渲染器\n * @author 陈皮皮 (ifaswind)\n * @version 20210228\n * @see BaseTextureRenderer.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/renderers/BaseTextureRenderer.ts\n * @see BaseAssembler.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/renderer/BaseAssembler.ts\n */\n@ccclass\n@executeInEditMode\n@disallowMultiple\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/renderers/BaseTextureRenderer.ts')\n@menu('eazax/渲染组件/BaseTextureRenderer')\nexport default class BaseTextureRenderer extends cc.RenderComponent {\n\n    @property()\n    protected _texture: cc.Texture2D = null;\n    @property({ type: cc.Texture2D, tooltip: CC_DEV && '纹理' })\n    public get texture() {\n        return this._texture;\n    }\n    public set texture(value) {\n        this._texture = value;\n        this._activateMaterial();\n    }\n\n    /**\n     * 顶点装配器\n     */\n    public _assembler: BaseAssembler = null;\n\n    /**\n     * 生命周期：启用\n     */\n    protected onEnable() {\n        super.onEnable();\n        // 节点\n        this.node.on(cc.Node.EventType.SIZE_CHANGED, this.setVertsDirty, this);\n        this.node.on(cc.Node.EventType.ANCHOR_CHANGED, this.setVertsDirty, this);\n    }\n\n    /**\n     * 生命周期：禁用\n     */\n    protected onDisable() {\n        super.onDisable();\n        // 节点\n        this.node.off(cc.Node.EventType.SIZE_CHANGED, this.setVertsDirty, this);\n        this.node.off(cc.Node.EventType.ANCHOR_CHANGED, this.setVertsDirty, this);\n    }\n\n    /**\n     * 重置顶点装配器\n     */\n    public _resetAssembler() {\n        // 装配器\n        this._assembler = new BaseAssembler();\n        this._assembler.init(this);\n        // 标记更新顶点数据\n        this.setVertsDirty();\n    }\n\n    /**\n     * 激活材质\n     */\n    public _activateMaterial() {\n        const materials = this._materials;\n        if (!materials[0]) {\n            materials[0] = this._getDefaultMaterial();\n        }\n        for (let i = 0; i < materials.length; i++) {\n            materials[i] = cc.MaterialVariant.create(materials[i], this);\n        }\n        this._updateMaterial();\n    }\n\n    /**\n     * 更新材质属性\n     */\n    public _updateMaterial() {\n        const texture = this._texture;\n        if (texture) {\n            const material = this.getMaterial(0);\n            if (material) {\n                if (material.getDefine('USE_TEXTURE') !== undefined) {\n                    material.define('USE_TEXTURE', true);\n                }\n                material.setProperty('texture', texture);\n                // 标记为可渲染状态\n                this.markForRender(true);\n                return;\n            }\n        }\n        // 禁用渲染\n        this.disableRender();\n    }\n\n    /**\n     * 验证渲染状态\n     */\n    public _validateRender() {\n        if (!this._texture) {\n            this.disableRender();\n        }\n    }\n\n}\n","const { ccclass, property } = cc._decorator;\n\n/**\n * 弹性移动效果\n * @author 陈皮皮 (ifaswind)\n * @version 20201014\n * @see BounceMoveTween.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/tweens/BounceMoveTween.ts\n */\n@ccclass\nexport default class BounceMoveTween extends cc.Component {\n\n    @property({ tooltip: CC_DEV && '频率（弹跳次数）' })\n    public frequency: number = 4;\n\n    @property({ tooltip: CC_DEV && '衰退指数' })\n    public decay: number = 2;\n\n    private tween: cc.Tween = null;\n\n    start() {\n        this.play(cc.v2(0, 0), 0.5)\n    }\n\n    /**\n     * 播放\n     * @param targetPos 目标位置\n     * @param time 移动时间\n     */\n    public play(targetPos: cc.Vec2, time: number) {\n        this.stop();\n        // 当前位置\n        const curPos = this.node.getPosition();\n        // 方向\n        const direction = targetPos.sub(curPos).normalize();\n        // 时长\n        const bouncingTime = 0.75;  // 弹跳时长\n        // 振幅\n        const amplitude = cc.Vec2.distance(curPos, targetPos) / time;\n        // 播放\n        this.tween = cc.tween(this.node)\n        cc.tween(this.node)\n            .to(time, { x: targetPos.x, y: targetPos.y }, { easing: 'quadIn' })\n            .to(bouncingTime, {\n                position: {\n                    value: cc.v3(targetPos.x, targetPos.y),\n                    progress: (start: cc.Vec3, end: cc.Vec3, current: cc.Vec3, t: number) => {\n                        const pos = direction.mul(-this.getDifference(amplitude, t));\n                        return cc.v3(pos.x, pos.y);\n                    }\n                }\n            })\n            .start();\n    }\n\n    /**\n     * 停止\n     */\n    public stop() {\n        this.tween && this.tween.stop();\n    }\n\n    /**\n     * 获取目标时刻弹性幅度\n     * @param amplitude 幅度\n     * @param time 时间\n     */\n    private getDifference(amplitude: number, time: number) {\n        // 角速度（ω=2nπ）\n        const angularVelocity = this.frequency * Math.PI * 2;\n        return amplitude * (Math.sin(time * angularVelocity) / Math.exp(this.decay * time) / angularVelocity);\n    }\n\n}\n","const { ccclass, property } = cc._decorator;\n\n/**\n * 弹性缩放效果\n * @author 陈皮皮 (ifaswind)\n * @version 20201014\n * @see BounceScaleTween.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/tweens/BounceScaleTween.ts\n */\n@ccclass\nexport default class BounceScaleTween extends cc.Component {\n\n    @property({ tooltip: CC_DEV && '频率（弹跳次数）' })\n    public frequency: number = 4;\n\n    @property({ tooltip: CC_DEV && '衰退指数' })\n    public decay: number = 2;\n\n    @property({ tooltip: CC_DEV && '目标值' })\n    public targetScale: number = 1;\n\n    @property({ tooltip: CC_DEV && '效果总时长' })\n    public totalTime: number = 1;\n\n    @property({ tooltip: CC_DEV && '播放间隔' })\n    public interval: number = 1;\n\n    @property({ tooltip: CC_DEV && '自动播放' })\n    public playOnLoad: boolean = false;\n\n    /** 原始缩放值 */\n    private originalScale: number = 1;\n\n    private tween: cc.Tween = null;\n\n    protected start() {\n        // 记录缩放值\n        this.originalScale = this.node.scale;\n        // 播放\n        if (this.playOnLoad) this.play(this.targetScale);\n    }\n\n    /**\n     * 播放\n     * @param targetScale 目标缩放\n     * @param repeatTimes 重复次数\n     */\n    public play(targetScale: number, repeatTimes?: number) {\n        // 重复次数\n        const times = (repeatTimes != undefined && repeatTimes > 0) ? repeatTimes : 1;\n        // 时长\n        const scalingTime = this.totalTime * 0.25;   // 缩放时长\n        const bouncingTime = this.totalTime * 0.75;  // 弹跳时长\n        // 振幅\n        const amplitude = (targetScale - this.originalScale) / scalingTime;\n        // 播放\n        this.tween = cc.tween(this.node)\n            .repeat(times,\n                cc.tween()\n                    .set({ scale: this.originalScale })\n                    .to(scalingTime, { scale: targetScale })\n                    .to(bouncingTime, {\n                        scale: {\n                            value: targetScale,\n                            progress: (start: number, end: number, current: number, t: number) => {\n                                return end + this.getDifference(amplitude, t);\n                            }\n                        }\n                    })\n                    .delay(this.interval)\n            )\n            .start();\n    }\n\n    /**\n     * 停止\n     */\n    public stop() {\n        this.tween && this.tween.stop();\n        this.node.setScale(this.originalScale);\n    }\n\n    /**\n     * 获取目标时刻弹性幅度\n     * @param amplitude 幅度\n     * @param time 时间\n     */\n    private getDifference(amplitude: number, time: number) {\n        // 角速度（ω=2nπ）\n        const angularVelocity = this.frequency * Math.PI * 2;\n        return amplitude * (Math.sin(time * angularVelocity) / Math.exp(this.decay * time) / angularVelocity);\n    }\n\n}\n","/**\r\n * 浏览器工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210925\r\n * @see BrowserUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/BrowserUtil.ts\r\n */\r\nexport default class BrowserUtil {\r\n\r\n    /**\r\n     * 清除当前 URL 的参数（修改历史记录，不会刷新当前网页）\r\n     */\r\n    public static clearUrlParam(): void {\r\n        if (!window || !window.history) {\r\n            return;\r\n        }\r\n        window.history.replaceState({}, null, '.');\r\n    }\r\n\r\n    /**\r\n     * 设置当前 URL 的参数（修改历史记录，不会刷新当前网页）\r\n     * @param param 参数\r\n     */\r\n    public static setUrlParam(param: string | { key: string, value: string }[]): void {\r\n        if (!window || !window.history) {\r\n            return;\r\n        }\r\n        if (Array.isArray(param)) {\r\n            param = param.map(v => `${v.key}=${v.value}`).join('&');\r\n        }\r\n        window.history.replaceState({}, null, `?${param}`);\r\n    }\r\n\r\n    /**\r\n     * 获取当前 URL 的参数\r\n     * @param key 键\r\n     */\r\n    public static getUrlParam(key: string): string {\r\n        if (!window || !window.location) {\r\n            return null;\r\n        }\r\n        const query = window.location.search.replace('?', '');\r\n        if (query === '') {\r\n            return null;\r\n        }\r\n        const substrings = query.split('&');\r\n        for (let i = 0; i < substrings.length; i++) {\r\n            const keyValue = substrings[i].split('=');\r\n            if (decodeURIComponent(keyValue[0]) === key) {\r\n                return decodeURIComponent(keyValue[1]);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 获取当前 URL 的所有参数\r\n     */\r\n    public static getUrlParams() {\r\n        if (!window || !window.location) {\r\n            return [];\r\n        }\r\n        const query = window.location.search.replace('?', '');\r\n        if (query === '') {\r\n            return [];\r\n        }\r\n        const substrings = query.split('&'),\r\n            params: { key: string, value: string }[] = [];\r\n        for (let i = 0; i < substrings.length; i++) {\r\n            const keyValue = substrings[i].split('=');\r\n            params.push({\r\n                key: keyValue[0],\r\n                value: keyValue[1],\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * 复制文本至设备剪贴板\r\n     * @param value 文本内容\r\n     */\r\n    public static copy(value: string): boolean {\r\n        if (!document) {\r\n            return false;\r\n        }\r\n        // 创建输入元素\r\n        const element = document.createElement('textarea');\r\n        element.readOnly = true;\r\n        element.style.opacity = '0';\r\n        element.value = value;\r\n        document.body.appendChild(element);\r\n        // 选择元素\r\n        element.select();\r\n        // 兼容低版本 iOS 的特殊处理\r\n        const range = document.createRange();\r\n        range.selectNodeContents(element);\r\n        const selection = getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        // 复制\r\n        const result = document.execCommand('copy');\r\n        element.remove();\r\n        return result;\r\n    }\r\n\r\n    // public static copyViaNavigator(value: string) {\r\n    //     return new Promise<boolean>(res => {\r\n    //         if (document.location.protocol === 'https:' || document.location.hostname === 'localhost' || document.location.hostname === '127.0.0.1') {\r\n    //             // navigator.clipboard API 只适用于安全连接\r\n    //             console.log('Copy via navigator.clipboard');\r\n    //             navigator.clipboard.writeText(value)\r\n    //                 .then(() => {\r\n    //                     console.log('Clipboard write success!');\r\n    //                     res(true);\r\n    //                 })\r\n    //                 .catch(err => {\r\n    //                     console.error('Clipboard write failed:', err);\r\n    //                     res(false);\r\n    //                 });\r\n    //         } else {\r\n    //             console.log('Copy via document.execCommand');\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n/**\r\n * 彩色画笔（多彩 Graphics，需搭配 eazax-color-brush.effect 使用）\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210317\r\n * @see ColorBrush.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/ColorBrush.ts\r\n * @see eazax-color-brush.effect https://gitee.com/ifaswind/eazax-ccc/blob/master/resources/effects/eazax-color-brush.effect\r\n */\r\n@ccclass\r\nexport default class ColorBrush extends cc.Component {\r\n\r\n    /**\r\n     * 绘图组件\r\n     */\r\n    protected graphics: cc.Graphics = null;\r\n\r\n    /**\r\n     * 材质\r\n     */\r\n    protected material: cc.Material = null;\r\n\r\n    /**\r\n     * 生命周期：加载\r\n     */\r\n    protected onLoad() {\r\n        this.init();\r\n        this.registerEvent();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：销毁\r\n     */\r\n    protected onDestroy() {\r\n        this.unregisterEvent();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    protected init() {\r\n        const graphics = this.graphics = this.node.getComponent(cc.Graphics) || this.node.addComponent(cc.Graphics);\r\n        // 设置画笔\r\n        graphics.strokeColor = cc.Color.WHITE;\r\n        graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n        graphics.lineCap = cc.Graphics.LineCap.ROUND;\r\n        graphics.lineWidth = 20;\r\n        // 设置材质上的节点尺寸参数\r\n        // 需搭配 eazax-color-brush.effect 使用\r\n        this.material = graphics.getMaterial(0);\r\n        this.material.setProperty('size', this.getNodeSize());\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    protected registerEvent() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n    }\r\n\r\n    /**\r\n     * 反注册事件\r\n     */\r\n    protected unregisterEvent() {\r\n        this.node.targetOff(this);\r\n    }\r\n\r\n    /**\r\n     * 点击开始\r\n     * @param event \r\n     */\r\n    protected onTouchStart(event: cc.Event.EventTouch) {\r\n        const pos = this.node.parent.convertToNodeSpaceAR(event.getLocation()),\r\n            graphics = this.graphics;\r\n        graphics.moveTo(pos.x - 5, pos.y);\r\n        graphics.circle(pos.x - 5, pos.y, 1);\r\n        graphics.stroke();\r\n        graphics.moveTo(pos.x - 5, pos.y);\r\n    }\r\n\r\n    /**\r\n     * 点击移动\r\n     * @param event \r\n     */\r\n    protected onTouchMove(event: cc.Event.EventTouch) {\r\n        const pos = this.node.parent.convertToNodeSpaceAR(event.getLocation()),\r\n            graphics = this.graphics;\r\n        graphics.lineTo(pos.x - 5, pos.y);\r\n        graphics.stroke();\r\n        graphics.moveTo(pos.x - 5, pos.y);\r\n    }\r\n\r\n    /**\r\n     * 获取节点尺寸\r\n     */\r\n    protected getNodeSize() {\r\n        return cc.v2(this.node.width, this.node.height);\r\n    }\r\n\r\n}\r\n","/**\n * 颜色工具\n * @author 陈皮皮 (ifaswind)\n * @version 20211116\n * @see ColorUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/ColorUtil.ts\n */\nexport default class ColorUtil {\n\n    /**\n     * 将 16 进制（hex）颜色字符串转为 RGBA 格式\n     * @param {string} hex \n     * @example\n     * ColorUtil.hexToRgba('#FFFFFF'); // { r: 255, g: 255, b: 255, a: 255 }\n     */\n    public static hexToRgba(hex: string) {\n        if (!ColorUtil.isHex(hex)) {\n            return null;\n        }\n        const r = parseInt(hex.substr(1, 2), 16) || 0,\n            g = parseInt(hex.substr(3, 2), 16) || 0,\n            b = parseInt(hex.substr(5, 2), 16) || 0,\n            a = parseInt(hex.substr(7, 2), 16) || 255;\n        return { r, g, b, a };\n    }\n\n    /**\n     * 将 RGB 或 RGBA 颜色值转为 16 进制（hex）颜色字符串\n     * @param color \n     * @example\n     * const color = {\n     *   r: 255,\n     *   g: 255,\n     *   b: 255,\n     * };\n     * ColorUtil.rgbaToHex(color);  // '#FFFFFF'\n     */\n    public static rgbaToHex(color: { r: number, g: number, b: number, a?: number }) {\n        const r = (color.r | 1 << 8).toString(16).slice(1),\n            g = (color.g | 1 << 8).toString(16).slice(1),\n            b = (color.b | 1 << 8).toString(16).slice(1);\n        if (color.a == undefined) {\n            return `#${r}${g}${b}`.toUpperCase();\n        }\n        const a = (color.a | 1 << 8).toString(16).slice(1);\n        return `#${r}${g}${b}${a}`.toUpperCase();\n    }\n\n    /**\n     * 测试字符串是否为 16 进制（hex）颜色值\n     * @param hex \n     */\n    public static isHex(hex: string) {\n        return /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6}|[0-9a-fA-f]{8})$/.test(hex);\n    }\n\n    // /**\n    //  * 将 16 进制（hex）颜色字符串转为 RGB 格式\n    //  * @param {string} hex \n    //  */\n    // public static hexToRGB(hex: string) {\n    //     // 是否为 HEX 格式\n    //     if (!ColorUtil.isHex(hex)) {\n    //         return null;\n    //     }\n    //     // 四位\n    //     if (hex.length === 4) {\n    //         const r = hex.substr(1, 1),\n    //             g = hex.substr(2, 1),\n    //             b = hex.substr(3, 1);\n    //         hex = `#${r}${r}${g}${g}${b}${b}`;\n    //     }\n    //     // 转换进制\n    //     const rgb = {\n    //         r: parseInt(`0x${hex.substr(1, 2)}`),\n    //         g: parseInt(`0x${hex.substr(3, 2)}`),\n    //         b: parseInt(`0x${hex.substr(5, 2)}`),\n    //     };\n    //     return rgb;\n    // }\n\n}\n","import PopupBase from \"./PopupBase\";\n\nconst { ccclass, property } = cc._decorator;\n\n/**\n * 确认弹窗（PopupBase 使用示例）\n */\n@ccclass\nexport default class ConfirmPopup extends PopupBase<ConfirmPopupOptions> {\n\n    @property(cc.Label)\n    private titleLabel: cc.Label = null;\n\n    @property(cc.Label)\n    private contentLabel: cc.Label = null;\n\n    @property(cc.Node)\n    private confirmBtn: cc.Node = null;\n\n    protected onLoad() {\n        this.registerEvent();\n    }\n\n    protected onDestroy() {\n        this.unregisterEvent();\n    }\n\n    private registerEvent() {\n        this.confirmBtn.on(cc.Node.EventType.TOUCH_END, this.onConfirmBtnClick, this);\n    }\n\n    private unregisterEvent() {\n        this.confirmBtn.targetOff(this);\n    }\n\n    protected init() {\n\n    }\n\n    protected updateDisplay(options: ConfirmPopupOptions): void {\n        this.titleLabel.string = options.title;\n        this.contentLabel.string = options.content;\n    }\n\n    protected onConfirmBtnClick() {\n        this.options.confirmCallback && this.options.confirmCallback();\n        this.hide();\n    }\n\n}\n\n/** 确认弹窗选项 */\nexport interface ConfirmPopupOptions {\n    title: string;\n    content: string;\n    confirmCallback: Function;\n}\n","const { ccclass, property, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Label)\r\nexport default class Counter extends cc.Component {\r\n\r\n    @property({ tooltip: CC_DEV && '动作时间' })\r\n    public time: number = 1;\r\n\r\n    @property({ tooltip: CC_DEV && '保持数值为整数' })\r\n    public keepInteger: boolean = true;\r\n\r\n    private label: cc.Label = null;\r\n\r\n    private _value: number = 0;\r\n    /**\r\n     * 数值\r\n     */\r\n    public get value() { return this._value; }\r\n    public set value(value) {\r\n        if (this.keepInteger) value = Math.floor(value);\r\n        this._value = value;\r\n        this.label.string = value.toString();\r\n    }\r\n\r\n    private tween: cc.Tween<Counter> = null;\r\n\r\n    private lastTarget: number = 0;\r\n\r\n    protected onLoad() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 初始化组件\r\n     */\r\n    private init() {\r\n        this.label = this.getComponent(cc.Label);\r\n        this.value = 0;\r\n    }\r\n\r\n    /**\r\n     * 设置数值\r\n     * @param value 数值\r\n     */\r\n    public setValue(value: number) {\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * 设置时间\r\n     * @param time 时间\r\n     */\r\n    public setTime(time: number) {\r\n        this.time = time;\r\n    }\r\n\r\n    /**\r\n     * 滚动数值\r\n     * @param target 目标值\r\n     * @param time 时间\r\n     * @param callback 完成回调\r\n     */\r\n    public to(target: number, time: number = null, callback?: () => void): Promise<void> {\r\n        return new Promise<void>(res => {\r\n            if (this.tween) {\r\n                this.tween.stop();\r\n                this.tween = null;\r\n            }\r\n            if (time !== null) {\r\n                this.time = time;\r\n            }\r\n            this.lastTarget = target;\r\n            this.tween = cc.tween<Counter>(this)\r\n                .to(this.time, { value: target })\r\n                .call(() => {\r\n                    callback && callback();\r\n                    this.tween = null;\r\n                    res();\r\n                })\r\n                .start();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 相对滚动数值\r\n     * @param diff 差值\r\n     * @param time 时间\r\n     * @param callback 完成回调\r\n     */\r\n    public by(diff: number, time: number = null, callback?: () => void): Promise<void> {\r\n        return new Promise<void>(res => {\r\n            if (this.tween) {\r\n                this.tween.stop();\r\n                this.tween = null;\r\n                this.value = this.lastTarget;\r\n            }\r\n            if (time !== null) {\r\n                this.time = time;\r\n            }\r\n            this.lastTarget = this.value + diff;\r\n            this.tween = cc.tween<Counter>(this)\r\n                .to(this.time, { value: this.lastTarget })\r\n                .call(() => {\r\n                    callback && callback();\r\n                    this.tween = null;\r\n                    res();\r\n                })\r\n                .start();\r\n        });\r\n    }\r\n\r\n}\r\n","/**\n * 调试工具\n * @author 陈皮皮 (ifaswind)\n * @version 20200928\n * @see DebugUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/TimeUtil.ts\n */\nexport default class DebugUtil {\n\n    /**\n     * 打出光彩夺目的日志（黑蓝白配色）\n     * @param title 标题\n     * @param msg 信息\n     */\n    public static log(title: any, msg?: any): void {\n        if (msg) {\n            console.log(\n                `%c ${title} %c ${msg} `,\n                'background: #35495E;padding: 1px;border-radius: 2px 0 0 2px;color: #fff;',\n                'background: #409EFF;padding: 1px;border-radius: 0 2px 2px 0;color: #fff;'\n            );\n        } else {\n            console.log(\n                `%c ${title} `,\n                'background: #409EFF;padding: 1px;border-radius: 0 2px 2px 0;color: #fff;',\n            );\n        }\n    }\n\n    /**\n     * 展示动态图集\n     * @param status 状态\n     */\n    public static showDynamicAtlas(status: boolean = true): cc.Node {\n        return cc.dynamicAtlasManager.showDebug(status);\n    }\n\n    /**\n     * 展示左下角的统计面板\n     * @param status 状态\n     */\n    public static showStats(status: boolean = true): void {\n        cc.debug.setDisplayStats(status);\n    }\n\n    /**\n     * 更改统计面板的文本颜色\n     * @param font 文本颜色\n     */\n    public static setStatsColor(font: cc.Color = cc.Color.WHITE, background: cc.Color = cc.color(0, 0, 0, 150)) {\n        const profiler = cc.find('PROFILER-NODE');\n        if (!profiler) return cc.warn('未找到统计面板节点！');\n\n        // 文字\n        profiler.children.forEach(node => node.color = font);\n\n        // 背景\n        let node = profiler.getChildByName('BACKGROUND');\n        if (!node) {\n            node = new cc.Node('BACKGROUND');\n            profiler.addChild(node, cc.macro.MIN_ZINDEX);\n            node.setContentSize(profiler.getBoundingBoxToWorld());\n            node.setPosition(0, 0);\n        }\n        const graphics = node.getComponent(cc.Graphics) || node.addComponent(cc.Graphics);\n        graphics.clear();\n        graphics.rect(-5, 12.5, node.width + 10, node.height - 10);\n        graphics.fillColor = background;\n        graphics.fill();\n    }\n\n    /**\n     * 上一次渲染帧所提交的渲染批次总数\n     */\n    public static getDrawCalls(): number {\n        return cc.renderer.drawCalls;\n    }\n\n}\n\nif (CC_PREVIEW) {\n    window['DebugUtil'] = DebugUtil;\n}\n","/**\n * 设备工具\n * @author 陈皮皮 (ifaswind)\n * @version 20210120\n * @see DeviceUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/DeviceUtil.ts\n */\nexport default class DeviceUtil {\n\n    /**\n     * 返回手机屏幕安全区域，如果不是异形屏将默认返回设计分辨率尺寸。目前只支持安卓、iOS 原生平台和微信小游戏平台。 \n     */\n    public static getSafeAreaRect() {\n        return cc.sys.getSafeAreaRect();\n    }\n\n    /** 当前平台 */\n    public static get platform() { return cc.sys.platform; }\n\n    /** 当前操作系统 */\n    public static get os() { return cc.sys.os; }\n\n    /** 是否为安卓手机 */\n    public static get isAndroid() { return cc.sys.platform === cc.sys.ANDROID; }\n\n    /** 是否为原生环境 */\n    public static get isNative() { return cc.sys.isNative; }\n\n    /** 是否为浏览器环境 */\n    public static get isBrowser() { return cc.sys.isBrowser; }\n\n    /** 是否为手机 */\n    public static get isMobile() { return cc.sys.isMobile; }\n\n    /** 是否为苹果手机 */\n    public static get isIPhone() { return cc.sys.platform === cc.sys.IPHONE; }\n\n    /** 是否为苹果平板 */\n    public static get isIPad() { return cc.sys.platform === cc.sys.IPAD; }\n\n    /** 是否为手机浏览器 */\n    public static get isMobileBrowser() { return cc.sys.platform === cc.sys.MOBILE_BROWSER; }\n\n    /** 是否为桌面浏览器 */\n    public static get isDesktopBrowser() { return cc.sys.platform === cc.sys.DESKTOP_BROWSER; }\n\n    /** 是否为微信小游戏 */\n    public static get isWeChat() { return cc.sys.platform === cc.sys.WECHAT_GAME; }\n\n    /** 是否为 QQ 小游戏 */\n    public static get isQQPlay() { return cc.sys.platform === cc.sys.QQ_PLAY; }\n\n    /** 是否为字节小游戏 */\n    public static get isByteDance() { return cc.sys.platform === cc.sys.BYTEDANCE_GAME; }\n\n    /** 是否为百度小游戏 */\n    public static get isBaidu() { return cc.sys.platform === cc.sys.BAIDU_GAME; }\n\n    /** 是否为 vivo 小游戏 */\n    public static get isVivo() { return cc.sys.platform === cc.sys.VIVO_GAME; }\n\n    /** 是否为 OPPO 小游戏 */\n    public static get isOPPO() { return cc.sys.platform === cc.sys.OPPO_GAME; }\n\n    /** 是否为小米小游戏 */\n    public static get isXiaomi() { return cc.sys.platform === cc.sys.XIAOMI_GAME; }\n\n    /** 是否为华为小游戏 */\n    public static get isHuawei() { return cc.sys.platform === cc.sys.HUAWEI_GAME; }\n\n    /** 是否为支付宝小游戏 */\n    public static get isAlipay() { return cc.sys.platform === cc.sys.ALIPAY_GAME; }\n\n}\n","const { ccclass, property, help, menu } = cc._decorator;\n\n/**\n * 可拖拽组件\n * @author 陈皮皮 (ifaswind)\n * @version 20220113\n * @see Draggable.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/interaction/Draggable.ts\n */\n@ccclass\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/interaction/Draggable.ts')\n@menu('eazax/交互组件/Draggable')\nexport default class Draggable extends cc.Component {\n\n    @property({ tooltip: CC_DEV && '拖拽触发阈值' })\n    protected dragThreshold: number = 1;\n\n    /**\n     * 触摸开始位置\n     */\n    protected touchStartPos: cc.Vec2 = null;\n\n    /**\n     * 拖拽位置偏移\n     */\n    protected dragOffset: cc.Vec2 = null;\n\n    /**\n     * 拖拽位置偏移\n     */\n    protected isDragging: boolean = false;\n\n    /**\n     * 拖拽事件\n     */\n    public static get EventType() {\n        return EventType;\n    }\n\n    /**\n     * 生命周期：加载\n     */\n    protected onLoad() {\n        this.registerEvent();\n    }\n\n    /**\n     * 生命周期：销毁\n     */\n    protected onDestroy() {\n        this.unregisterEvent();\n    }\n\n    /**\n     * 注册事件\n     */\n    protected registerEvent() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n    }\n\n    /**\n     * 反注册事件\n     */\n    protected unregisterEvent() {\n        this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n        this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n    }\n\n    /**\n     * 触摸开始回调\n     * @param event \n     */\n    protected onTouchStart(event: cc.Event.EventTouch) {\n        // 记录开始位置\n        this.touchStartPos = event.getLocation();\n        // 记录中心偏移\n        const touchPosInNode = this.node.getParent().convertToNodeSpaceAR(event.getLocation());\n        this.dragOffset = touchPosInNode.sub(this.node.getPosition());\n    }\n\n    /**\n     * 触摸移动回调\n     * @param event \n     */\n    protected onTouchMove(event: cc.Event.EventTouch) {\n        if (!this.dragOffset) {\n            return;\n        }\n        // 触摸位置\n        const touchPosInWorld = event.getLocation();\n        const touchPosInNode = this.node.getParent().convertToNodeSpaceAR(touchPosInWorld);\n        // 触摸移动距离（判断是否触发拖拽）\n        if (!this.isDragging && this.dragThreshold !== 0) {\n            const distance = cc.Vec2.distance(this.touchStartPos, touchPosInWorld);\n            if (distance < this.dragThreshold) {\n                return;\n            }\n            // 重新计算中心偏移\n            this.dragOffset = touchPosInNode.sub(this.node.getPosition());\n        }\n        // 移动节点\n        this.node.setPosition(touchPosInNode.sub(this.dragOffset));\n        // 触发回调\n        if (!this.isDragging) {\n            this.isDragging = true;\n            this.onDragStart();\n        } else {\n            this.onDragMove();\n        }\n    }\n\n    /**\n     * 触摸取消回调\n     * @param event \n     */\n    protected onTouchCancel(event: cc.Event.EventTouch) {\n        this.onTouchEnd(event);\n    }\n\n    /**\n     * 触摸结束回调\n     * @param event \n     */\n    protected onTouchEnd(event: cc.Event.EventTouch) {\n        if (!this.dragOffset) {\n            return;\n        }\n        // 重置标志\n        this.touchStartPos = null;\n        this.dragOffset = null;\n        // 触发回调\n        if (this.isDragging) {\n            this.isDragging = false;\n            this.onDragEnd();\n        }\n    }\n\n    /**\n     * 拖拽开始回调\n     */\n    protected onDragStart() {\n\n    }\n\n    /**\n     * 拖拽移动回调\n     */\n    protected onDragMove() {\n\n    }\n\n    /**\n     * 拖拽结束回调\n     */\n    protected onDragEnd() {\n\n    }\n\n}\n\n/**\n * 拖拽事件\n */\nenum EventType {\n    /** 拖拽开始 */\n    DRAG_START = 'drag-start',\n    /** 拖拽移动 */\n    DRAG_MOVE = 'drag-move',\n    /** 拖拽结束 */\n    DRAG_END = 'drag-end',\n}\n","/**\r\n * 编辑器内资源加载类\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20211205\r\n * @see EditorAsset.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/misc/EditorAsset.ts\r\n */\r\nexport default class EditorAsset {\r\n\r\n    /**\r\n     * 在编辑器环境中加载 assets 目录下的资源\r\n     * @param path 相对路径，根目录为 assets/，注意带上文件后缀，如：eazax-sine-wave.effect\r\n     * @param assetType 资源类型，如：effect\r\n     * @param callback 加载完成回调\r\n     * @example \r\n     *  const path = 'eazax-ccc/resources/effects/eazax-sine-wave.effect';\r\n     *  EditorAsset.load(path, 'effect', (err: Error, result: cc.EffectAsset) => {\r\n     *      this.effect = result;\r\n     *  });\r\n     */\r\n    public static load<T>(path: string, assetType: string, callback?: (err: Error, result: T) => void): Promise<T> {\r\n        return new Promise(res => {\r\n            if (!CC_EDITOR) {\r\n                res(null);\r\n                cc.warn('[EditorAsset]', '该函数只在编辑器环境内有效！');\r\n                return;\r\n            }\r\n            Editor.assetdb.queryAssets(`db://assets/${path}`, assetType, (err: Error, results: AssetInfo[]) => {\r\n                if (err) {\r\n                    res(null);\r\n                    callback && callback(new Error('[EditorAsset] 未知错误!'), null);\r\n                    return;\r\n                }\r\n                if (results.length === 0) {\r\n                    res(null);\r\n                    callback && callback(new Error('[EditorAsset] 未找到指定资源!'), null);\r\n                    return;\r\n                }\r\n                if (cc.assetManager && cc.assetManager.loadAny) {\r\n                    cc.assetManager.loadAny({ uuid: results[0].uuid, type: assetType }, (_err: Error, _result: T) => {\r\n                        res(_result);\r\n                        callback && callback(_err, _result);\r\n                    });\r\n                } else {\r\n                    cc.loader.load({ uuid: results[0].uuid, type: assetType }, (_err: Error, _result: T) => {\r\n                        res(_result);\r\n                        callback && callback(_err, _result);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n}\r\n\r\n/** 资源信息 */\r\ninterface AssetInfo {\r\n    destPath: string;\r\n    hidden: boolean;\r\n    isSubAsset: boolean;\r\n    path: string;\r\n    readonly: boolean;\r\n    type: string;\r\n    url: string;\r\n    uuid: string;\r\n}\r\n","/**\n * 事件管理器\n * @see EventManager.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/EventManager.ts\n * @version 20210421\n * @example\n * // 注册事件\n * EventManager.on('game-start', this.onGameStart, this);\n * // 发射事件\n * EventManager.emit('game-start', 666);\n */\nexport default class EventManager {\n\n    /**\n     * 普通事件容器\n     */\n    private static events: Map<string, Subscription[]> = new Map<string, Subscription[]>();\n\n    /**\n     * 一次性事件容器\n     */\n    private static onceEvents: Map<string, Subscription[]> = new Map<string, Subscription[]>();\n\n    /**\n     * 注册事件\n     * @param name 事件名\n     * @param callback 回调\n     * @param target 目标\n     */\n    public static on(name: string, callback: Function, target?: any) {\n        const events = this.events;\n        if (!events.has(name)) {\n            events.set(name, [{ callback, target }]);\n            return;\n        }\n        events.get(name).push({ callback, target });\n    }\n\n    /**\n     * 注册事件（一次性）\n     * @param name 事件名\n     * @param callback 回调\n     * @param target 目标\n     */\n    public static once(name: string, callback: Function, target?: any) {\n        const events = this.onceEvents;\n        if (!events.has(name)) {\n            events.set(name, [{ callback, target }]);\n            return;\n        }\n        events.get(name).push({ callback, target });\n    }\n\n    /**\n     * 取消注册事件\n     * @param name 事件名\n     * @param callback 回调\n     * @param target 目标\n     */\n    public static off(name: string, callback: Function, target?: any) {\n        // 普通事件\n        const event = this.events.get(name);\n        if (event) {\n            for (let i = 0, l = event.length; i < l; i++) {\n                if (this.compare(event[i], callback, target)) {\n                    event.splice(i, 1);\n                    if (event.length === 0) {\n                        this.events.delete(name);\n                    }\n                    break;\n                }\n            }\n        }\n        // 一次性事件\n        const onceEvent = this.onceEvents.get(name);\n        if (onceEvent) {\n            for (let i = 0, l = onceEvent.length; i < l; i++) {\n                if (this.compare(onceEvent[i], callback, target)) {\n                    onceEvent.splice(i, 1);\n                    if (onceEvent.length === 0) {\n                        this.onceEvents.delete(name);\n                    }\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * 通过事件名发送事件\n     * @param name 事件名\n     * @param args 参数\n     */\n    public static emit(name: string, ...args: any[]) {\n        // 普通事件\n        const event = this.events.get(name);\n        if (event) {\n            for (let i = 0; i < event.length; i++) {\n                const { callback, target } = event[i];\n                callback.apply(target, args);\n            }\n        }\n        // 一次性事件\n        const onceEvent = this.onceEvents.get(name);\n        if (onceEvent) {\n            for (let i = 0; i < onceEvent.length; i++) {\n                const { callback, target } = onceEvent[i];\n                callback.apply(target, args);\n            }\n            this.onceEvents.delete(name);\n        }\n    }\n\n    /**\n     * 移除指定事件\n     * @param name 事件名\n     */\n    public static remove(name: string) {\n        // 普通事件\n        if (this.events.has(name)) {\n            this.events.delete(name);\n        }\n        // 一次性事件\n        if (this.onceEvents.has(name)) {\n            this.onceEvents.delete(name);\n        }\n    }\n\n    /**\n     * 移除所有事件\n     */\n    public static removeAll() {\n        // 普通事件\n        this.events.clear();\n        // 一次性事件\n        this.onceEvents.clear();\n    }\n\n    /**\n     * 对比\n     * @param subscription 订阅\n     * @param inCallback 回调\n     * @param inTarget 目标\n     */\n    private static compare(subscription: Subscription, inCallback: Function, inTarget: any) {\n        const { callback, target } = subscription;\n        return target === inTarget && (callback === inCallback || callback.toString() === inCallback.toString());\n    }\n\n}\n\n/** 订阅 */\ninterface Subscription {\n    /** 回调 */\n    callback: Function;\n    /** 目标 */\n    target: any;\n}\n","import EditorAsset from \"../../misc/EditorAsset\";\r\n\r\nconst { ccclass, property, requireComponent, executeInEditMode, disallowMultiple, executionOrder } = cc._decorator;\r\n\r\n/**\r\n * 高斯模糊 Shader 组件，该组件需要对应的 Effect 才能正常使用！\r\n * @see GaussianBlur.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/GaussianBlur.ts\r\n * @see eazax-gaussian-blur-adjustable.effect https://gitee.com/ifaswind/eazax-ccc/blob/master/resources/effects/eazax-gaussian-blur-adjustable.effect\r\n */\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\n@executeInEditMode\r\n@disallowMultiple\r\n@executionOrder(-100)\r\nexport default class GaussianBlur extends cc.Component {\r\n\r\n    @property private _effect: cc.EffectAsset = null;\r\n    @property({ type: cc.EffectAsset, tooltip: CC_DEV && 'Effect 资源', readonly: true })\r\n    public get effect() { return this._effect; }\r\n    public set effect(value: cc.EffectAsset) { this._effect = value; this.init(); }\r\n\r\n    @property private _radius: number = 10;\r\n    @property({ tooltip: CC_DEV && '模糊半径' })\r\n    public get radius() { return this._radius; }\r\n    public set radius(value: number) { this._radius = value > 50 ? 50 : value; this.updateProperties(); }\r\n\r\n    private sprite: cc.Sprite = null;\r\n\r\n    private material: cc.Material = null;\r\n\r\n    protected onLoad() {\r\n        this.init();\r\n    }\r\n\r\n    protected resetInEditor() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    public async init() {\r\n        /**\r\n         * 编辑器环境下自动绑定 Effect 资源\r\n         * 依赖于 EditorAsset 模块，没有该模块请将此代码块以及顶部导入语句去除\r\n         * @see EditorAsset.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/misc/EditorAsset.ts\r\n         */\r\n        if (CC_EDITOR && !this._effect) {\r\n            await new Promise<void>(res => {\r\n                const path = 'eazax-ccc/resources/effects/eazax-gaussian-blur-adjustable.effect';\r\n                EditorAsset.load(path, 'effect', (err: Error, result: cc.EffectAsset) => {\r\n                    if (err) cc.warn(`[${this['__proto__']['__classname__']}]`, '请手动指定组件的 Effect 资源！');\r\n                    else this._effect = result;\r\n                    res();\r\n                });\r\n            });\r\n        }\r\n        if (!this._effect) return;\r\n\r\n        // 使用自定义 Effect 需禁用纹理的 packable 属性（因为动态合图之后无法正确获取纹理 UV 坐标）\r\n        // 详情请看：https://docs.cocos.com/creator/manual/zh/asset-workflow/sprite.html#packable\r\n        this.sprite = this.node.getComponent(cc.Sprite);\r\n        if (this.sprite.spriteFrame) this.sprite.spriteFrame.getTexture().packable = false;\r\n        // 生成并应用材质\r\n        this.material = cc.Material.create(this._effect);\r\n        this.sprite.setMaterial(0, this.material);\r\n        // 更新材质属性\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 更新材质属性\r\n     */\r\n    private updateProperties() {\r\n        this.material.setProperty('size', this.getNodeSize());\r\n        this.material.setProperty('radius', this.radius);\r\n    }\r\n\r\n    /**\r\n     * 获取节点尺寸\r\n     */\r\n    private getNodeSize() {\r\n        return cc.v2(this.node.width, this.node.height);\r\n    }\r\n\r\n}\r\n","/**\n * 几何工具（无优化）\n * @author 陈皮皮 (ifaswind)\n * @version 20220107\n * @see GeometryUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/GeometryUtil.ts\n */\nexport default class GeometryUtil {\n\n    /**\n     * 判断点是否在线段上\n     * @param p 目标点\n     * @param a 线段端点 a\n     * @param b 线段端点 b\n     */\n    public static pointOnLine(p: cc.Vec3, a: cc.Vec3, b: cc.Vec3) {\n        // 使用叉乘判断三点共线\n        const ab = b.sub(a);\n        const ap = p.sub(a);\n        const collinear = (ab.cross(ap).mag() === 0);\n        // 根据斜率判断三点共线\n        // const collinear = ((p.x - a.x) * (b.y - a.y) === (b.x - a.x) * (p.y - a.y));\n        // 确认点不在线段的延长线上\n        const between = (p.x >= Math.min(a.x, b.x) && p.x <= Math.max(a.x, b.x)) &&\n            (p.y >= Math.min(a.y, b.y) && p.y <= Math.max(a.y, b.y));\n        // 满足两个条件则点在线段上\n        return collinear && between;\n    }\n\n    /**\n     * 判断点是否在三角形内（同向法）\n     * @param p 目标点\n     * @param a 三角形顶点 a\n     * @param b 三角形顶点 b\n     * @param c 三角形顶点 c\n     */\n    public static pointInTriangle(p: cc.Vec3, a: cc.Vec3, b: cc.Vec3, c: cc.Vec3) {\n        function sameSide(_p: cc.Vec3, _a: cc.Vec3, _b: cc.Vec3, _c: cc.Vec3) {\n            const ab = _b.sub(_a);\n            const ac = _c.sub(_a);\n            const ap = _p.sub(_a);\n            const v1 = ab.cross(ac);\n            const v2 = ab.cross(ap);\n            return v1.dot(v2) >= 0;\n        }\n        return sameSide(p, a, b, c) && sameSide(p, b, c, a) && sameSide(p, c, a, b);\n        // return (a.x - p.x) * (b.y - p.y) - (b.x - p.x) * (a.y - p.y) >= 0 &&\n        //     (b.x - p.x) * (c.y - p.y) - (c.x - p.x) * (b.y - p.y) >= 0 &&\n        //     (c.x - p.x) * (a.y - p.y) - (a.x - p.x) * (c.y - p.y) >= 0;\n    }\n\n    /**\n     * 获取点到线段的最短距离\n     * @param p 目标点\n     * @param a 线段端点 a\n     * @param b 线段端点 b\n     */\n    public static pointLineDistance(p: cc.Vec3, a: cc.Vec3, b: cc.Vec3) {\n        // 线段向量\n        const ab = b.sub(a);\n        // 斜边向量（由目标点和线段某端点组成）\n        const ap = p.sub(a);\n        // 两线段夹角（弧度制）\n        const radians = cc.Vec3.angle(ab, ap);\n        // 斜边长度\n        const length = ap.mag();\n        // 计算距离\n        const distance = Math.sin(radians) * length;\n        // DONE\n        return distance;\n    }\n\n}\n\nif (CC_PREVIEW) {\n    window['GeometryUtil'] = GeometryUtil;\n}\n","const { ccclass, property, requireComponent, disallowMultiple, executeInEditMode, help, menu } = cc._decorator;\n\n/**\n * 渐变颜色，支持 Sprite（SIMPLE 和 FILLED）和 Label，注意这会覆盖默认的节点颜色设置\n * @author 陈皮皮 (ifaswind)\n * @version 20210125\n * @see GradientColor.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/renderers/GradientColor.ts\n */\n@ccclass\n@requireComponent(cc.RenderComponent)\n@disallowMultiple\n@executeInEditMode\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/renderers/GradientColor.ts')\n@menu('eazax/渲染组件/GradientColor')\nexport default class GradientColor extends cc.Component {\n\n    @property()\n    protected _colors: cc.Color[] = [cc.Color.RED, cc.Color.BLUE, cc.Color.RED, cc.Color.BLUE];\n    @property({ type: [cc.Color], tooltip: CC_DEV && '支持最多 4 种颜色（左下、右下、左上、右上）' })\n    public get colors() {\n        return this._colors;\n    }\n    public set colors(colors) {\n        if (colors.length > 4) {\n            colors.length = 4;\n        }\n        this._colors = colors;\n        this.markForRender();\n    }\n\n    /**\n     * 生命周期：组件启用\n     */\n    protected onEnable() {\n        this.replaceFunction();\n    }\n\n    /**\n     * 生命周期：组件禁用\n     */\n    protected onDisable() {\n        this.restoreFunction();\n    }\n\n    /**\n     * 编辑器回调：重置\n     */\n    protected resetInEditor() {\n        this.markForRender();\n    }\n\n    /**\n     * 替换颜色填充函数\n     */\n    protected replaceFunction() {\n        // 获取渲染组件\n        const renderComponent = this.getComponent(cc.RenderComponent);\n        if (!renderComponent) return;\n        // 获取装配器\n        const assembler = renderComponent._assembler;\n        if (!(assembler instanceof cc.Assembler2D)) return;\n        // 替换颜色填充函数\n        assembler.updateColor = () => {\n            // 获取颜色数据缓存\n            const uintVDatas = assembler._renderData.uintVDatas[0];\n            if (!uintVDatas) return;\n            // 顶点数据\n            const floatsPerVert = assembler.floatsPerVert;  // 每个顶点的数据数量\n            const colorOffset = assembler.colorOffset;      // 颜色偏移\n            const nodeColor = this.node.color;              // 节点颜色\n            let offset = 0;\n            for (let i = colorOffset, l = uintVDatas.length; i < l; i += floatsPerVert) {\n                uintVDatas[i] = (this.colors[offset++] || nodeColor)._val;\n            }\n        }\n        // 标记\n        this.markForRender();\n    }\n\n    /**\n     * 还原颜色填充函数\n     */\n    protected restoreFunction() {\n        // 获取渲染组件\n        const renderComponent = this.getComponent(cc.RenderComponent);\n        if (!renderComponent) return;\n        // 获取装配器\n        const assembler = renderComponent._assembler;\n        if (!(assembler instanceof cc.Assembler2D)) return;\n        // 恢复颜色填充函数\n        assembler.updateColor = cc.Assembler2D.prototype.updateColor;\n        // 标记\n        this.markForRender();\n    }\n\n    /**\n     * 标记\n     */\n    protected markForRender() {\n        this.node._renderFlag |= cc.RenderFlow.FLAG_COLOR;\n    }\n\n}\n","(function(scope){\r\n    scope.Help =  {};\r\n\r\n    //保留小数（不四舍五入）\r\n    Help.preserveDecimal = function(number, precision) {\r\n        const scale = Math.pow(10, precision);\r\n        return (Math.floor(number * scale) / scale).toFixed(precision);\r\n    }\r\n\r\n    //保留小数（不四舍五入）\r\n    Help.truncateToTwoDecimalPlacesAndHideZero = function(num,precision) {\r\n\r\n        var num2 = num.toFixed(precision + 1)\r\n        return Number(num2.substring(0,num2.indexOf('.') + precision + 1))\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n})(window);","import EditorAsset from \"../../misc/EditorAsset\";\r\n\r\nconst { ccclass, property, requireComponent, executeInEditMode, disallowMultiple, executionOrder } = cc._decorator;\r\n\r\n/** 镂空形状 */\r\nexport enum HollowOutShape {\r\n    /** 矩形 */\r\n    Rect = 1,\r\n    /** 圆形 */\r\n    Circle\r\n}\r\n\r\n/**\r\n * [Shader] 挖孔组件，该组件需要对应的 Effect 才能正常使用！\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210429\r\n * @see HollowOut.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/HollowOut.ts\r\n * @see eazax-hollowout.effect https://gitee.com/ifaswind/eazax-ccc/blob/master/resources/effects/eazax-hollowout.effect\r\n */\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\n@executeInEditMode\r\n@disallowMultiple\r\n@executionOrder(-10)\r\nexport default class HollowOut extends cc.Component {\r\n\r\n    @property\r\n    protected _effect: cc.EffectAsset = null;\r\n    @property({ type: cc.EffectAsset, tooltip: CC_DEV && 'Effect 资源', readonly: true })\r\n    public get effect() { return this._effect; }\r\n    public set effect(value: cc.EffectAsset) {\r\n        this._effect = value; this.init();\r\n    }\r\n\r\n    @property\r\n    protected _shape: HollowOutShape = HollowOutShape.Rect;\r\n    @property({ type: cc.Enum(HollowOutShape), tooltip: CC_DEV && '镂空形状' })\r\n    public get shape() { return this._shape; }\r\n    public set shape(value: HollowOutShape) {\r\n        this._shape = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    @property\r\n    protected _center: cc.Vec2 = cc.v2();\r\n    @property({ tooltip: CC_DEV && '中心坐标' })\r\n    public get center() { return this._center; }\r\n    public set center(value: cc.Vec2) {\r\n        this._center = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    @property\r\n    protected _width: number = 300;\r\n    @property({ tooltip: CC_DEV && '宽', visible() { return this._shape === HollowOutShape.Rect; } })\r\n    public get width() { return this._width; }\r\n    public set width(value: number) {\r\n        this._width = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    @property\r\n    protected _height: number = 300;\r\n    @property({ tooltip: CC_DEV && '高', visible() { return this._shape === HollowOutShape.Rect; } })\r\n    public get height() { return this._height; }\r\n    public set height(value: number) {\r\n        this._height = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    @property\r\n    protected _round: number = 1;\r\n    @property({ tooltip: CC_DEV && '圆角半径', visible() { return this._shape === HollowOutShape.Rect; } })\r\n    public get round() { return this._round; }\r\n    public set round(value: number) {\r\n        this._round = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    @property\r\n    protected _radius: number = 200;\r\n    @property({ tooltip: CC_DEV && '半径', visible() { return this._shape === HollowOutShape.Circle; } })\r\n    public get radius() { return this._radius; }\r\n    public set radius(value: number) {\r\n        this._radius = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    @property\r\n    protected _feather: number = 0.5;\r\n    @property({ tooltip: CC_DEV && '边缘虚化宽度', visible() { return this._shape === HollowOutShape.Circle || this.round > 0; } })\r\n    public get feather() { return this._feather; }\r\n    public set feather(value: number) {\r\n        this._feather = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    protected sprite: cc.Sprite = null;\r\n\r\n    protected material: cc.Material = null;\r\n\r\n    protected tweenRes: () => void = null;\r\n\r\n    protected onLoad() {\r\n        this.init();\r\n    }\r\n\r\n    protected resetInEditor() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 初始化组件\r\n     */\r\n    protected async init() {\r\n        /**\r\n         * 编辑器环境下自动绑定 Effect 资源\r\n         * 依赖于 EditorAsset 模块，没有该模块请将此代码块以及顶部导入语句去除\r\n         * @see EditorAsset.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/misc/EditorAsset.ts\r\n         */\r\n        if (CC_EDITOR && !this._effect) {\r\n            await new Promise<void>(res => {\r\n                const path = 'eazax-ccc/resources/effects/eazax-hollowout.effect';\r\n                EditorAsset.load(path, 'effect', (err: Error, result: cc.EffectAsset) => {\r\n                    if (err) {\r\n                        cc.warn(`[${this['__proto__']['__classname__']}]`, '请手动指定组件的 Effect 资源！');\r\n                        res();\r\n                        return;\r\n                    }\r\n                    this._effect = result;\r\n                    res();\r\n                });\r\n            });\r\n        }\r\n        if (!this._effect) return;\r\n\r\n        // 使用自定义 Effect 需禁用纹理的 packable 属性（因为动态合图之后无法正确获取纹理 UV 坐标）\r\n        // 详情请看：https://docs.cocos.com/creator/manual/zh/asset-workflow/sprite.html#packable\r\n        const sprite = this.sprite = this.node.getComponent(cc.Sprite);\r\n        sprite.spriteFrame && (sprite.spriteFrame.getTexture().packable = false);\r\n        // 生成并应用材质\r\n        this.material = cc.Material.create(this._effect);\r\n        sprite.setMaterial(0, this.material);\r\n        // 更新材质属性\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 更新材质属性\r\n     */\r\n    protected updateProperties() {\r\n        switch (this._shape) {\r\n            case HollowOutShape.Rect:\r\n                this.rect(this._center, this._width, this._height, this._round, this._feather);\r\n                break;\r\n            case HollowOutShape.Circle:\r\n                this.circle(this._center, this._radius, this._feather);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 矩形镂空\r\n     * @param center 中心坐标\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @param round 圆角半径\r\n     * @param feather 边缘虚化宽度\r\n     */\r\n    public rect(center?: cc.Vec2, width?: number, height?: number, round?: number, feather?: number) {\r\n        // 保存类型\r\n        this._shape = HollowOutShape.Rect;\r\n        // 确认参数\r\n        if (center != null) {\r\n            this._center = center;\r\n        }\r\n        if (width != null) {\r\n            this._width = width;\r\n        }\r\n        if (height != null) {\r\n            this._height = height;\r\n        }\r\n        if (round != null) {\r\n            this._round = (round >= 0) ? round : 0;\r\n            const min = Math.min(this._width / 2, this._height / 2);\r\n            this._round = (this._round <= min) ? this._round : min;\r\n        }\r\n        if (feather != null) {\r\n            this._feather = (feather >= 0) ? feather : 0;\r\n            this._feather = (this._feather <= this._round) ? this._feather : this._round;\r\n        }\r\n        // 更新材质\r\n        const material = this.material;\r\n        material.setProperty('size', this.getNodeSize());\r\n        material.setProperty('center', this.getCenter(this._center));\r\n        material.setProperty('width', this.getWidth(this._width));\r\n        material.setProperty('height', this.getHeight(this._height));\r\n        material.setProperty('round', this.getRound(this._round));\r\n        material.setProperty('feather', this.getFeather(this._feather));\r\n    }\r\n\r\n    /**\r\n     * 圆形镂空\r\n     * @param center 中心坐标\r\n     * @param radius 半径\r\n     * @param feather 边缘虚化宽度\r\n     */\r\n    public circle(center?: cc.Vec2, radius?: number, feather?: number) {\r\n        // 保存类型\r\n        this._shape = HollowOutShape.Circle;\r\n        // 确认参数\r\n        if (center != null) {\r\n            this._center = center;\r\n        }\r\n        if (radius != null) {\r\n            this._radius = radius;\r\n        }\r\n        if (feather != null) {\r\n            this._feather = (feather >= 0) ? feather : 0;\r\n        }\r\n        // 更新材质\r\n        const material = this.material;\r\n        material.setProperty('size', this.getNodeSize());\r\n        material.setProperty('center', this.getCenter(this._center));\r\n        material.setProperty('width', this.getWidth(this._radius * 2));\r\n        material.setProperty('height', this.getHeight(this._radius * 2));\r\n        material.setProperty('round', this.getRound(this._radius));\r\n        material.setProperty('feather', this.getFeather(this._feather));\r\n    }\r\n\r\n    /**\r\n     * 缓动镂空（矩形）\r\n     * @param time 时间\r\n     * @param center 中心坐标\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @param round 圆角半径\r\n     * @param feather 边缘虚化宽度\r\n     */\r\n    public rectTo(time: number, center: cc.Vec2, width: number, height: number, round: number = 0, feather: number = 0): Promise<void> {\r\n        return new Promise(res => {\r\n            // 保存类型\r\n            this._shape = HollowOutShape.Rect;\r\n            // 停止进行中的缓动\r\n            cc.Tween.stopAllByTarget(this);\r\n            this.unscheduleAllCallbacks();\r\n            // 完成上一个期约\r\n            this.tweenRes && this.tweenRes();\r\n            this.tweenRes = res;\r\n            // 确认参数\r\n            round = Math.min(round, width / 2, height / 2);\r\n            feather = Math.min(feather, round);\r\n            // 缓动\r\n            cc.tween<HollowOut>(this)\r\n                .to(time, {\r\n                    center: center,\r\n                    width: width,\r\n                    height: height,\r\n                    round: round,\r\n                    feather: feather\r\n                })\r\n                .call(() => {\r\n                    this.scheduleOnce(() => {\r\n                        if (this.tweenRes) {\r\n                            this.tweenRes();\r\n                            this.tweenRes = null;\r\n                        }\r\n                    });\r\n                })\r\n                .start();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 缓动镂空（圆形）\r\n     * @param time 时间\r\n     * @param center 中心坐标\r\n     * @param radius 半径\r\n     * @param feather 边缘虚化宽度\r\n     */\r\n    public circleTo(time: number, center: cc.Vec2, radius: number, feather: number = 0): Promise<void> {\r\n        return new Promise(res => {\r\n            // 保存类型\r\n            this._shape = HollowOutShape.Circle;\r\n            // 停止进行中的缓动\r\n            cc.Tween.stopAllByTarget(this);\r\n            this.unscheduleAllCallbacks();\r\n            // 完成上一个期约\r\n            this.tweenRes && this.tweenRes();\r\n            this.tweenRes = res;\r\n            // 缓动\r\n            cc.tween<HollowOut>(this)\r\n                .to(time, {\r\n                    center: center,\r\n                    radius: radius,\r\n                    feather: feather\r\n                })\r\n                .call(() => {\r\n                    this.scheduleOnce(() => {\r\n                        if (this.tweenRes) {\r\n                            this.tweenRes();\r\n                            this.tweenRes = null;\r\n                        }\r\n                    });\r\n                })\r\n                .start();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 取消所有挖孔\r\n     */\r\n    public reset() {\r\n        this.rect(cc.v2(), 0, 0, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * 挖孔设为节点大小（就整个都挖没了）\r\n     */\r\n    public setNodeSize() {\r\n        const node = this.node,\r\n            width = node.width,\r\n            height = node.height;\r\n        this._radius = Math.sqrt(width ** 2 + height ** 2) / 2;\r\n        this.rect(node.getPosition(), width, height, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * 获取中心点\r\n     * @param center \r\n     */\r\n    protected getCenter(center: cc.Vec2) {\r\n        const node = this.node,\r\n            width = node.width,\r\n            height = node.height;\r\n        const x = (center.x + (width / 2)) / width,\r\n            y = (-center.y + (height / 2)) / height;\r\n        return cc.v2(x, y);\r\n    }\r\n\r\n    /**\r\n     * 获取节点尺寸\r\n     */\r\n    protected getNodeSize() {\r\n        return cc.v2(this.node.width, this.node.height);\r\n    }\r\n\r\n    /**\r\n     * 获取挖孔宽度\r\n     * @param width \r\n     */\r\n    protected getWidth(width: number) {\r\n        return width / this.node.width;\r\n    }\r\n\r\n    /**\r\n     * 获取挖孔高度\r\n     * @param height \r\n     */\r\n    protected getHeight(height: number) {\r\n        return height / this.node.width;\r\n    }\r\n\r\n    /**\r\n     * 获取圆角半径\r\n     * @param round \r\n     */\r\n    protected getRound(round: number) {\r\n        return round / this.node.width;\r\n    }\r\n\r\n    /**\r\n     * 获取边缘虚化宽度\r\n     * @param feather \r\n     */\r\n    protected getFeather(feather: number) {\r\n        return feather / this.node.width;\r\n    }\r\n\r\n}\r\n","export const enum IHttpMethod {\n    GET = \"get\",\n    POST = \"post\"\n}\n\n\nexport  class Http {\n\n    //public static Header: Map<any, any> = new Map<any, any>();\n\n    /**\n     * 请求\n     * @param url 链接\n     * @param param 参数\n     * @param callback 回调\n     * @param method 方案\n     * @param https 是否使用 https协议\n     */\n    public static request(url: string, param: Object, callback: (data: any) => void, method: IHttpMethod = IHttpMethod.GET, https?: boolean): void {\n        //this.Header.set(\"Content-Type\", \"text/plain;charset=UTF-8;application/x-www-form-urlencoded;application/json;charset=UTF-8\")\n        switch (method) {\n            case IHttpMethod.GET:\n                \n                this.getRequest(url, param, callback);\n                break;\n            case IHttpMethod.POST:\n                this.postRequest(url, param, callback);\n                break;\n        }\n    }\n\n    /**\n     * GET\n     * @param url 链接\n     * @param param 参数\n     * @param callback 回调\n     * @param https 是否使用 https协议\n     */\n    private static getRequest(url: string, param: Object, callback: (data: any) => void, https?: boolean): void {\n        if (param) {\n            let s = \"?\";\n            for (let key in param) {\n                url += `${s}${key}=${param[key]}`;\n                s = '&';\n            }\n        }\n        url = this.getUrl(url, https);\n        cc.log(`http send:${url}`);\n        let request = new XMLHttpRequest();\n        request.open(IHttpMethod.GET, url, true);\n        this.setRequestHeader(request);\n        request.onreadystatechange = () => {\n            if (request.readyState == 4) {\n                if (request.status >= 200 && request.status < 400) {\n                    callback(request.responseText);\n                } else {\n                    cc.log(`url:(${url}) request error. status:(${request.status})`);\n                    callback(null);\n                }\n            }\n        };\n        request.send();\n    }\n\n    /**\n     * POST\n     * @param url 链接\n     * @param param 参数\n     * @param callback 回调\n     * @param https 是否使用 https协议\n     */\n    private static postRequest(url: string, param: Object, callback: (data: any) => void, https?: boolean): void {\n        let paramStr = \"\";\n        if (param) {\n            let s = \"\";\n            for (let key in param) {\n                paramStr += `${s}${key}=${param[key]}`;\n                s = '&';\n            }\n        }\n        url = this.getUrl(url, https);\n        cc.log(`http send:${url}`);\n        let request = new XMLHttpRequest();\n        request.open(IHttpMethod.POST, url);\n        this.setRequestHeader(request);\n        request.onreadystatechange = () => {\n            if (request.readyState == 4) {\n                if (request.status >= 200 && request.status < 400) {\n                    callback(request.responseText);\n                } else {\n                    cc.log(`${url}msg:${request.status}`);\n                    callback(null);\n                }\n            }else\n            {\n                cc.log(`${url}msg:${request.statusText}`);\n            }\n        };\n        request.send(paramStr);\n    }\n\n    /**\n     * 设置http头\n     * @param request XMLHttpRequest\n     */\n    private static setRequestHeader(request: XMLHttpRequest): void {\n        // request.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8;application/x-www-form-urlencoded;application/json;charset=UTF-8\");\n        request.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        //request.setRequestHeader(\"Cache-Control\", \"no-store\");\n        // this.Header.forEach((value, key) => {\n        //     request.setRequestHeader(key, value);\n        //     cc.log(key)\n        //   });\n    }\n\n    /**\n     * 获取请求链接\n     * @param url 链接\n     * @param https 是否使用 https协议\n     * @returns {string} \n     */\n    private static getUrl(url: string, https: boolean): string {\n        if (https) {\n            if (url.indexOf(\"https\") == -1) {\n                url = url.replace(\"http\", \"https\");\n            }\n        }\n        return url;\n    }\n}","/**\n * 图像工具\n * @author 陈皮皮 (ifaswind)\n * @version 20220122\n * @see ImageUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/ImageUtil.ts\n */\nexport default class ImageUtil {\n\n    /**\n     * 获取图像的透明剪裁尺寸数据（结果基于左上角）\n     * @param data 图像数据\n     * @param width 图像宽度\n     * @param height 图像高度\n     */\n    public static getTrim(data: Uint8Array, width: number, height: number) {\n        let minX = 0, maxX = 0, minY = 0, maxY = 0;\n        let i = 0, j = 0;\n        const lineWidth = width * 4;\n        // 左 -> 右\n        left: {\n            for (i = 0; i < width; i++) {\n                for (j = 0; j < height; j++) {\n                    const index = (lineWidth * j) + (4 * i) + 3;\n                    if (data[index] !== 0) {\n                        break left;\n                    }\n                }\n            }\n        }\n        minX = i;\n        // 右 -> 左\n        right: {\n            for (i = width - 1; i >= 0; i--) {\n                for (j = 0; j < height; j++) {\n                    const index = (lineWidth * j) + (4 * i) + 3;\n                    if (data[index] !== 0) {\n                        break right;\n                    }\n                }\n            }\n        }\n        maxX = i + 1;\n        // 上 -> 下\n        top: {\n            for (i = 0; i < height; i++) {\n                for (j = 0; j < width; j++) {\n                    const index = (lineWidth * i) + (4 * j) + 3;\n                    if (data[index] !== 0) {\n                        break top;\n                    }\n                }\n            }\n        }\n        minY = i;\n        // 下 -> 上\n        bottom: {\n            for (i = height - 1; i >= 0; i--) {\n                for (j = 0; j < width; j++) {\n                    const index = (lineWidth * i) + (4 * j) + 3;\n                    if (data[index] !== 0) {\n                        break bottom;\n                    }\n                }\n            }\n        }\n        maxY = i + 1;\n        // 完成\n        return { minX, maxX, minY, maxY };\n    }\n\n    // ------------------------------ 以下 API 仅 Web 平台下可用 ------------------------------\n\n    /**\n     * (仅 Web 平台下可用) 获取纹理的颜色数据。\n     * @param texture 纹理\n     */\n    public static getPixelsData(texture: cc.Texture2D) {\n        if (!window || !window.document) {\n            return null;\n        }\n        // 获取画布\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        // 调整画布尺寸\n        const { width, height } = texture;\n        canvas.width = width;\n        canvas.height = height;\n        // 将纹理画到画布上\n        const image = texture.getHtmlElementObj();\n        ctx.drawImage(image, 0, 0, width, height);\n        // 获取像素数据\n        const imageData = ctx.getImageData(0, 0, width, height);\n        // 销毁临时对象\n        image.remove();\n        canvas.remove();\n        // 返回 Unit8Array 格式的数据\n        return new Uint8Array(imageData.data);\n    }\n\n    /**\n     * (仅 Web 平台下可用) 获取纹理中指定像素的颜色。原点为左上角，从像素 (0, 0) 开始。\n     * @param texture 纹理\n     * @param x x 坐标\n     * @param y y 坐标\n     * @example\n     * // 获取纹理左上角第一个像素的颜色\n     * const color = ImageUtil.getPixelColor(texture, 0, 0);\n     * // cc.color(50, 100, 123, 255);\n     */\n    public static getPixelColor(texture: cc.Texture2D, x: number, y: number) {\n        if (!window || !window.document) {\n            return null;\n        }\n        const pixelsData = ImageUtil.getPixelsData(texture),\n            width = texture.width;\n        const index = (width * 4 * Math.floor(y)) + (4 * Math.floor(x)),\n            data = pixelsData.slice(index, index + 4),\n            color = cc.color(data[0], data[1], data[2], data[3]);\n        return color;\n    }\n\n    /**\n     * (仅 Web 平台下可用) 将图像转为 Base64 字符（仅 png、jpg 或 jpeg 格式资源）\n     * @param url 图像地址\n     * @param callback 完成回调\n     */\n    public static imageToBase64(url: string, callback?: (dataURL: string) => void) {\n        return new Promise(res => {\n            let extname = /\\.png|\\.jpg|\\.jpeg/.exec(url)?.[0];\n            if (['.png', '.jpg', '.jpeg'].includes(extname)) {\n                const canvas = document.createElement('canvas');\n                const ctx = canvas.getContext('2d');\n                const image = new Image();\n                image.src = url;\n                image.onload = () => {\n                    canvas.height = image.height;\n                    canvas.width = image.width;\n                    ctx.drawImage(image, 0, 0);\n                    extname = extname === '.jpg' ? 'jpeg' : extname.replace('.', '');\n                    const dataURL = canvas.toDataURL(`image/${extname}`);\n                    callback && callback(dataURL);\n                    res(dataURL);\n                    image.remove();\n                    canvas.remove();\n                }\n            } else {\n                console.warn('Not a jpg/jpeg or png resource!');\n                callback && callback(null);\n                res(null);\n            }\n        });\n    }\n\n    /**\n     * (仅 Web 平台下可用) 将 Base64 字符转为 cc.Texture2D 资源\n     * @param base64 Base64 字符\n     */\n    public static base64ToCCTexture(base64: string) {\n        if (!window || !window.document) {\n            return null;\n        }\n        const image = new Image();\n        image.src = base64;\n        const texture = new cc.Texture2D();\n        texture.initWithElement(image);\n        image.remove();\n        return texture;\n    }\n\n}\n","/**\n * 实例事件\n * @see InstanceEvent.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/InstanceEvent.ts\n * @example \n * const startEvent = new InstanceEvent();\n * startEvent.on(this.onStart, this);\n * startEvent.emit();\n * startEvent.off(this.onStart, this);\n */\nexport class InstanceEvent {\n\n    private events: Array<Subscription> = null;\n\n    private onceEvents: Array<Subscription> = null;\n\n    constructor() {\n        this.events = new Array<Subscription>();\n        this.onceEvents = new Array<Subscription>();\n    }\n\n    /**\n     * 监听事件\n     * @param callback 回调\n     * @param target 订阅对象\n     */\n    public on(callback: Function, target?: any) {\n        this.events.push({ callback, target });\n    }\n\n    /**\n     * 监听事件（一次性）\n     * @param callback 回调\n     * @param target 订阅对象\n     */\n    public once(callback: Function, target?: any) {\n        this.onceEvents.push({ callback, target });\n    }\n\n    /**\n     * 取消监听事件\n     * @param callback 回调\n     * @param target 订阅对象\n     */\n    public off(callback: Function, target?: any) {\n        for (let i = 0; i < this.events.length; i++) {\n            if (this.events[i].callback === callback && (!target || this.events[i].target === target)) {\n                this.events.splice(i, 1);\n            }\n        }\n        // 一次性事件\n        for (let i = 0; i < this.onceEvents.length; i++) {\n            if (this.onceEvents[i].callback === callback && (!target || this.onceEvents[i].target === target)) {\n                this.onceEvents.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * 发射事件\n     * @param args 参数\n     */\n    public emit(...args: any[]) {\n        let promises = [];\n        for (let i = 0; i < this.events.length; i++) {\n            promises.push(this.events[i].callback.apply(this.events[i].target, args));\n        }\n        // 一次性事件\n        for (let i = 0; i < this.onceEvents.length; i++) {\n            promises.push(this.onceEvents[i].callback.apply(this.onceEvents[i].target, args));\n        }\n        this.onceEvents.length = 0;\n        return Promise.all(promises);\n    }\n\n    /**\n     * 取消所有监听\n     */\n    public removeAll() {\n        this.events.length = 0;\n        this.onceEvents.length = 0;\n    }\n\n}\n\n/** 订阅 */\ninterface Subscription {\n    callback: Function;\n    target: any;\n}\n","const { ccclass, property } = cc._decorator;\n\n/**\n * 果冻缓动效果\n * @author 陈皮皮 (ifaswind)\n * @version 20201014\n * @see JellyTween.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/tweens/JellyTween.ts\n */\n@ccclass\nexport default class JellyTween extends cc.Component {\n\n    @property({ tooltip: CC_DEV && '频率（弹跳次数）' })\n    public frequency: number = 4;\n\n    @property({ tooltip: CC_DEV && '衰退指数' })\n    public decay: number = 2;\n\n    @property({ tooltip: CC_DEV && '下压缩放' })\n    public pressScale: number = 0.2;\n\n    @property({ tooltip: CC_DEV && '效果总时长' })\n    public totalTime: number = 1;\n\n    @property({ tooltip: CC_DEV && '播放间隔' })\n    public interval: number = 1;\n\n    @property({ tooltip: CC_DEV && '自动播放' })\n    public playOnLoad: boolean = false;\n\n    /** 原始缩放值 */\n    private originalScale: number = 1;\n\n    private tween: cc.Tween = null;\n\n    protected start() {\n        // 记录缩放值\n        this.originalScale = this.node.scale;\n        // 播放\n        if (this.playOnLoad) this.play();\n    }\n\n    /**\n     * 播放\n     * @param repeatTimes 重复次数\n     */\n    public play(repeatTimes?: number) {\n        // 重复次数\n        const times = (repeatTimes != undefined && repeatTimes > 0) ? repeatTimes : 10e8;\n        // 时长\n        const pressTime = this.totalTime * 0.2;         // 收缩时长\n        const scaleBackTime = this.totalTime * 0.15;    // 缩放至原始大小时长\n        const bouncingTime = this.totalTime * 0.65;     // 弹动时长\n        // 振幅\n        const amplitude = this.pressScale / scaleBackTime;\n        // 播放\n        this.tween = cc.tween(this.node)\n            .repeat(times,\n                cc.tween()\n                    .to(pressTime, { scaleX: this.originalScale + this.pressScale, scaleY: this.originalScale - this.pressScale }, { easing: 'sineOut' })\n                    .to(scaleBackTime, { scaleX: this.originalScale, scaleY: this.originalScale })\n                    .to(bouncingTime, {\n                        scaleX: {\n                            value: this.originalScale,\n                            progress: (start: number, end: number, current: number, t: number) => {\n                                return end - this.getDifference(amplitude, t);\n                            }\n                        },\n                        scaleY: {\n                            value: this.originalScale,\n                            progress: (start: number, end: number, current: number, t: number) => {\n                                return end + this.getDifference(amplitude, t);\n                            }\n                        }\n                    })\n                    .delay(this.interval)\n            )\n            .start();\n    }\n\n    /**\n     * 停止\n     */\n    public stop() {\n        this.tween && this.tween.stop();\n        this.node.setScale(this.originalScale);\n    }\n\n    /**\n     * 获取目标时刻弹性幅度\n     * @param amplitude 幅度\n     * @param time 时间\n     */\n    private getDifference(amplitude: number, time: number) {\n        // 角速度（ω=2nπ）\n        const angularVelocity = this.frequency * Math.PI * 2;\n        return amplitude * (Math.sin(time * angularVelocity) / Math.exp(this.decay * time) / angularVelocity);\n    }\n\n}\n","import EventManager from \"../../core/EventManager\";\r\n\r\n/** 语言更改事件 */\r\nexport const LANG_CHANGED = 'lang-change';\r\n\r\n\r\n/** 语言 */\r\nexport enum Lang {\r\n    /** 中文 */\r\n    Cn = 'cn',\r\n    /** 英语 */\r\n    Eng = 'eng',\r\n    /** 巴西 */\r\n    Brasil = 'brasil',\r\n    /** 哥伦比亚 */\r\n    Columbia = 'columbia',  \r\n    /** 西班牙 */\r\n    Spanish = 'spanish',  \r\n}\r\n\r\n/** 默认语言 */\r\nexport enum DefaultLang {\r\n    /** 中文 */\r\n    cn = 1,\r\n    /** 英语 */\r\n    eng,    \r\n    /** 巴西 */\r\n    brasil,\r\n    /** 哥伦比亚 */\r\n    columbia,  \r\n    /** 西班牙 */\r\n    Spanish ,      \r\n}\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n/**\r\n * 多语言组件基类\r\n * @see LocalizationBase.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/localization/LocalizationBase.ts\r\n */\r\n@ccclass\r\nexport default class LocalizationBase<T> extends cc.Component {\r\n\r\n    @property({ type: cc.Enum(DefaultLang), tooltip: CC_DEV && '无当前语言资源时使用的默认语言' })\r\n    protected defaultLang: DefaultLang = DefaultLang.cn;\r\n\r\n    protected curLang: Lang = Lang.Cn;\r\n\r\n    private langChanged: Function = (lang: Lang) => {\r\n        this.curLang = lang;\r\n        this.onLangChanged(lang);\r\n    }\r\n\r\n    protected onLoad() {\r\n        EventManager.on(LANG_CHANGED, this.langChanged, this);\r\n    }\r\n\r\n    protected onDestroy() {\r\n        EventManager.off(LANG_CHANGED, this.langChanged, this);\r\n    }\r\n\r\n    /**\r\n     * 语言更改回调（子类重写该函数以具体实现）\r\n     */\r\n    protected onLangChanged(lang: Lang) {\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取当前语言资源\r\n     */\r\n    protected get(): T {\r\n        if (this[this.curLang]) {\r\n            if (Array.isArray(this[this.curLang]) && this[this.curLang].length === 0) {\r\n                return this[DefaultLang[this.defaultLang]];\r\n            } else {\r\n                return this[this.curLang];\r\n            }\r\n        } else {\r\n            return this[DefaultLang[this.defaultLang]];\r\n        }\r\n    }\r\n\r\n}\r\n","import LocalizationBase,{Lang, DefaultLang } from \"./LocalizationBase\";\r\n\r\n\r\n\r\nconst { ccclass, property, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Label)\r\nexport default class LocalizationLabelString extends LocalizationBase<string> {\r\n    \r\n\r\n    @property()\r\n    private brasil: string = '';\r\n\r\n    @property()\r\n    private columbia: string = '';\r\n\r\n    @property()\r\n    private spanish: string = '';\r\n\r\n    private label: cc.Label = null;\r\n\r\n    protected onLoad() {\r\n        super.onLoad();\r\n        this.defaultLang = DefaultLang.brasil;\r\n        this.curLang = Lang.Brasil;\r\n        this.label = this.node.getComponent(cc.Label);\r\n    }\r\n\r\n    protected onLangChanged() {\r\n        if (this.label) this.label.string = this.get();\r\n    }\r\n\r\n}\r\n","import LocalizationBase from \"./LocalizationBase\";\r\n\r\nconst { ccclass, property, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\nexport default class LocalizationSpriteFrame extends LocalizationBase<cc.SpriteFrame> {\r\n\r\n    @property(cc.SpriteFrame)\r\n    private cn: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    private eng: cc.SpriteFrame = null;\r\n\r\n    private sprite: cc.Sprite = null;\r\n\r\n    protected onLoad() {\r\n        super.onLoad();\r\n\r\n        this.sprite = this.node.getComponent(cc.Sprite);\r\n    }\r\n\r\n    protected onLangChanged() {\r\n        if (this.sprite) this.sprite.spriteFrame = this.get();\r\n    }\r\n\r\n}\r\n","/**\r\n * 节点长按事件（由 LongPress 组件触发）\r\n */\r\nexport const LONG_PRESS: string = 'longpress';\r\n\r\n/**\r\n * 长按触发方式\r\n */\r\nexport enum TriggerWay {\r\n\r\n    /**\r\n     * 到达设定时间后立即触发\r\n     */\r\n    Immediately = 1,\r\n\r\n    /**\r\n     * 触摸结束后触发\r\n     */\r\n    AfterLoosing\r\n\r\n}\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LongPress extends cc.Component {\r\n\r\n    @property({ tooltip: CC_DEV && '长按触发时间（单位：秒）' })\r\n    public trggerTime: number = 2;\r\n\r\n    @property({ type: cc.Enum(TriggerWay), tooltip: CC_DEV && '长按触发方式' })\r\n    public trggerWay: TriggerWay = TriggerWay.Immediately;\r\n\r\n    @property({ type: cc.Component.EventHandler, tooltip: CC_DEV && '长按事件列表' })\r\n    public longPressEvents: cc.Component.EventHandler[] = [];\r\n\r\n    /**\r\n     * 长按是否达成\r\n     */\r\n    private hasAccomplished: boolean = false;\r\n\r\n    protected onEnable() {\r\n        this.registerNodeEvent();\r\n    }\r\n\r\n    protected onDisable() {\r\n        this.unregisterNodeEvent();\r\n    }\r\n\r\n    private registerNodeEvent() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\r\n    }\r\n\r\n    private unregisterNodeEvent() {\r\n        this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\r\n    }\r\n\r\n    private onTouchStart() {\r\n        this.hasAccomplished = false;\r\n        this.scheduleOnce(this.onPressAccomplished.bind(this), this.trggerTime);\r\n    }\r\n\r\n    private onTouchEnd() {\r\n        if (this.hasAccomplished) {\r\n            this.hasAccomplished = false;\r\n            this.trigger();\r\n        }\r\n        this.unscheduleAllCallbacks();\r\n    }\r\n\r\n    private onTouchCancel() {\r\n        if (this.hasAccomplished) {\r\n            this.hasAccomplished = false;\r\n            this.trigger();\r\n        }\r\n        this.unscheduleAllCallbacks();\r\n    }\r\n\r\n    /**\r\n     * 长按达成回调\r\n     */\r\n    private onPressAccomplished() {\r\n        if (this.trggerWay === TriggerWay.Immediately) this.trigger();\r\n        else if (this.trggerWay === TriggerWay.AfterLoosing) this.hasAccomplished = true;\r\n    }\r\n\r\n    /**\r\n     * 触发已注册长按事件\r\n     */\r\n    private trigger() {\r\n        cc.Component.EventHandler.emitEvents(this.longPressEvents, this);\r\n        this.node.emit(LONG_PRESS, this);\r\n    }\r\n\r\n}","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Marquee extends cc.Component {\r\n\r\n    @property({ type: cc.Node, tooltip: CC_DEV && '容器节点' })\r\n    private view: cc.Node = null;\r\n\r\n    @property({ type: cc.RichText, tooltip: CC_DEV && '文本组件' })\r\n    private label: cc.RichText = null;\r\n\r\n    @property({ tooltip: '文本队列' })\r\n    private texts: string[] = [];\r\n\r\n    @property({ tooltip: CC_DEV && '每帧移动的像素' })\r\n    private speed: number = 1;\r\n\r\n    @property({ tooltip: CC_DEV && '循环播放' })\r\n    private loop: boolean = false;\r\n\r\n    @property({ tooltip: CC_DEV && '自动播放' })\r\n    private playOnLoad: boolean = false;\r\n\r\n    private index: number = 0;\r\n\r\n    private isPlaying: boolean = false;\r\n\r\n    private endCallback: Function = null;\r\n\r\n    protected onLoad() {\r\n        this.init();\r\n        this.playOnLoad && this.play(0, this.loop);\r\n    }\r\n\r\n    protected update(dt: number) {\r\n        if (!this.isPlaying || this.texts.length === 0) return;\r\n        this.updatePosition();\r\n    }\r\n\r\n    private init() {\r\n        this.label.node.anchorX = 0;\r\n        this.setLabel('');\r\n    }\r\n\r\n    private updatePosition() {\r\n        this.label.node.x -= this.speed;\r\n        if (this.label.node.x <= -(this.view.width / 2 + this.label.node.width)) this.next();\r\n    }\r\n\r\n    private setLabel(text: string) {\r\n        this.label.string = text;\r\n        this.label.node.x = this.view.width / 2;\r\n    }\r\n\r\n    private next() {\r\n        this.index++;\r\n        if (this.index >= this.texts.length) {\r\n            if (this.loop) {\r\n                this.index = 0;\r\n                this.setLabel(this.texts[0]);\r\n            } else {\r\n                if (this.endCallback) {\r\n                    this.endCallback();\r\n                    this.endCallback = null;\r\n                }\r\n                this.clean();\r\n            }\r\n        } else {\r\n            this.setLabel(this.texts[this.index]);\r\n        }\r\n    }\r\n\r\n    public push(texts: string[]) {\r\n        if (Array.isArray(texts)) this.texts.push(...texts);\r\n        else this.texts.push(texts);\r\n    }\r\n\r\n    public play(index: number = 0, loop: boolean = false, callback: Function = null) {\r\n        if (this.texts.length === 0) return;\r\n\r\n        this.index = index < this.texts.length ? index : 0;\r\n        this.setLabel(this.texts[this.index]);\r\n\r\n        this.loop = loop;\r\n        this.endCallback = callback;\r\n\r\n        this.isPlaying = true;\r\n    }\r\n\r\n    public stop() {\r\n        this.isPlaying = false;\r\n        this.index = 0;\r\n    }\r\n\r\n    public pause() {\r\n        this.isPlaying = false;\r\n    }\r\n\r\n    public resume() {\r\n        this.isPlaying = true;\r\n    }\r\n\r\n    public clean() {\r\n        this.stop();\r\n        this.index = 0;\r\n        this.texts = [];\r\n        this.endCallback = null;\r\n    }\r\n}\r\n","/**\r\n * 数学工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20201019\r\n * @see MathUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/MathUtil.ts\r\n */\r\nexport default class MathUtil {\r\n\r\n    /**\r\n    * 获取一个 min 到 max 范围内的随机整数\r\n    * @param min 最小值\r\n    * @param max 最大值\r\n    */\r\n    public static getRandomInt(min: number = 0, max: number = 1): number {\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    /**\r\n     * 获取一个伪随机整数\r\n     * @param seed 随机种子\r\n     * @param key key\r\n     */\r\n    public static getPseudoRandomInt(seed: number, key: number): number {\r\n        return Math.ceil((((seed * 9301 + 49297) % 233280) / 233280) * key);\r\n    }\r\n\r\n    /**\r\n     * 获取两点间的角度\r\n     * @param p1 点1\r\n     * @param p2 点2\r\n     */\r\n    public static getAngle(p1: cc.Vec2, p2: cc.Vec2): number {\r\n        return Math.atan((p2.y - p1.y) / (p2.x - p1.x));\r\n    }\r\n\r\n    /**\r\n     * 获取两点间的距离\r\n     * @param p1 点1\r\n     * @param p2 点2\r\n     */\r\n    public static getDistance(p1: cc.Vec2, p2: cc.Vec2): number {\r\n        return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\r\n    }\r\n\r\n    /**\r\n     * 将角度转为弧度\r\n     * @param angle 角度\r\n     */\r\n    public static angleToRadian(angle: number): number {\r\n        return angle * Math.PI / 180;\r\n    }\r\n\r\n    /**\r\n     * 浮点数加法运算（避免浮点数加法精度问题）\r\n     * @param a 数\r\n     * @param b 数\r\n     */\r\n    public static addSafely(a: number, b: number): number {\r\n        const aDigits = (a.toString().split('.')[1] || '').length;\r\n        const bDigits = (b.toString().split('.')[1] || '').length;\r\n        const multiplier = Math.pow(10, Math.max(aDigits, bDigits));\r\n        return (a * multiplier + b * multiplier) / multiplier;\r\n    }\r\n\r\n}\r\n","import EditorAsset from \"../../misc/EditorAsset\";\r\n\r\nconst { ccclass, property, requireComponent, executeInEditMode, disallowMultiple } = cc._decorator;\r\n\r\n/**\r\n * 马赛克 Shader 组件，该组件需要对应的 Effect 才能正常使用！\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20211205\r\n * @see Mosaic.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/Mosaic.ts\r\n * @see eazax-mosaic.effect https://gitee.com/ifaswind/eazax-ccc/blob/master/resources/effects/eazax-mosaic.effect\r\n */\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\n@executeInEditMode\r\n@disallowMultiple\r\nexport default class Mosaic extends cc.Component {\r\n\r\n    @property()\r\n    protected _effect: cc.EffectAsset = null;\r\n    @property({ type: cc.EffectAsset, tooltip: CC_DEV && 'Effect 资源' })\r\n    public get effect() {\r\n        return this._effect;\r\n    }\r\n    public set effect(value: cc.EffectAsset) {\r\n        this._effect = value;\r\n        this.init();\r\n    }\r\n\r\n    @property()\r\n    protected _size: cc.Size = new cc.Size(20, 20);\r\n    @property({ tooltip: CC_DEV && '马赛克尺寸' })\r\n    public get size() {\r\n        return this._size;\r\n    }\r\n    public set size(value) {\r\n        this._size = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 输出精灵\r\n     */\r\n    protected sprite: cc.Sprite = null;\r\n\r\n    /**\r\n     * 材质\r\n     */\r\n    protected material: cc.Material = null;\r\n\r\n    /**\r\n     * 生命周期：组件启用\r\n     */\r\n    protected onEnable() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 编辑器回调：重置\r\n     */\r\n    protected resetInEditor() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    protected async init() {\r\n        /**\r\n         * 编辑器环境下自动绑定 Effect 资源\r\n         * 依赖于 EditorAsset 模块，没有该模块请将此代码块以及顶部导入语句去除\r\n         * @see EditorAsset.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/misc/EditorAsset.ts\r\n         */\r\n        if (CC_EDITOR && !this._effect) {\r\n            const path = 'eazax-ccc/resources/effects/eazax-mosaic.effect';\r\n            this._effect = await EditorAsset.load(path, 'effect');\r\n        }\r\n        if (!this._effect) {\r\n            cc.warn(`[${this['__proto__']['__classname__']}]`, '请手动指定组件的 Effect 资源！');\r\n            return;\r\n        }\r\n\r\n        // 使用自定义 Effect 需禁用纹理的 packable 属性（因为动态合图之后无法正确获取纹理 UV 坐标）\r\n        // 详情请看：https://docs.cocos.com/creator/manual/zh/asset-workflow/sprite.html#packable\r\n        this.sprite = this.node.getComponent(cc.Sprite);\r\n        if (this.sprite.spriteFrame) {\r\n            this.sprite.spriteFrame.getTexture().packable = false;\r\n        }\r\n        // 生成并应用材质\r\n        if (!this.material) {\r\n            this.material = cc.Material.create(this._effect);\r\n        }\r\n        this.sprite.setMaterial(0, this.material);\r\n        // 更新材质属性\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 更新材质属性\r\n     */\r\n    public updateProperties() {\r\n        if (!this.material) return\r\n        this.material.setProperty('resolution', this.resolution);\r\n        this.material.setProperty('tileSize', this.tileSize);\r\n    }\r\n\r\n    /**\r\n     * 设置马赛克尺寸\r\n     * @param width 宽\r\n     * @param height 高\r\n     */\r\n    public set(width: number, height?: number) {\r\n        this.size.width = width;\r\n        this.size.height = height ?? width;\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 缓动至目标尺寸\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @param duration 时长\r\n     */\r\n    public to(width: number, height: number, duration?: number) {\r\n        return new Promise<void>(res => {\r\n            if (duration == undefined) {\r\n                duration = height;\r\n                height = width;\r\n            }\r\n            cc.tween<Mosaic>(this)\r\n                .to(duration, { size: cc.size(width, height) })\r\n                .call(res)\r\n                .start();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 分辨率\r\n     */\r\n    public get resolution() {\r\n        return cc.v2(this.node.width, this.node.height);\r\n    }\r\n\r\n    /**\r\n     * 马赛克尺寸\r\n     */\r\n    public get tileSize() {\r\n        return cc.v2(this._size.width, this._size.height);\r\n    }\r\n\r\n}\r\n","/**\r\n * 节点工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20211208\r\n * @see NodeUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/NodeUtil.ts\r\n */\r\n export default class NodeUtil {\r\n\r\n    /**\r\n     * 获取节点在目标节点（容器）下的相对位置\r\n     * @param node 节点\r\n     * @param container 目标节点（容器）\r\n     */\r\n    public static getRelativePosition(node: cc.Node, container: cc.Node): cc.Vec2 {\r\n        const worldPos = (node.getParent() || node).convertToWorldSpaceAR(node.getPosition());\r\n        return container.convertToNodeSpaceAR(worldPos);\r\n    }\r\n\r\n    /**\r\n     * 坐标是否在目标节点范围内\r\n     * @param pos 坐标\r\n     * @param target 目标节点\r\n     */\r\n    public static isPosOnNodeRect(pos: cc.Vec2, target: cc.Node): boolean {\r\n        const rect = target.getBoundingBoxToWorld();\r\n        return rect.contains(pos);\r\n    }\r\n\r\n    /**\r\n     * 两个节点是否重叠\r\n     * @param node1 节点 1\r\n     * @param node2 节点 2\r\n     * @param contains 是否完全包含\r\n     */\r\n    public static areNodesOverlap(node1: cc.Node, node2: cc.Node, contains: boolean = false): boolean {\r\n        const rect1 = node1.getBoundingBoxToWorld(),\r\n            rect2 = node2.getBoundingBoxToWorld();\r\n        return contains ? rect1.containsRect(rect2) : rect1.intersects(rect2);\r\n    }\r\n\r\n    /**\r\n     * 获取节点本身在世界坐标系下的对齐轴向的包围盒（不包含子节点）\r\n     * @param node 节点\r\n     */\r\n    public static getNodeSelfBoundingBoxToWorld(node: cc.Node) {\r\n        node.parent['_updateWorldMatrix']();\r\n        const { width, height } = node.getContentSize(),\r\n            anchorPoint = node.getAnchorPoint(),\r\n            rect = cc.rect(\r\n                -anchorPoint.x * width,\r\n                -anchorPoint.y * height,\r\n                width,\r\n                height\r\n            );\r\n        node['_calculWorldMatrix']();\r\n        rect.transformMat4(rect, node['_worldMatrix']);\r\n        return rect;\r\n    }\r\n\r\n}\r\n","/**\r\n * 对象工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20211125\r\n * @see ObjectUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/ObjectUtil.ts\r\n */\r\n export default class ObjectUtil {\r\n\r\n    /**\r\n     * 判断指定的值是否为对象\r\n     * @param value 值\r\n     */\r\n    public static isObject(value: any): boolean {\r\n        return Object.prototype.toString.call(value) === '[object Object]';\r\n    }\r\n\r\n    /**\r\n     * 深拷贝\r\n     * @param target 目标\r\n     */\r\n    public static deepCopy(target: any): any {\r\n        if (target == null || typeof target !== 'object') {\r\n            return target;\r\n        }\r\n\r\n        if (target instanceof Array) {\r\n            const result = [];\r\n            for (let i = 0, length = target.length; i < length; i++) {\r\n                result[i] = ObjectUtil.deepCopy(target[i]);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        if (target instanceof Object) {\r\n            const result = {};\r\n            for (const key in target) {\r\n                if (target.hasOwnProperty(key)) {\r\n                    result[key] = ObjectUtil.deepCopy(target[key]);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n        if (target instanceof Date) {\r\n            return (new Date()).setTime(target.getTime());\r\n        }\r\n\r\n        console.warn(`不支持的类型：${target}`);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 拷贝对象\r\n     * @param target 目标\r\n     */\r\n    public static copy(target: object): object {\r\n        return JSON.parse(JSON.stringify(target));\r\n    }\r\n\r\n}\r\n","const { ccclass, executionOrder, menu } = cc._decorator;\n\n@ccclass\n@executionOrder(-1)\n@menu('eazax/其他组件/PersistNode')\nexport default class PersistNode extends cc.Component {\n\n    /**\n     * 生命周期：加载\n     */\n    protected onLoad() {\n        this.node.setParent(cc.director.getScene());\n        cc.game.addPersistRootNode(this.node);\n    }\n\n}\n","const { ccclass, property } = cc._decorator;\n\n/**\n * 弹窗基类\n * @see PopupBase.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/popups/PopupBase.ts\n * @see PopupManager.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/PopupManager.ts\n * @version 20210409\n */\n@ccclass\nexport default class PopupBase<Options = any> extends cc.Component {\n\n    @property({ type: cc.Node, tooltip: CC_DEV && '背景遮罩' })\n    public background: cc.Node = null;\n\n    @property({ type: cc.Node, tooltip: CC_DEV && '弹窗主体' })\n    public main: cc.Node = null;\n\n    /** 展示/隐藏动画的时长 */\n    public animDuration: number = 0.3;\n\n    /** 用于拦截点击的节点 */\n    protected blocker: cc.Node = null;\n\n    /** 弹窗选项 */\n    protected options: Options = null;\n\n    /**\n     * 展示弹窗\n     * @param options 弹窗选项\n     * @param duration 动画时长\n     */\n    public show(options?: Options, duration: number = this.animDuration) {\n        return new Promise<void>(res => {\n            // 储存选项\n            this.options = options;\n            // 初始化节点\n            const background = this.background,\n                main = this.main;\n            this.node.active = true;\n            background.active = true;\n            background.opacity = 0;\n            main.active = true;\n            main.scale = 0.5;\n            main.opacity = 0;\n            // 初始化\n            this.init(this.options);\n            // 更新样式\n            this.updateDisplay(this.options);\n            // 播放背景遮罩动画\n            cc.tween(background)\n                .to(duration * 0.8, { opacity: 200 })\n                .start();\n            // 播放弹窗主体动画\n            cc.tween(main)\n                .to(duration, { scale: 1, opacity: 255 }, { easing: 'backOut' })\n                .call(() => {\n                    // 弹窗已完全展示\n                    this.onShow && this.onShow();\n                    // Done\n                    res();\n                })\n                .start();\n        });\n    }\n\n    /**\n     * 隐藏弹窗\n     * @param suspended 是否被挂起\n     * @param duration 动画时长\n     */\n    public hide(suspended: boolean = false, duration: number = this.animDuration) {\n        return new Promise<void>(res => {\n            const node = this.node;\n            // 动画时长不为 0 时拦截点击事件（避免误操作）\n            if (duration !== 0) {\n                let blocker = this.blocker;\n                if (!blocker) {\n                    blocker = this.blocker = new cc.Node('blocker');\n                    blocker.addComponent(cc.BlockInputEvents);\n                    blocker.setParent(node);\n                    blocker.setContentSize(node.getContentSize());\n                }\n                blocker.active = true;\n            }\n            // 播放背景遮罩动画\n            cc.tween(this.background)\n                .delay(duration * 0.2)\n                .to(duration * 0.8, { opacity: 0 })\n                .start();\n            // 播放弹窗主体动画\n            cc.tween(this.main)\n                .to(duration, { scale: 0.5, opacity: 0 }, { easing: 'backIn' })\n                .call(() => {\n                    // 关闭拦截\n                    this.blocker && (this.blocker.active = false);\n                    // 关闭节点\n                    node.active = false;\n                    // 弹窗已完全隐藏（动画完毕）\n                    this.onHide && this.onHide(suspended);\n                    // Done\n                    res();\n                    // 弹窗完成回调\n                    this.finishCallback && this.finishCallback(suspended);\n                })\n                .start();\n        });\n    }\n\n    /**\n     * 初始化（派生类请重写此函数以实现自定义逻辑）\n     */\n    protected init(options: Options) { }\n\n    /**\n     * 更新样式（派生类请重写此函数以实现自定义样式）\n     * @param options 弹窗选项\n     */\n    protected updateDisplay(options: Options) { }\n\n    /**\n     * 弹窗已完全展示（派生类请重写此函数以实现自定义逻辑）\n     */\n    protected onShow() { }\n\n    /**\n     * 弹窗已完全隐藏（派生类请重写此函数以实现自定义逻辑）\n     * @param suspended 是否被挂起\n     */\n    protected onHide(suspended: boolean) { }\n\n    /**\n     * 弹窗流程结束回调（注意：该回调为 PopupManager 专用，重写 hide 函数时记得调用该回调）\n     */\n    protected finishCallback: (suspended: boolean) => void = null;\n\n    /**\n     * 设置弹窗完成回调（该回调为 PopupManager 专用）\n     * @param callback 回调\n     */\n    public setFinishCallback(callback: (suspended: boolean) => void) {\n        this.finishCallback = callback;\n    }\n\n}\n","import PopupBase from \"../components/popups/PopupBase\";\n\n/** 弹窗缓存模式 */\nenum CacheMode {\n    /** 一次性的（立即销毁节点，预制体资源随即释放） */\n    Once = 1,\n    /** 正常的（立即销毁节点，但是缓存预制体资源） */\n    Normal,\n    /** 频繁的（只关闭节点，且缓存预制体资源） */\n    Frequent\n}\n\n/** 弹窗请求结果 */\nenum ShowResult {\n    /** 展示成功（已关闭） */\n    Done = 1,\n    /** 展示失败（加载失败） */\n    Failed,\n    /** 等待中（已加入等待队列） */\n    Waiting\n}\n\n/**\n * 弹窗管理器\n * @author 陈皮皮 (ifaswind)\n * @version 20210918\n * @see PopupManager.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/PopupManager.ts\n * @see PopupBase.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/popups/PopupBase.ts\n */\nexport default class PopupManager {\n\n    /** 预制体缓存 */\n    public static get prefabCache() { return this._prefabCache; }\n    private static _prefabCache: Map<string, cc.Prefab> = new Map<string, cc.Prefab>();\n\n    /** 节点缓存 */\n    public static get nodeCache() { return this._nodeCache; }\n    private static _nodeCache: Map<string, cc.Node> = new Map<string, cc.Node>();\n\n    /** 当前弹窗请求 */\n    public static get current() { return this._current; }\n    private static _current: PopupRequestType = null;\n\n    /** 等待队列 */\n    public static get queue() { return this._queue; }\n    private static _queue: PopupRequestType[] = [];\n\n    /** 被挂起的弹窗队列 */\n    public static get suspended() { return this._suspended; }\n    private static _suspended: PopupRequestType[] = [];\n\n    /** 锁定状态 */\n    private static locked: boolean = false;\n\n    /** 用于存放弹窗节点的容器节点（不设置则默认为当前 Canvas） */\n    public static container: cc.Node = null;\n\n    /** 连续展示弹窗的时间间隔（秒） */\n    public static interval: number = 0.05;\n\n    /** 弹窗缓存模式 */\n    public static get CacheMode() {\n        return CacheMode;\n    }\n\n    /** 弹窗请求结果类型 */\n    public static get ShowResult() {\n        return ShowResult;\n    }\n\n    /**\n     * 弹窗动态加载开始回调\n     * @example\n     * PopupManager.loadStartCallback = () => {\n     *     LoadingTip.show();\n     * };\n     */\n    public static loadStartCallback: () => void = null;\n\n    /**\n     * 弹窗动态加载结束回调\n     * @example\n     * PopupManager.loadFinishCallback = () => {\n     *     LoadingTip.hide();\n     * };\n     */\n    public static loadFinishCallback: () => void = null;\n\n    /**\n     * 展示弹窗，如果当前已有弹窗在展示中则加入等待队列\n     * @param path 弹窗预制体相对路径（如：prefabs/MyPopup）\n     * @param options 弹窗选项（将传递给弹窗的组件）\n     * @param params 弹窗展示参数\n     * @example\n     * const options = {\n     *     title: 'Hello',\n     *     content: 'This is a popup!'\n     * };\n     * const params = {\n     *     mode: PopupCacheMode.Normal\n     * };\n     * PopupManager.show('prefabs/MyPopup', options, params);\n     */\n    public static show<Options>(path: string, options?: Options, params?: PopupParamsType): Promise<ShowResult> {\n        return new Promise(async res => {\n            // 解析处理参数\n            params = this.parseParams(params);\n            // 当前已有弹窗在展示中则加入等待队列\n            if (this._current || this.locked) {\n                // 是否立即强制展示\n                if (params && params.immediately) {\n                    this.locked = false;\n                    // 挂起当前弹窗\n                    await this.suspend();\n                } else {\n                    // 将请求推入等待队列\n                    this.push(path, options, params);\n                    res(ShowResult.Waiting);\n                    return;\n                }\n            }\n            // 保存为当前弹窗，阻止新的弹窗请求\n            this._current = {\n                path,\n                options,\n                params\n            };\n            // 先在缓存中获取弹窗节点\n            let node = this.getNodeFromCache(path);\n            // 缓存中没有，动态加载预制体资源\n            if (!cc.isValid(node)) {\n                // 开始回调\n                this.loadStartCallback && this.loadStartCallback();\n                // 等待加载\n                const prefab = await this.load(path);\n                // 完成回调\n                this.loadFinishCallback && this.loadFinishCallback();\n                // 加载失败（一般是路径错误导致的）\n                if (!cc.isValid(prefab)) {\n                    cc.warn('[PopupManager]', '弹窗加载失败', path);\n                    this._current = null;\n                    res(ShowResult.Failed);\n                    return;\n                }\n                // 实例化节点\n                node = cc.instantiate(prefab);\n            }\n            // 获取继承自 PopupBase 的弹窗组件\n            const popup = node.getComponent(PopupBase);\n            if (!popup) {\n                cc.warn('[PopupManager]', '未找到弹窗组件', path);\n                this._current = null;\n                res(ShowResult.Failed);\n                return;\n            }\n            // 保存组件引用\n            this._current.popup = popup;\n            // 保存节点引用\n            this._current.node = node;\n            // 添加到场景中\n            node.setParent(this.container || cc.Canvas.instance.node);\n            // 显示在最上层\n            node.setSiblingIndex(cc.macro.MAX_ZINDEX);\n            // 设置完成回调\n            const finishCallback = async (suspended: boolean) => {\n                if (suspended) {\n                    return;\n                }\n                // 是否需要锁定\n                this.locked = (this._suspended.length > 0 || this._queue.length > 0);\n                // 回收\n                this.recycle(path, node, params.mode);\n                this._current = null;\n                res(ShowResult.Done);\n                // 延迟一会儿\n                await new Promise(_res => {\n                    cc.Canvas.instance.scheduleOnce(_res, this.interval);\n                });\n                // 下一个弹窗\n                this.next();\n            }\n            popup.setFinishCallback(finishCallback);\n            // 展示\n            popup.show(options);\n        });\n    }\n\n    /**\n     * 隐藏当前弹窗\n     */\n    public static hide() {\n        if (this._current.popup) {\n            this._current.popup.hide();\n        }\n    }\n\n    /**\n     * 从缓存中获取节点\n     * @param path 弹窗路径\n     */\n    private static getNodeFromCache(path: string): cc.Node {\n        // 从节点缓存中获取\n        const nodeCache = this._nodeCache;\n        if (nodeCache.has(path)) {\n            const node = nodeCache.get(path);\n            if (cc.isValid(node)) {\n                return node;\n            }\n            // 删除无效引用\n            nodeCache.delete(path);\n        }\n        // 从预制体缓存中获取\n        const prefabCache = this._prefabCache;\n        if (prefabCache.has(path)) {\n            const prefab = prefabCache.get(path);\n            if (cc.isValid(prefab)) {\n                // 增加引用计数\n                prefab.addRef();\n                // 实例化并返回\n                return cc.instantiate(prefab);\n            }\n            // 删除无效引用\n            prefabCache.delete(path);\n        }\n        // 无\n        return null;\n    }\n\n    /**\n     * 展示挂起或等待队列中的下一个弹窗\n     */\n    private static next() {\n        if (this._current || (this._suspended.length === 0 && this._queue.length === 0)) {\n            return;\n        }\n        // 取出一个请求\n        let request: PopupRequestType = null;\n        if (this._suspended.length > 0) {\n            // 挂起队列\n            request = this._suspended.shift();\n        } else {\n            // 等待队列\n            request = this._queue.shift();\n        }\n        // 解除锁定\n        this.locked = false;\n        // 已有实例\n        if (cc.isValid(request.popup)) {\n            // 设为当前弹窗\n            this._current = request;\n            // 直接展示\n            request.node.setParent(this.container);\n            request.popup.show(request.options);\n            return;\n        }\n        // 加载并展示\n        this.show(request.path, request.options, request.params);\n    }\n\n    /**\n     * 添加一个弹窗请求到等待队列中，如果当前没有展示中的弹窗则直接展示该弹窗。\n     * @param path 弹窗预制体相对路径（如：prefabs/MyPopup）\n     * @param options 弹窗选项\n     * @param params 弹窗展示参数\n     */\n    private static push<Options>(path: string, options?: Options, params?: PopupParamsType) {\n        // 直接展示\n        if (!this._current && !this.locked) {\n            this.show(path, options, params);\n            return;\n        }\n        // 加入队列\n        this._queue.push({ path, options, params });\n        // 按照优先级从小到大排序\n        this._queue.sort((a, b) => (a.params.priority - b.params.priority));\n    }\n\n    /**\n     * 挂起当前展示中的弹窗\n     */\n    private static async suspend() {\n        if (!this._current) {\n            return;\n        }\n        const request = this._current;\n        // 将当前弹窗推入挂起队列\n        this._suspended.push(request);\n        // 关闭当前弹窗（挂起）\n        await request.popup.hide(true);\n        // 置空当前\n        this._current = null;\n    }\n\n    /**\n     * 回收弹窗\n     * @param path 弹窗路径\n     * @param node 弹窗节点\n     * @param mode 缓存模式\n     */\n    private static recycle(path: string, node: cc.Node, mode: CacheMode) {\n        switch (mode) {\n            // 一次性\n            case CacheMode.Once: {\n                this._nodeCache.delete(path);\n                node.destroy();\n                // 释放\n                this.release(path);\n                break;\n            }\n            // 正常\n            case CacheMode.Normal: {\n                this._nodeCache.delete(path);\n                node.destroy();\n                break;\n            }\n            // 频繁\n            case CacheMode.Frequent: {\n                node.removeFromParent(false);\n                this._nodeCache.set(path, node);\n                break;\n            }\n        }\n    }\n\n    /**\n     * 加载并缓存弹窗预制体资源\n     * @param path 弹窗路径\n     */\n    public static load(path: string): Promise<cc.Prefab> {\n        return new Promise(res => {\n            const prefabMap = this._prefabCache;\n            // 先看下缓存里有没有，避免重复加载\n            if (prefabMap.has(path)) {\n                const prefab = prefabMap.get(path);\n                // 缓存是否有效\n                if (cc.isValid(prefab)) {\n                    res(prefab);\n                    return;\n                } else {\n                    // 删除无效引用\n                    prefabMap.delete(path);\n                }\n            }\n            // 动态加载\n            cc.resources.load(path, (error: Error, prefab: cc.Prefab) => {\n                if (error) {\n                    res(null);\n                    return;\n                }\n                // 缓存预制体\n                prefabMap.set(path, prefab);\n                // 返回\n                res(prefab);\n            });\n        });\n    }\n\n    /**\n     * 尝试释放弹窗资源（注意：弹窗内部动态加载的资源请自行释放）\n     * @param path 弹窗路径\n     */\n    public static release(path: string) {\n        // 移除节点\n        const nodeCache = this._nodeCache;\n        let node = nodeCache.get(path);\n        if (node) {\n            nodeCache.delete(path);\n            if (cc.isValid(node)) {\n                node.destroy();\n            }\n            node = null;\n        }\n        // 移除预制体\n        const prefabCache = this._prefabCache;\n        let prefab = prefabCache.get(path);\n        if (prefab) {\n            // 删除缓存\n            if (prefab.refCount <= 1) {\n                prefabCache.delete(path);\n            }\n            // 减少引用\n            prefab.decRef();\n            prefab = null;\n        }\n    }\n\n    /**\n     * 解析参数\n     * @param params 参数\n     */\n    private static parseParams(params: PopupParamsType) {\n        if (params == undefined) {\n            return new PopupParamsType();\n        }\n        // 是否为对象\n        if (Object.prototype.toString.call(params) !== '[object Object]') {\n            cc.warn('[PopupManager]', '弹窗参数无效，使用默认参数');\n            return new PopupParamsType();\n        }\n        // 缓存模式\n        if (params.mode == undefined) {\n            params.mode = CacheMode.Normal;\n        }\n        // 优先级\n        if (params.priority == undefined) {\n            params.priority = 0;\n        }\n        // 立刻展示\n        if (params.immediately == undefined) {\n            params.immediately = false;\n        }\n        return params;\n    }\n\n}\n\n/** 弹窗展示参数 */\nclass PopupParamsType {\n    /** 缓存模式 */\n    mode?: CacheMode = CacheMode.Normal;\n    /** 优先级（优先级大的优先展示） */\n    priority?: number = 0;\n    /** 立刻展示（将会挂起当前展示中的弹窗） */\n    immediately?: boolean = false;\n}\n\n/** 弹窗展示请求 */\nclass PopupRequestType {\n    /** 弹窗预制体相对路径 */\n    path: string;\n    /** 弹窗选项 */\n    options: any;\n    /** 缓存模式 */\n    params: PopupParamsType;\n    /** 弹窗组件 */\n    popup?: PopupBase;\n    /** 弹窗节点 */\n    node?: cc.Node;\n}\n","const { ccclass, property, executionOrder, help, menu } = cc._decorator;\n\n/**\n * 后期处理\n * @author 陈皮皮 (ifaswind)\n * @version 20211224\n * @see PostProcessing.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/PostProcessing.ts\n */\n@ccclass\n@executionOrder(-1)\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/PostProcessing.ts')\n@menu('eazax/效果组件/PostProcessing')\nexport default class PostProcessing extends cc.Component {\n\n    @property({ type: cc.Camera, tooltip: CC_DEV && '输入摄像机' })\n    protected inputCamera: cc.Camera = null;\n\n    @property({ type: cc.Sprite, tooltip: CC_DEV && '输出精灵' })\n    protected outputSprite: cc.Sprite = null;\n\n    /**\n     * 输出纹理\n     */\n    protected renderTexture: cc.RenderTexture = null;\n\n    /**\n     * 生命周期：加载\n     */\n    protected onLoad() {\n        this.init();\n        this.registerEvent();\n    }\n\n    /**\n     * 生命周期：销毁\n     */\n    protected onDestroy() {\n        this.unregisterEvent();\n        this.release();\n    }\n\n    /**\n     * 注册事件\n     */\n    protected registerEvent() {\n        cc.Canvas.instance.node.on(cc.Node.EventType.SIZE_CHANGED, this.onCanvasSizeChanged, this);\n    }\n\n    /**\n     * 反注册事件\n     */\n    protected unregisterEvent() {\n        cc.Canvas.instance.node.off(cc.Node.EventType.SIZE_CHANGED, this.onCanvasSizeChanged, this);\n    }\n\n    /**\n     * 初始化\n     */\n    protected init() {\n        // 创建并初始化 RenderTexture\n        const renderTexture = this.renderTexture = new cc.RenderTexture(),\n            screenSize = cc.view.getVisibleSizeInPixel();\n        renderTexture.initWithSize(screenSize.width, screenSize.height);\n\n        // 将摄像机的内容渲染到目标纹理上\n        this.inputCamera.targetTexture = renderTexture;\n\n        // 使用目标纹理生成精灵帧并设置到精灵上\n        this.outputSprite.spriteFrame = new cc.SpriteFrame(renderTexture);\n\n        // 设置 Y 轴翻转\n        // renderTexture.setFlipY(true);  // not working\n        this.outputSprite.node.scaleY = -Math.abs(this.outputSprite.node.scaleY);\n    }\n\n    /**\n     * 释放\n     */\n    protected release() {\n        this.renderTexture.destroy();\n    }\n\n    /**\n     * 画布尺寸变化回调\n     */\n    protected onCanvasSizeChanged() {\n        const screenSize = cc.view.getVisibleSizeInPixel();\n        this.renderTexture.updateSize(screenSize.width, screenSize.height);\n    }\n\n}\n","/**\r\n * Promise 工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210925\r\n * @see PromiseUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/PromiseUtil.ts\r\n */\r\nexport default class PromiseUtil {\r\n\r\n    /**\r\n     * 等待\r\n     * @param time 时长（秒）\r\n     * @example\r\n     * await PromiseUtil.sleep(1);\r\n     */\r\n    public static sleep(time: number): Promise<void> {\r\n        return new Promise(res => cc.Canvas.instance.scheduleOnce(res, time));\r\n    }\r\n\r\n}\r\n","const { ccclass, property, executeInEditMode, executionOrder, help, menu } = cc._decorator;\r\n\r\n/**\r\n * 雷达图组件（cc.Graphics）\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210521\r\n * @see RadarChart.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/chart/RadarChart.ts\r\n * @see Example https://ifaswind.gitee.io/eazax-cases/?case=radarChart\r\n */\r\n@ccclass\r\n@executeInEditMode\r\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/chart/RadarChart.ts')\r\n@menu('eazax/图表组件/RadarChart')\r\nexport default class RadarChart extends cc.Component {\r\n\r\n    @property({ type: cc.Node, tooltip: CC_DEV && '绘制节点（不指定则默认为当前节点）' })\r\n    protected target: cc.Node = null;\r\n\r\n    @property()\r\n    protected _axisLength: number = 200;\r\n    @property({ tooltip: CC_DEV && '轴线长度' })\r\n    public get axisLength() {\r\n        return this._axisLength;\r\n    }\r\n    public set axisLength(value: number) {\r\n        this._axisLength = value;\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _axes: number = 6;\r\n    @property({ tooltip: CC_DEV && '轴线数量（至少 3 条）' })\r\n    public get axes() {\r\n        return this._axes;\r\n    }\r\n    public set axes(value: number) {\r\n        this._axes = Math.floor(value >= 3 ? value : 3);\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _axisScales: number = 3;\r\n    @property({ tooltip: CC_DEV && '轴线上的刻度数（至少 1 个）' })\r\n    public get axisScales() {\r\n        return this._axisScales;\r\n    }\r\n    public set axisScales(value: number) {\r\n        this._axisScales = Math.floor(value >= 1 ? value : 1);\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _drawAxes: boolean = true;\r\n    @property({ tooltip: CC_DEV && '是否绘制轴线' })\r\n    public get drawAxes() {\r\n        return this._drawAxes;\r\n    }\r\n    public set drawAxes(value: boolean) {\r\n        this._drawAxes = value;\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _gridLineWidth: number = 4;\r\n    @property({ tooltip: CC_DEV && '轴线和外网格线的宽度' })\r\n    public get gridLineWidth() {\r\n        return this._gridLineWidth;\r\n    }\r\n    public set gridLineWidth(value: number) {\r\n        this._gridLineWidth = value;\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _innerGridLineWidth: number = 4;\r\n    @property({ tooltip: CC_DEV && '内网格线宽度' })\r\n    public get innerGridLineWidth() {\r\n        return this._innerGridLineWidth;\r\n    }\r\n    public set innerGridLineWidth(value: number) {\r\n        this._innerGridLineWidth = value;\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _gridLineColor: cc.Color = cc.Color.GRAY;\r\n    @property({ tooltip: CC_DEV && '轴线和网格线的颜色' })\r\n    public get gridLineColor() {\r\n        return this._gridLineColor;\r\n    }\r\n    public set gridLineColor(value: cc.Color) {\r\n        this._gridLineColor = value;\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _gridFillColor: cc.Color = cc.color(100, 100, 100, 100);\r\n    @property({ tooltip: CC_DEV && '网格内部填充的颜色' })\r\n    public get gridFillColor() {\r\n        return this._gridFillColor;\r\n    }\r\n    public set gridFillColor(value: cc.Color) {\r\n        this._gridFillColor = value;\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    @property()\r\n    protected _dataValuesStrings: string[] = ['0.8,0.5,0.6,0.5,0.8,0.6', '0.5,0.9,0.5,0.8,0.5,0.9'];\r\n    @property({ type: [cc.String], tooltip: CC_DEV && '数据数值（字符串形式，使用英文逗号分隔）' })\r\n    public get dataValuesStrings() {\r\n        return this._dataValuesStrings;\r\n    }\r\n    public set dataValuesStrings(value: string[]) {\r\n        this._dataValuesStrings = value;\r\n        this.drawWithProperties();\r\n    }\r\n\r\n    @property()\r\n    protected _dataLineWidths: number[] = [5, 5];\r\n    @property({ type: [cc.Integer], tooltip: CC_DEV && '数据线宽度' })\r\n    public get dataLineWidths() {\r\n        return this._dataLineWidths;\r\n    }\r\n    public set dataLineWidths(value: number[]) {\r\n        this._dataLineWidths = value;\r\n        this.drawWithProperties();\r\n    }\r\n\r\n    @property()\r\n    protected _dataLineColors: cc.Color[] = [cc.Color.BLUE, cc.Color.RED];\r\n    @property({ type: [cc.Color], tooltip: CC_DEV && '数据线颜色' })\r\n    public get dataLineColors() {\r\n        return this._dataLineColors;\r\n    }\r\n    public set dataLineColors(value: cc.Color[]) {\r\n        this._dataLineColors = value;\r\n        this.drawWithProperties();\r\n    }\r\n\r\n    @property()\r\n    protected _dataFillColors: cc.Color[] = [cc.color(120, 120, 180, 100), cc.color(180, 120, 120, 100)];\r\n    @property({ type: [cc.Color], tooltip: CC_DEV && '数据填充颜色' })\r\n    public get dataFillColors() {\r\n        return this._dataFillColors;\r\n    }\r\n    public set dataFillColors(value: cc.Color[]) {\r\n        this._dataFillColors = value;\r\n        this.drawWithProperties();\r\n    }\r\n\r\n    @property()\r\n    protected _dataJoinColors: cc.Color[] = [];\r\n    @property({ type: [cc.Color], tooltip: CC_DEV && '数据节点颜色' })\r\n    public get dataJoinColors() {\r\n        return this._dataJoinColors;\r\n    }\r\n    public set dataJoinColors(value: cc.Color[]) {\r\n        this._dataJoinColors = value;\r\n        this.drawWithProperties();\r\n    }\r\n\r\n    @property()\r\n    protected _drawDataJoin: boolean = true;\r\n    @property({ tooltip: CC_DEV && '是否绘制数据节点' })\r\n    public get drawDataJoin() {\r\n        return this._drawDataJoin;\r\n    }\r\n    public set drawDataJoin(value: boolean) {\r\n        this._drawDataJoin = value;\r\n        this.draw(this.curDatas);\r\n    }\r\n\r\n    /**\r\n     * 绘图组件\r\n     */\r\n    protected graphics: cc.Graphics = null;\r\n\r\n    /**\r\n     * 保持更新\r\n     */\r\n    protected keepUpdating: boolean = false;\r\n\r\n    /**\r\n     * 轴夹角\r\n     */\r\n    protected angles: number[] = null;\r\n\r\n    /**\r\n     * 当前数据\r\n     */\r\n    public get curDatas() {\r\n        return this._curDatas;\r\n    }\r\n    protected _curDatas: RadarChartData[] = [];\r\n\r\n    /**\r\n     * 当前缓动的 Promise Resolve\r\n     */\r\n    protected curTweenRes: Function = null;\r\n\r\n    /**\r\n     * 生命周期：加载\r\n     */\r\n    protected onLoad() {\r\n        this.init();\r\n        this.drawWithProperties();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：每帧更新\r\n     */\r\n    protected update() {\r\n        if (!this.keepUpdating || this._curDatas.length === 0) {\r\n            return;\r\n        }\r\n        this.draw(this._curDatas);\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    protected init() {\r\n        // 获取组件\r\n        if (!this.target) {\r\n            this.target = this.node;\r\n        }\r\n        this.graphics = this.target.getComponent(cc.Graphics) || this.target.addComponent(cc.Graphics);\r\n        // 设置端点和拐角样式\r\n        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n        this.graphics.lineCap = cc.Graphics.LineCap.ROUND;\r\n    }\r\n\r\n    /**\r\n     * 使用当前属性绘制\r\n     */\r\n    protected drawWithProperties() {\r\n        // 获取属性面板配置\r\n        const datas: RadarChartData[] = [],\r\n            valueStrings = this.dataValuesStrings,\r\n            lineWidths = this._dataLineWidths,\r\n            lineColors = this._dataLineColors,\r\n            fillColors = this._dataFillColors,\r\n            joinColors = this._dataJoinColors;\r\n        for (let i = 0; i < valueStrings.length; i++) {\r\n            datas.push({\r\n                values: this.processValuesString(valueStrings[i]),\r\n                lineWidth: lineWidths[i] || defaultOptions.lineWidth,\r\n                lineColor: lineColors[i] || defaultOptions.lineColor,\r\n                fillColor: fillColors[i] || defaultOptions.fillColor,\r\n                joinColor: joinColors[i] || defaultOptions.joinColor\r\n            });\r\n        }\r\n        // 绘制\r\n        this.draw(datas);\r\n    }\r\n\r\n    /**\r\n     * 将数值字符串转为数值数组\r\n     * @param valuesString 数值字符串\r\n     */\r\n    protected processValuesString(valuesString: string): number[] {\r\n        const strings = valuesString.split(','),\r\n            values: number[] = [];\r\n        for (let j = 0; j < strings.length; j++) {\r\n            const value = parseFloat(strings[j]);\r\n            values.push(isNaN(value) ? 0 : value);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    /**\r\n     * 画基本线框\r\n     */\r\n    protected drawBase() {\r\n        // 填充染料\r\n        const graphics = this.graphics;\r\n        graphics.lineWidth = this._gridLineWidth;\r\n        graphics.strokeColor = this._gridLineColor;\r\n        graphics.fillColor = this._gridFillColor;\r\n\r\n        // 计算轴线角度\r\n        const angles = this.angles = [],\r\n            // 轴间夹角\r\n            iAngle = 360 / this.axes;\r\n        for (let i = 0; i < this.axes; i++) {\r\n            angles.push(iAngle * i);\r\n        }\r\n\r\n        // 计算刻度坐标\r\n        const scalesSet: cc.Vec2[][] = [],\r\n            axisLength = this._axisLength,\r\n            axisScales = this._axisScales,\r\n            iLength = axisLength / axisScales;\r\n        for (let i = 0; i < axisScales; i++) {\r\n            const scales = [];\r\n            // 计算刻度在轴上的位置\r\n            const length = axisLength - (iLength * i);\r\n            for (let j = 0, l = this.angles.length; j < l; j++) {\r\n                // 将角度转为弧度\r\n                const radian = (Math.PI / 180) * this.angles[j];\r\n                // 根据三角公式计算刻度相对于中心点（0, 0）的坐标\r\n                scales.push(cc.v2(length * Math.cos(radian), length * Math.sin(radian)));\r\n            }\r\n            scalesSet.push(scales);\r\n        }\r\n\r\n        // 创建轴线\r\n        const out = scalesSet[0];\r\n        if (this._drawAxes) {\r\n            for (let i = 0; i < out.length; i++) {\r\n                graphics.moveTo(0, 0);\r\n                graphics.lineTo(out[i].x, out[i].y);\r\n            }\r\n        }\r\n\r\n        // 创建外网格线\r\n        graphics.moveTo(out[0].x, out[0].y);\r\n        for (let i = 1; i < out.length; i++) {\r\n            graphics.lineTo(out[i].x, out[i].y);\r\n        }\r\n        // 闭合当前线条（外网格线）\r\n        graphics.close();\r\n\r\n        // 填充线条包围的空白区域\r\n        graphics.fill();\r\n        // 绘制已创建的线条（轴线和外网格线）\r\n        graphics.stroke();\r\n\r\n        // 画内网格线\r\n        if (scalesSet.length > 1) {\r\n            graphics.lineWidth = this._innerGridLineWidth;\r\n            // 创建内网格线\r\n            for (let i = 1; i < scalesSet.length; i++) {\r\n                const set = scalesSet[i];\r\n                graphics.moveTo(set[0].x, set[0].y);\r\n                for (let j = 1; j < set.length; j++) {\r\n                    graphics.lineTo(set[j].x, set[j].y);\r\n                }\r\n                // 闭合当前线条（内网格线）\r\n                graphics.close();\r\n            }\r\n            // 绘制已创建的线条（内网格线）\r\n            graphics.stroke();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 绘制数据\r\n     * @param data 数据\r\n     */\r\n    public draw(data: RadarChartData | RadarChartData[]) {\r\n        // 擦除旧图像\r\n        const graphics = this.graphics;\r\n        graphics.clear();\r\n\r\n        // 画轴线和网格线\r\n        this.drawBase();\r\n\r\n        // 包装单条数据\r\n        const datas = Array.isArray(data) ? data : [data];\r\n        this._curDatas = datas;\r\n\r\n        // 数值不足需补 0\r\n        this.resizeCurDatasValues(0);\r\n\r\n        // 开始绘制数据\r\n        const axes = this.axes,\r\n            axisLength = this.axisLength,\r\n            angles = this.angles;\r\n        for (let i = 0; i < datas.length; i++) {\r\n            const data = datas[i];\r\n            // 装填染料\r\n            graphics.strokeColor = data.lineColor || defaultOptions.lineColor;\r\n            graphics.fillColor = data.fillColor || defaultOptions.fillColor;\r\n            graphics.lineWidth = data.lineWidth || defaultOptions.lineWidth;\r\n\r\n            // 计算节点坐标\r\n            const coords = [];\r\n            for (let j = 0; j < axes; j++) {\r\n                const length = (data.values[j] > 1 ? 1 : data.values[j]) * axisLength,\r\n                    radian = (Math.PI / 180) * angles[j];\r\n                coords.push(cc.v2(length * Math.cos(radian), length * Math.sin(radian)));\r\n            }\r\n\r\n            // 创建线条\r\n            graphics.moveTo(coords[0].x, coords[0].y);\r\n            for (let j = 1; j < coords.length; j++) {\r\n                graphics.lineTo(coords[j].x, coords[j].y);\r\n            }\r\n            // 闭合线条\r\n            graphics.close();\r\n\r\n            // 填充包围区域\r\n            graphics.fill();\r\n            // 绘制线条\r\n            graphics.stroke();\r\n\r\n            // 绘制数据节点\r\n            if (this._drawDataJoin) {\r\n                for (let j = 0; j < coords.length; j++) {\r\n                    const coord = coords[j];\r\n                    // 大圆\r\n                    graphics.strokeColor = data.lineColor || defaultOptions.lineColor;\r\n                    graphics.circle(coord.x, coord.y, 2);\r\n                    graphics.stroke();\r\n                    // 小圆\r\n                    graphics.strokeColor = data.joinColor || defaultOptions.joinColor;\r\n                    graphics.circle(coord.x, coord.y, .65);\r\n                    graphics.stroke();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 缓动绘制\r\n     * @param data 目标数据\r\n     * @param duration 动画时长\r\n     */\r\n    public to(data: RadarChartData | RadarChartData[], duration: number): Promise<void> {\r\n        return new Promise(res => {\r\n            // 处理上一个 Promise\r\n            this.unscheduleAllCallbacks();\r\n            this.curTweenRes && this.curTweenRes();\r\n            this.curTweenRes = res;\r\n\r\n            // 包装单条数据\r\n            const datas = Array.isArray(data) ? data : [data];\r\n\r\n            // 打开每帧更新\r\n            this.keepUpdating = true;\r\n\r\n            // 动起来！\r\n            for (let i = 0; i < datas.length; i++) {\r\n                const curData = this._curDatas[i];\r\n                if (!curData) {\r\n                    continue;\r\n                }\r\n                // 数值动起来！\r\n                const data = datas[i];\r\n                for (let j = 0; j < curData.values.length; j++) {\r\n                    cc.tween(curData.values)\r\n                        .to(duration, { [j]: (data.values[j] > 1) ? 1 : data.values[j] })\r\n                        .start();\r\n                }\r\n                // 样式动起来！\r\n                cc.tween(curData)\r\n                    .to(duration, {\r\n                        lineWidth: data.lineWidth || curData.lineWidth,\r\n                        lineColor: data.lineColor || curData.lineColor,\r\n                        fillColor: data.fillColor || curData.fillColor,\r\n                        joinColor: data.joinColor || curData.joinColor\r\n                    })\r\n                    .start();\r\n            }\r\n\r\n            this.scheduleOnce(() => {\r\n                // 关闭每帧更新\r\n                this.keepUpdating = false;\r\n                // resolve Promise\r\n                this.curTweenRes();\r\n                this.curTweenRes = null;\r\n            }, duration);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 检查并调整数据中的数值数量\r\n     * @param fill 填充数值\r\n     */\r\n    protected resizeCurDatasValues(fill: number = 0) {\r\n        const curDatas = this._curDatas;\r\n        for (let i = 0; i < curDatas.length; i++) {\r\n            const curData = curDatas[i];\r\n            // 数值数量少于轴数时才进行调整\r\n            if (curData.values.length < this._axes) {\r\n                const diff = this._axes - curData.values.length;\r\n                for (let j = 0; j < diff; j++) {\r\n                    curData.values.push(fill);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * 雷达图数据\r\n */\r\nexport interface RadarChartData {\r\n    /** 数值 */\r\n    values: number[];\r\n    /** 线的宽度 */\r\n    lineWidth?: number;\r\n    /** 线的颜色 */\r\n    lineColor?: cc.Color;\r\n    /** 填充的颜色 */\r\n    fillColor?: cc.Color;\r\n    /** 节点的颜色 */\r\n    joinColor?: cc.Color;\r\n}\r\n\r\n/**\r\n * 不指定时使用的样式配置\r\n */\r\nconst defaultOptions = {\r\n    lineWidth: 5,\r\n    lineColor: cc.Color.BLUE,\r\n    fillColor: cc.color(120, 120, 180, 100),\r\n    joinColor: cc.Color.WHITE,\r\n};\r\n","import EditorAsset from \"../../misc/EditorAsset\";\r\n\r\nconst { ccclass, property, requireComponent, executeInEditMode, disallowMultiple } = cc._decorator;\r\n\r\n/**\r\n * 径向模糊 Shader 组件（该组件需要对应的 Effect 文件才能正常使用）\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20211205\r\n * @see RadialBlur.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/RadialBlur.ts\r\n * @see eazax-radial-blur.effect https://gitee.com/ifaswind/eazax-ccc/blob/master/resources/effects/eazax-radial-blur.effect\r\n */\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\n@executeInEditMode\r\n@disallowMultiple\r\nexport default class RadialBlur extends cc.Component {\r\n\r\n    @property\r\n    protected _effect: cc.EffectAsset = null;\r\n    @property({ type: cc.EffectAsset, tooltip: CC_DEV && 'Effect 资源', readonly: true })\r\n    public get effect() {\r\n        return this._effect;\r\n    }\r\n    public set effect(value) {\r\n        this._effect = value;\r\n        this.init();\r\n    }\r\n\r\n    @property\r\n    protected _center: cc.Vec2 = new cc.Vec2(0.5, 0.5);\r\n    @property({ tooltip: CC_DEV && '模糊中心点' })\r\n    public get center() {\r\n        return this._center;\r\n    }\r\n    public set center(value) {\r\n        this._center = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    @property\r\n    protected _strength: number = 0.5;\r\n    @property({ tooltip: CC_DEV && '模糊强度' })\r\n    public get strength() {\r\n        return this._strength;\r\n    }\r\n    public set strength(value) {\r\n        this._strength = value;\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 精灵\r\n     */\r\n    protected sprite: cc.Sprite = null;\r\n\r\n    /**\r\n     * 材质\r\n     */\r\n    protected material: cc.Material = null;\r\n\r\n    /**\r\n     * 声明周期：节点加载\r\n     */\r\n    protected onLoad() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 编辑器回调：重置\r\n     */\r\n    protected resetInEditor() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    protected async init() {\r\n        /**\r\n         * 编辑器环境下自动绑定 Effect 资源\r\n         * 依赖于 EditorAsset 模块，没有该模块请将此代码块以及顶部导入语句去除\r\n         * @see EditorAsset.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/misc/EditorAsset.ts\r\n         */\r\n        if (CC_EDITOR && !this._effect) {\r\n            const path = 'eazax-ccc/resources/effects/eazax-radial-blur.effect';\r\n            this._effect = await EditorAsset.load(path, 'effect');\r\n        }\r\n        if (!this._effect) {\r\n            cc.warn(`[${this['__proto__']['__classname__']}]`, '请手动指定组件的 Effect 资源！');\r\n            return;\r\n        }\r\n        // 使用自定义 Effect 需禁用纹理的 packable 属性（因为动态合图之后无法正确获取纹理 UV 坐标）\r\n        // 详情请看：https://docs.cocos.com/creator/manual/zh/asset-workflow/sprite.html#packable\r\n        this.sprite = this.node.getComponent(cc.Sprite);\r\n        if (this.sprite.spriteFrame) {\r\n            this.sprite.spriteFrame.getTexture().packable = false;\r\n        }\r\n        // 生成并应用材质\r\n        this.material = cc.Material.create(this._effect);\r\n        this.sprite.setMaterial(0, this.material);\r\n        // 更新材质属性\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 更新材质属性\r\n     */\r\n    protected updateProperties() {\r\n        this.material.setProperty('center', this._center);\r\n        this.material.setProperty('strength', this._strength);\r\n    }\r\n\r\n    /**\r\n     * 节点尺寸\r\n     */\r\n    protected get nodeSize() {\r\n        return cc.v2(this.node.width, this.node.height);\r\n    }\r\n\r\n}\r\n","/**\r\n * 正则工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20200928\r\n * @see RegexUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/RegexUtil.ts\r\n */\r\nexport default class RegexUtil {\r\n\r\n    /**\r\n     * 判断字符是否为双字节字符（如中文字符）\r\n     * @param string 原字符串\r\n     */\r\n    public static isDWORD(string: string): boolean {\r\n        return /[^\\x00-\\xff]/.test(string);\r\n    }\r\n\r\n}\r\n","const { ccclass, property, executeInEditMode } = cc._decorator;\n\n@ccclass\n@executeInEditMode\nexport default class RemoteAsset extends cc.Component {\n\n    /**\n     * 加载\n     * @param url 资源地址\n     */\n    public async load(url?: string): Promise<LoadResult> {\n        return { url, loaded: false, interrupted: false, component: this };\n    }\n\n    /**\n     * 设置资源\n     * @param asset 资源\n     */\n    public set(asset?: any) {\n\n    }\n\n}\n\ntype LoadResult = {\n    url: string;\n    loaded: boolean;\n    interrupted: boolean;\n    component: any;\n};\n","/**\r\n * 渲染工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20211208\r\n * @see RenderUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/RenderUtil.ts\r\n */\r\nexport default class RenderUtil {\r\n\r\n    /**\r\n     * 获取节点的 RenderTexture\r\n     * @param node 节点\r\n     * @param out 输出\r\n     */\r\n    public static getRenderTexture(node: cc.Node, out?: cc.RenderTexture) {\r\n        // 检查参数\r\n        if (!cc.isValid(node)) {\r\n            return null;\r\n        }\r\n        if (!out || !(out instanceof cc.RenderTexture)) {\r\n            out = new cc.RenderTexture();\r\n        }\r\n        // 获取宽高\r\n        const width = Math.floor(node.width),\r\n            height = Math.floor(node.height);\r\n        // 初始化 RenderTexture\r\n        out.initWithSize(width, height);\r\n        // 创建临时摄像机用于渲染目标节点\r\n        const cameraNode = new cc.Node();\r\n        cameraNode.parent = node;\r\n        const camera = cameraNode.addComponent(cc.Camera);\r\n        camera.clearFlags |= cc.Camera.ClearFlags.COLOR;\r\n        camera.backgroundColor = cc.color(0, 0, 0, 0);\r\n        camera.zoomRatio = cc.winSize.height / height;\r\n        // 将节点渲染到 RenderTexture 中\r\n        camera.targetTexture = out;\r\n        camera.render(node);\r\n        // 销毁临时对象\r\n        cameraNode.destroy();\r\n        // 返回 RenderTexture\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 使用指定材质来将 RenderTexture 渲染到另一个 RenderTexture\r\n     * @param srcRT 来源\r\n     * @param dstRT 目标\r\n     * @param material 材质\r\n     */\r\n    public static renderWithMaterial(srcRT: cc.RenderTexture, dstRT: cc.RenderTexture | cc.Material, material?: cc.Material) {\r\n        // 检查参数\r\n        if (dstRT instanceof cc.Material) {\r\n            material = dstRT;\r\n            dstRT = new cc.RenderTexture();\r\n        }\r\n        // 创建临时节点（用于渲染 RenderTexture）\r\n        const tempNode = new cc.Node();\r\n        tempNode.setParent(cc.Canvas.instance.node);\r\n        const tempSprite = tempNode.addComponent(cc.Sprite);\r\n        tempSprite.sizeMode = cc.Sprite.SizeMode.RAW;\r\n        tempSprite.trim = false;\r\n        tempSprite.spriteFrame = new cc.SpriteFrame(srcRT);\r\n        // 获取图像宽高\r\n        const width = srcRT.width,\r\n            height = srcRT.height;\r\n        // 初始化 RenderTexture\r\n        dstRT.initWithSize(width, height);\r\n        // 更新材质\r\n        if (material instanceof cc.Material) {\r\n            tempSprite.setMaterial(0, material);\r\n        }\r\n        // 创建临时摄像机（用于渲染临时节点）\r\n        const cameraNode = new cc.Node();\r\n        cameraNode.setParent(tempNode);\r\n        const camera = cameraNode.addComponent(cc.Camera);\r\n        camera.clearFlags |= cc.Camera.ClearFlags.COLOR;\r\n        camera.backgroundColor = cc.color(0, 0, 0, 0);\r\n        camera.zoomRatio = cc.winSize.height / height;\r\n        // 将临时节点渲染到 RenderTexture 中\r\n        camera.targetTexture = dstRT;\r\n        camera.render(tempNode);\r\n        // 销毁临时对象\r\n        cameraNode.destroy();\r\n        tempNode.destroy();\r\n        // 返回 RenderTexture\r\n        return dstRT;\r\n    }\r\n\r\n    /**\r\n     * 获取像素数据\r\n     * @param node 节点\r\n     * @param flipY 垂直翻转数据\r\n     */\r\n    public static getPixelsData(node: cc.Node, flipY: boolean = true) {\r\n        if (!cc.isValid(node)) {\r\n            return null;\r\n        }\r\n        // 节点宽高\r\n        const width = Math.floor(node.width),\r\n            height = Math.floor(node.height);\r\n        // 创建临时摄像机用于渲染目标节点\r\n        const cameraNode = new cc.Node();\r\n        cameraNode.parent = node;\r\n        const camera = cameraNode.addComponent(cc.Camera);\r\n        camera.clearFlags |= cc.Camera.ClearFlags.COLOR;\r\n        camera.backgroundColor = cc.color(0, 0, 0, 0);\r\n        camera.zoomRatio = cc.winSize.height / height;\r\n        // 将节点渲染到 RenderTexture 中\r\n        const renderTexture = new cc.RenderTexture();\r\n        renderTexture.initWithSize(width, height, cc.RenderTexture.DepthStencilFormat.RB_FMT_S8);\r\n        camera.targetTexture = renderTexture;\r\n        camera.render(node);\r\n        // 获取像素数据\r\n        const pixelsData = renderTexture.readPixels();\r\n        // 销毁临时对象并返回数据\r\n        renderTexture.destroy();\r\n        cameraNode.destroy();\r\n        // 垂直翻转数据\r\n        if (flipY) {\r\n            const length = pixelsData.length,\r\n                lineWidth = width * 4,\r\n                data = new Uint8Array(length);\r\n            for (let i = 0, j = length - lineWidth; i < length; i += lineWidth, j -= lineWidth) {\r\n                for (let k = 0; k < lineWidth; k++) {\r\n                    data[i + k] = pixelsData[j + k];\r\n                }\r\n            }\r\n            return data;\r\n        }\r\n        return pixelsData;\r\n    }\r\n\r\n    /**\r\n     * 垂直翻转图像数据\r\n     * @param array 数据\r\n     * @param width 行宽\r\n     */\r\n    public static flipY(array: Uint8Array, width: number) {\r\n        // const height = Math.floor(array.length / width),\r\n        //     halfHeight = Math.floor(height / 2),\r\n        //     maxRowIndex = height - 1;\r\n        // for (let i = 0; i < halfHeight; i++) {\r\n        //     const a = i * width,\r\n        //         b = (maxRowIndex - i) * width;\r\n        //     for (let k = 0; k < width; k++) {\r\n        //         [array[a + k], array[b + k]] = [array[b + k], array[a + k]];\r\n        //     }\r\n        //     // const block = array.slice(a, a + width);\r\n        //     // for (let k = 0; k < width; k++) {\r\n        //     //     array[a + k] = array[b + k];\r\n        //     //     array[b + k] = block[k]\r\n        //     // }\r\n        // }\r\n        // return array;\r\n        const length = array.length,\r\n            flipped = new Uint8Array(length);\r\n        for (let i = 0, j = length - width; i < length; i += width, j -= width) {\r\n            for (let k = 0; k < width; k++) {\r\n                flipped[i + k] = array[j + k];\r\n            }\r\n        }\r\n        return flipped;\r\n    }\r\n\r\n}\r\n","/** 轴 */\r\nexport enum Axis {\r\n    /** 正 X 轴 */\r\n    PositiveX,\r\n    /** 正 Y 轴 */\r\n    PositiveY,\r\n    /** 负 X 轴 */\r\n    NegativeX,\r\n    /** 负 Y 轴 */\r\n    NegativeY\r\n}\r\n\r\nconst { ccclass, property, help, menu } = cc._decorator;\r\n\r\n/**\r\n * 围绕旋转组件\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210611\r\n * @see RotateAround.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/RotateAround.ts\r\n */\r\n@ccclass\r\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/RotateAround.ts')\r\n@menu('eazax/其他组件/RotateAround')\r\nexport default class RotateAround extends cc.Component {\r\n\r\n    @property({ type: cc.Node, tooltip: CC_DEV && '围绕旋转的目标' })\r\n    public target: cc.Node = null;\r\n\r\n    @property({ tooltip: CC_DEV && '顺时针旋转' })\r\n    public clockwise: boolean = true;\r\n\r\n    @property({ tooltip: CC_DEV && '旋转一圈花费的时间' })\r\n    public timePerRound: number = 10;\r\n\r\n    @property({ tooltip: CC_DEV && '是否始终面向目标节点' })\r\n    public faceToTarget: boolean = false;\r\n\r\n    @property({ type: cc.Enum(Axis), visible() { return this.faceToTarget }, tooltip: CC_DEV && '面向目标节点的轴：\\n- PositiveX：正 X 轴\\n- PositiveY：正 Y 轴\\n- NegativeX：负 X 轴\\n- NegativeY：负 Y 轴' })\r\n    public faceAxis: Axis = Axis.NegativeY;\r\n\r\n    @property({ tooltip: CC_DEV && '自动开始旋转' })\r\n    public autoStart: boolean = false;\r\n\r\n    /**\r\n     * 相对于目标的角度\r\n     */\r\n    public angle: number = 0;\r\n\r\n    /**\r\n     * 半径\r\n     */\r\n    public radius: number = 0;\r\n\r\n    /** \r\n     * 是否正在旋转\r\n     */\r\n    protected isRotating: boolean = false;\r\n\r\n    /**\r\n     * 生命周期：开始\r\n     */\r\n    protected start() {\r\n        this.autoStart && this.run();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：每帧更新\r\n     */\r\n    protected update(dt: number) {\r\n        if (!this.isRotating || !this.target) {\r\n            return;\r\n        }\r\n        // 将角度转换为弧度\r\n        let angle = this.angle;\r\n        const radian = (Math.PI / 180) * angle;\r\n        // 更新节点的位置\r\n        const node = this.node,\r\n            target = this.target,\r\n            radius = this.radius;\r\n        node.x = target.x + radius * Math.cos(radian);\r\n        node.y = target.y + radius * Math.sin(radian);\r\n        // 更新节点的角度\r\n        if (this.faceToTarget) {\r\n            switch (this.faceAxis) {\r\n                case Axis.PositiveX:\r\n                    node.angle = angle + 180;\r\n                    break;\r\n                case Axis.PositiveY:\r\n                    node.angle = angle + 90;\r\n                    break;\r\n                case Axis.NegativeX:\r\n                    node.angle = angle;\r\n                    break;\r\n                case Axis.NegativeY:\r\n                    node.angle = angle - 90;\r\n                    break;\r\n            }\r\n        }\r\n        // 计算下一帧的角度\r\n        const anglePerFrame = dt * (360 / this.timePerRound);\r\n        angle = this.angle += (this.clockwise ? -anglePerFrame : anglePerFrame);\r\n        // 重置角度，避免数值过大\r\n        if (angle >= 720) {\r\n            this.angle %= 360;\r\n        } else if (angle <= -720) {\r\n            this.angle %= -360;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 开始围绕目标节点旋转\r\n     * @param target 目标节点\r\n     * @param clockwise 是否顺时针旋转\r\n     * @param timePerRound 旋转一圈的时间\r\n     * @param faceToTarget 是否始终面向目标节点\r\n     * @param faceAxis 面向目标节点的轴\r\n     */\r\n    public run(target?: cc.Node, clockwise?: boolean, timePerRound?: number, faceToTarget?: boolean, faceAxis?: Axis) {\r\n        if (target != undefined) this.target = target;\r\n        if (clockwise != undefined) this.clockwise = clockwise;\r\n        if (timePerRound != undefined) this.timePerRound = timePerRound;\r\n        if (faceToTarget != undefined) this.faceToTarget = faceToTarget;\r\n        if (faceAxis != undefined) this.faceAxis = faceAxis;\r\n        if (!this.target) {\r\n            cc.warn('[RotateAround]', 'No target!');\r\n            return;\r\n        }\r\n        // 计算初始角度和半径\r\n        const p1 = this.target.getPosition(),\r\n            p2 = this.node.getPosition();\r\n        this.angle = this.getAngle(p1, p2);\r\n        this.radius = this.getDistance(p1, p2);\r\n        // 开始\r\n        this.isRotating = true;\r\n    }\r\n\r\n    /**\r\n     * 停止旋转\r\n     */\r\n    public stop() {\r\n        this.isRotating = false;\r\n    }\r\n\r\n    /**\r\n     * 获取两点间的角度\r\n     * @param p1 点1\r\n     * @param p2 点2\r\n     * @see MathUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/MathUtil.ts\r\n     */\r\n    protected getAngle(p1: cc.Vec2, p2: cc.Vec2): number {\r\n        return Math.atan((p2.y - p1.y) / (p2.x - p1.x));\r\n    }\r\n\r\n    /**\r\n     * 获取两点间的距离\r\n     * @param p1 点1\r\n     * @param p2 点2\r\n     * @see MathUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/MathUtil.ts\r\n     */\r\n    protected getDistance(p1: cc.Vec2, p2: cc.Vec2): number {\r\n        return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\r\n    }\r\n\r\n}\r\n","const { ccclass, property, executionOrder, help, menu } = cc._decorator;\r\n\r\n/**\r\n * 用于在浏览器后台保持运行\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20220207\r\n * @see RunInBackground.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/RunInBackground.ts\r\n */\r\n@ccclass\r\n@executionOrder(-1)\r\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/RunInBackground.ts')\r\n@menu('eazax/其他组件/RunInBackground')\r\nexport default class RunInBackground extends cc.Component {\r\n\r\n    @property({ displayName: CC_DEV && '脚本地址', tooltip: CC_DEV && 'Worker 脚本地址' })\r\n    private url: string = '/worker.js';\r\n\r\n    /** Worker 实例 */\r\n    private worker: Worker = null;\r\n\r\n    /**\r\n     * 生命周期：加载\r\n     */\r\n    protected onLoad() {\r\n        this.init();\r\n        this.registerEvent();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：销毁\r\n     */\r\n    protected onDestroy() {\r\n        this.unregisterEvent();\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    protected registerEvent() {\r\n        this.onVisibilityChange = this.onVisibilityChange.bind(this);\r\n        document.addEventListener('visibilitychange', this.onVisibilityChange);\r\n    }\r\n\r\n    /**\r\n     * 反注册事件\r\n     */\r\n    protected unregisterEvent() {\r\n        document.removeEventListener('visibilitychange', this.onVisibilityChange);\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    private init() {\r\n        // 网页调试需要在预览模板目录下放一份 worker.js\r\n        // 如果使用编辑器自带的预览模板，还需要修改脚本地址\r\n        // if (CC_DEBUG) {\r\n        //     this.url = '/app/editor/static/preview-templates/worker.js';\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 页面切换回调\r\n     */\r\n    private onVisibilityChange() {\r\n        // 切换到后台\r\n        if (document.visibilityState === 'hidden') {\r\n            // 确保引擎处于运行状态\r\n            if (cc.game.isPaused()) {\r\n                cc.game.resume();\r\n            }\r\n            // 创建工作线程\r\n            this.worker = new Worker(this.url);\r\n            this.worker.onmessage = () => {\r\n                // 调用 Cocos 引擎主循环\r\n                cc.director['mainLoop']();\r\n            }\r\n        }\r\n        // 切换到前台\r\n        else if (document.visibilityState === 'visible') {\r\n            if (this.worker) {\r\n                this.worker.terminate();\r\n                this.worker = null;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/*\r\n\r\n以下为 worker.js 脚本内容：\r\n\r\nfunction call(){\r\n    postMessage(1);\r\n    setTimeout('call()', 1000 / 60);\r\n}\r\ncall();\r\n\r\n*/\r\n","/**\n * 场景导航类\n * @author 陈皮皮 (ifaswind)\n * @version 20210318\n * @see SceneNavigator.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/SceneNavigator.ts\n */\nexport default class SceneNavigator {\n\n    /** 首页场景名称 */\n    public static get home() { return this._home; }\n    private static _home: string = null;\n\n    /** 历史记录（栈） */\n    public static get history() { return this._history; }\n    private static _history: string[] = [];\n\n    /** 当前场景名称 */\n    public static get curScene() { return this._curScene; }\n    private static _curScene: string = null;\n\n    /** 上一个场景留下的参数（ onLaunched 之后可用） */\n    public static get param() { return this._param; }\n    private static _param: any = null;\n\n    /**\n     * 设置首页\n     * @param name 场景名\n     */\n    public static setHome(name: string) {\n        this._home = name;\n        this._history = [name];\n        this._curScene = name;\n    }\n\n    /**\n     * 返回首页\n     * @param param 数据\n     * @param coverHistory 覆盖历史记录\n     * @param onLaunched 场景加载完成回调\n     */\n    public static goHome(param?: any, coverHistory?: boolean, onLaunched?: Function) {\n        this._param = null;\n        const name = this._home;\n        if (this._curScene === name) {\n            return;\n        }\n        cc.director.loadScene(name, () => {\n            if (coverHistory) {\n                this._history.length = 0;\n            }\n            this._history.push(name);\n            this._curScene = name;\n            this._param = param || null;\n            onLaunched && onLaunched();\n        });\n    }\n\n    /**\n     * 前往场景\n     * @param name 场景名\n     * @param param 数据\n     * @param onLaunched 场景加载完成回调\n     */\n    public static go(name: string, param?: any, onLaunched?: Function) {\n        this._param = null;\n        cc.director.loadScene(name, () => {\n            this._history.push(name);\n            this._curScene = name;\n            this._param = param || null;\n            onLaunched && onLaunched();\n        });\n    }\n\n    /**\n     * 返回上一个场景\n     * @param param 数据\n     * @param onLaunched 场景加载完成回调\n     */\n    public static back(param?: any, onLaunched?: Function) {\n        if (this._history.length < 1) {\n            return;\n        }\n        this._param = null;\n        const history = this._history,\n            name = history[history.length - 2];\n        cc.director.loadScene(name, () => {\n            history.pop();\n            this._curScene = name;\n            this._param = param || null;\n            onLaunched && onLaunched();\n        });\n    }\n\n}\n","import EventManager from \"../core/EventManager\";\r\n\r\nconst { ccclass, executionOrder, help, menu } = cc._decorator;\r\n\r\n/**\r\n * 屏幕适配组件\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210504\r\n * @see ScreenAdapter.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/ScreenAdapter.ts\r\n */\r\n@ccclass\r\n@executionOrder(-1)\r\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/ScreenAdapter.ts')\r\n@menu('eazax/其他组件/ScreenAdapter')\r\nexport default class ScreenAdapter extends cc.Component {\r\n\r\n    /**\r\n     * 生命周期：加载\r\n     */\r\n    protected onLoad() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：组件启用\r\n     */\r\n    protected onEnable() {\r\n        this.adapt();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    protected init() {\r\n        // 设置游戏窗口变化的回调（仅 Web 平台有效）\r\n        cc.view.setResizeCallback(() => this.onResize());\r\n    }\r\n\r\n    /**\r\n     * 窗口变化回调\r\n     */\r\n    protected onResize() {\r\n        // 由于 setResizeCallback 只能设置一个回调\r\n        // 使用事件系统发送一个特定事件，让其他组件也可以监听到窗口变化\r\n        EventManager.emit('view-resize');\r\n        // 适配\r\n        this.adapt();\r\n    }\r\n\r\n    /**\r\n     * 适配\r\n     */\r\n    protected adapt() {\r\n        // 实际屏幕比例\r\n        const winSize = cc.winSize,\r\n            screenRatio = winSize.width / winSize.height;\r\n        // 设计比例\r\n        const designResolution = cc.Canvas.instance.designResolution,\r\n            designRatio = designResolution.width / designResolution.height;\r\n        // 判断实际屏幕宽高比\r\n        if (screenRatio <= 1) {\r\n            // 此时屏幕高度大于宽度\r\n            if (screenRatio <= designRatio) {\r\n                this.setFitWidth();\r\n            } else {\r\n                // 此时实际屏幕比例大于设计比例\r\n                // 为了保证纵向的游戏内容不受影响，应使用 fitHeight 模式\r\n                this.setFitHeight();\r\n            }\r\n        } else {\r\n            // 此时屏幕高度小于宽度\r\n            this.setFitHeight();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 适配高度模式\r\n     */\r\n    protected setFitHeight() {\r\n        const canvas = cc.Canvas.instance;\r\n        canvas.fitHeight = true;\r\n        canvas.fitWidth = false;\r\n    }\r\n\r\n    /**\r\n     * 适配宽度模式\r\n     */\r\n    protected setFitWidth() {\r\n        const canvas = cc.Canvas.instance;\r\n        canvas.fitHeight = false;\r\n        canvas.fitWidth = true;\r\n    }\r\n\r\n}\r\n","import EditorAsset from \"../../misc/EditorAsset\";\r\n\r\nconst { ccclass, property, requireComponent, executeInEditMode, disallowMultiple, executionOrder } = cc._decorator;\r\n\r\n/** 波浪方向 */\r\nexport enum SineWaveDirection {\r\n    /** 左 */\r\n    Left = 1,\r\n    /** 右 */\r\n    Right\r\n}\r\n\r\n/**\r\n * 正弦波浪 Shader 组件，该组件需要对应的 Effect 才能正常使用！\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210909\r\n * @see SineWave.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/SineWave.ts\r\n * @see eazax-sine-wave.effect https://gitee.com/ifaswind/eazax-ccc/blob/master/resources/effects/eazax-sine-wave.effect\r\n */\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\n@executeInEditMode\r\n@disallowMultiple\r\n@executionOrder(-100)\r\nexport default class SineWave extends cc.Component {\r\n\r\n    @property private _effect: cc.EffectAsset = null;\r\n    @property({ type: cc.EffectAsset, tooltip: CC_DEV && 'Effect 资源', readonly: true })\r\n    public get effect() { return this._effect; }\r\n    public set effect(value: cc.EffectAsset) { this._effect = value; this.init(); }\r\n\r\n    @property private _amplitude: number = 0.05;\r\n    @property({ tooltip: CC_DEV && '振幅（节点高度比例）' })\r\n    public get amplitude() { return this._amplitude; }\r\n    public set amplitude(value: number) { this._amplitude = value; this.updateProperties(); }\r\n\r\n    @property private _angularVelocity: number = 10;\r\n    @property({ tooltip: CC_DEV && '角速度' })\r\n    public get angularVelocity() { return this._angularVelocity; }\r\n    public set angularVelocity(value: number) { this._angularVelocity = value; this.updateProperties(); }\r\n\r\n    @property private _frequency: number = 10;\r\n    @property({ tooltip: CC_DEV && '频率' })\r\n    public get frequency() { return this._frequency; }\r\n    public set frequency(value: number) { this._frequency = value; this.updateProperties(); }\r\n\r\n    @property private _height: number = 0.5;\r\n    @property({ tooltip: CC_DEV && '顶端高度（节点高度比例）' })\r\n    public get height() { return this._height; }\r\n    public set height(value: number) { this._height = value; this.updateProperties(); }\r\n\r\n    @property private _direction: SineWaveDirection = SineWaveDirection.Left;\r\n    @property({ type: cc.Enum(SineWaveDirection), tooltip: CC_DEV && '波浪方向' })\r\n    public get direction() { return this._direction; }\r\n    public set direction(value: SineWaveDirection) { this._direction = value; this.updateProperties(); }\r\n\r\n    private sprite: cc.Sprite = null;\r\n\r\n    private material: cc.Material = null;\r\n\r\n    protected onLoad() {\r\n        this.init();\r\n    }\r\n\r\n    protected resetInEditor() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    public async init() {\r\n        /**\r\n         * 编辑器环境下自动绑定 Effect 资源\r\n         * 依赖于 EditorAsset 模块，没有该模块请将此代码块以及顶部导入语句去除\r\n         * @see EditorAsset.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/misc/EditorAsset.ts\r\n         */\r\n        if (CC_EDITOR && !this._effect) {\r\n            await new Promise<void>(res => {\r\n                const path = 'eazax-ccc/resources/effects/eazax-sine-wave.effect';\r\n                EditorAsset.load(path, 'effect', (err: Error, result: cc.EffectAsset) => {\r\n                    if (err) cc.warn(`[${this['__proto__']['__classname__']}]`, '请手动指定组件的 Effect 资源！');\r\n                    else this._effect = result;\r\n                    res();\r\n                });\r\n            });\r\n        }\r\n        if (!this._effect) return;\r\n\r\n        // 使用自定义 Effect 需禁用纹理的 packable 属性（因为动态合图之后无法正确获取纹理 UV 坐标）\r\n        // 详情请看：https://docs.cocos.com/creator/manual/zh/asset-workflow/sprite.html#packable\r\n        this.sprite = this.node.getComponent(cc.Sprite);\r\n        if (this.sprite.spriteFrame) this.sprite.spriteFrame.getTexture().packable = false;\r\n        // 生成并应用材质\r\n        this.material = cc.Material.create(this._effect);\r\n        this.sprite.setMaterial(0, this.material);\r\n        // 更新材质属性\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 设置图像\r\n     * @param spriteFrame 精灵\r\n     */\r\n    public setSpriteFrame(spriteFrame: cc.SpriteFrame) {\r\n        this.sprite.spriteFrame = spriteFrame;\r\n        this.sprite.spriteFrame.getTexture().packable = false;\r\n        // 更新材质属性\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 更新材质属性\r\n     */\r\n    public updateProperties() {\r\n        if (!this.effect) return cc.warn('[SineWave]', '请指定 Effect 资源！');\r\n        this.material.setProperty('amplitude', this._amplitude);\r\n        this.material.setProperty('angularVelocity', this._angularVelocity);\r\n        this.material.setProperty('frequency', this._frequency);\r\n        this.material.setProperty('offset', ((1.0 - this._height) + this._amplitude));\r\n        this.material.setProperty('toLeft', (this._direction === SineWaveDirection.Left));\r\n    }\r\n\r\n}\r\n","/**\n * 本地储存工具\n * @author 陈皮皮 (ifaswind)\n * @version 20220122\n * @see StorageUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/StorageUtil.ts\n */\nexport default class StorageUtil {\n\n    /**\n     * 保存数据到本地\n     * @param key 键\n     * @param value 值\n     */\n    public static set(key: string, value: any) {\n        if (typeof value === 'object') {\n            cc.sys.localStorage.setItem(key, JSON.stringify(value));\n        } else {\n            cc.sys.localStorage.setItem(key, value);\n        }\n    }\n\n    /**\n     * 读取本地数据\n     * @param key 键\n     * @param parse 解析\n     */\n    public static get(key: string, parse: boolean = true) {\n        const dataString = cc.sys.localStorage.getItem(key);\n        if (dataString) {\n            if (parse) {\n                try {\n                    return JSON.parse(dataString);\n                } catch {\n                    return dataString;\n                }\n            }\n            return dataString;\n        }\n        return null;\n    }\n\n    /**\n     * 移除本地数据\n     * @param key 键\n     */\n    public static remove(key: string) {\n        cc.sys.localStorage.removeItem(key);\n    }\n\n}\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Subtitle extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    private label: cc.Label = null;\r\n\r\n    private static instance: Subtitle = null;\r\n\r\n    private queen: string[] = [];\r\n\r\n    private curIndex: number = 0;\r\n\r\n    private interval: number = 1.5;\r\n\r\n    protected onLoad() {\r\n        Subtitle.instance = this;\r\n    }\r\n\r\n    /**\r\n     * 打印字幕\r\n     * @param texts 文本\r\n     * @param interval 间隔\r\n     */\r\n    public static print(texts: string[], interval: number = 1.5) {\r\n        this.instance.print(texts, interval);\r\n    }\r\n\r\n    /**\r\n     * 清除字幕\r\n     */\r\n    public static clear() {\r\n        this.instance.clear();\r\n    }\r\n\r\n\r\n    /**\r\n     * 打印字幕\r\n     * @param texts 文本\r\n     * @param interval 间隔\r\n     */\r\n    public print(texts: string[], interval: number = 1.5) {\r\n        if (texts.length === 0) return;\r\n        this.unscheduleAllCallbacks();\r\n        this.queen = texts;\r\n        this.interval = interval;\r\n        this.curIndex = -1;\r\n        this.next();\r\n        // this.schedule(() => this.next(), this.interval, cc.macro.REPEAT_FOREVER, this.interval);\r\n    }\r\n\r\n    /**\r\n     * 下一条字幕\r\n     */\r\n    private next() {\r\n        this.curIndex++;\r\n        if (this.curIndex >= this.queen.length) {\r\n            this.unscheduleAllCallbacks();\r\n            return;\r\n        }\r\n        this.label.string = this.queen[this.curIndex];\r\n        this.scheduleOnce(() => this.next(), this.interval);\r\n    }\r\n\r\n    /**\r\n     * 清除字幕\r\n     */\r\n    public clear() {\r\n        this.unscheduleAllCallbacks();\r\n        this.queen = [];\r\n        this.curIndex = 0;\r\n        this.label.string = '';\r\n    }\r\n\r\n}\r\n","import BaseAssembler from \"../../core/renderer/BaseAssembler\";\n\nconst { ccclass, property, executeInEditMode, disallowMultiple, help, menu } = cc._decorator;\n\n/**\n * 纹理渲染器（包含缩放和偏移属性）\n * @author 陈皮皮 (ifaswind)\n * @version 20220228\n * @see TextureWithTilingOffset.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/renderers/TextureWithTilingOffset.ts\n * @see BaseAssembler.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/renderer/BaseAssembler.ts\n * @see eazax-sprite-tiling-offset.effect https://gitee.com/ifaswind/eazax-ccc/blob/master/resources/effects/eazax-sprite-tiling-offset.effect\n */\n@ccclass\n@executeInEditMode\n@disallowMultiple\n@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/renderers/TextureWithTilingOffset.ts')\n@menu('eazax/渲染组件/BaseTextureRenderer')\nexport default class TextureWithTilingOffset extends cc.RenderComponent {\n\n    // 隐藏 RenderComponent 的 materials 属性\n    @property({ override: true, visible: false })\n    protected get materials() {\n        return this._materials;\n    }\n    protected set materials(value) {\n        this._materials = value;\n        this._activateMaterial();\n    }\n\n    @property()\n    protected _material: cc.Material = null;\n    @property({ type: cc.Material, tooltip: CC_DEV && '材质' })\n    public get material() {\n        return this._material;\n    }\n    public set material(value) {\n        this._material = value;\n        this._activateMaterial();\n    }\n\n    @property()\n    protected _texture: cc.Texture2D = null;\n    @property({ type: cc.Texture2D, tooltip: CC_DEV && '纹理' })\n    public get texture() {\n        return this._texture;\n    }\n    public set texture(value) {\n        this._texture = value;\n        this._activateMaterial();\n    }\n\n    @property()\n    protected _tilingOffset: cc.Vec4 = new cc.Vec4(1, 1, 0, 0);\n\n    @property({ type: cc.Vec2, tooltip: CC_DEV && '纹理缩放' })\n    public get tiling() {\n        return new cc.Vec2(this._tilingOffset.x, this._tilingOffset.y);\n    }\n    public set tiling(value) {\n        this._tilingOffset.x = value.x;\n        this._tilingOffset.y = value.y;\n        this._updateMaterial();\n    }\n\n    @property({ type: cc.Vec2, tooltip: CC_DEV && '纹理偏移' })\n    public get offset() {\n        return new cc.Vec2(this._tilingOffset.z, this._tilingOffset.w);\n    }\n    public set offset(value) {\n        this._tilingOffset.z = value.x;\n        this._tilingOffset.w = value.y;\n        this._updateMaterial();\n    }\n\n    /**\n     * 顶点装配器\n     */\n    public _assembler: BaseAssembler = null;\n\n    /**\n     * 生命周期：启用\n     */\n    protected onEnable() {\n        super.onEnable();\n        // 节点\n        this.node.on(cc.Node.EventType.SIZE_CHANGED, this.setVertsDirty, this);\n        this.node.on(cc.Node.EventType.ANCHOR_CHANGED, this.setVertsDirty, this);\n    }\n\n    /**\n     * 生命周期：禁用\n     */\n    protected onDisable() {\n        super.onDisable();\n        // 节点\n        this.node.off(cc.Node.EventType.SIZE_CHANGED, this.setVertsDirty, this);\n        this.node.off(cc.Node.EventType.ANCHOR_CHANGED, this.setVertsDirty, this);\n    }\n\n    /**\n     * 重置顶点装配器\n     */\n    public _resetAssembler() {\n        // 装配器\n        this._assembler = new BaseAssembler();\n        this._assembler.init(this);\n        // 标记更新顶点数据\n        this.setVertsDirty();\n    }\n\n    /**\n     * 激活材质\n     */\n    public _activateMaterial() {\n        if (this._material) {\n            this._materials[0] = cc.MaterialVariant.create(this._material, this);\n        }\n        this._updateMaterial();\n    }\n\n    /**\n     * 更新材质属性\n     */\n    public _updateMaterial() {\n        if (this._texture && this._materials[0]) {\n            const material = this._materials[0];\n            // 启用 USE_TEXTURE 宏\n            if (material.getDefine('USE_TEXTURE') !== undefined) {\n                material.define('USE_TEXTURE', true);\n            }\n            // 填充属性\n            material.setProperty('texture', this._texture);\n            material.setProperty('tilingOffset', this._tilingOffset);\n            // 标记为可渲染状态\n            this.markForRender(true);\n        } else {\n            // 禁用渲染\n            this.disableRender();\n        }\n    }\n\n    /**\n     * 验证渲染状态\n     */\n    public _validateRender() {\n        if (!this._texture || !this._materials[0]) {\n            this.disableRender();\n        }\n    }\n\n}\n","/**\r\n * 时间工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210317\r\n * @see TimeUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/TimeUtil.ts\r\n */\r\nexport default class TimeUtil {\r\n\r\n    /**\r\n     * 获取当前时间戳\r\n     * @example\r\n     * TimeUtil.getTimestamp(); // 1614616955186\r\n     */\r\n    public static getTimestamp(): number {\r\n        return new Date().getTime();\r\n    }\r\n\r\n    /**\r\n     * 获取当前日期（年/月/日）\r\n     * @example\r\n     * TimeUtil.getDate(); // \"2021/3/2\"\r\n     */\r\n    public static getDate(): string {\r\n        return new Date().toLocaleDateString();\r\n    }\r\n\r\n    /**\r\n     * 获取当天指定时间的时间戳\r\n     * @param hour 时\r\n     * @param minute 分\r\n     * @param second 秒\r\n     * @example\r\n     * const time = TimeUtil.getTargetTimestamp(10, 20, 30); // 1601259630000\r\n     * new Date(time).toLocaleString(); // \"上午10:20:30\"\r\n     */\r\n    public static getTargetTimestamp(hour: number = 0, minute: number = 0, second: number = 0): number {\r\n        const start = new Date(new Date().toLocaleDateString()).getTime();\r\n        const target = ((hour * 3600) + (minute * 60) + second) * 1000;\r\n        return new Date(start + target).getTime();\r\n    }\r\n\r\n    /**\r\n     * 将毫秒转为时分秒的格式（最小单位为秒，如：\"00:01:59\"）\r\n     * @param time 毫秒数\r\n     * @param separator 分隔符\r\n     * @param keepHours 当小时数为 0 时依然展示小时数\r\n     * @example \r\n     * TimeUtil.msToHMS(119000); // \"00:01:59\"\r\n     */\r\n    public static msToHMS(time: number, separator: string = ':', keepHours: boolean = true): string {\r\n        const hours = Math.floor(time / 3600000);\r\n        const minutes = Math.floor((time - (hours * 3600000)) / 60000);\r\n        const seconds = Math.floor((time - (hours * 3600000) - (minutes * 60000)) / 1000);\r\n        const hoursString = (hours === 0 && !keepHours) ? '' : `${hours.toString().padStart(2, '0')}:`;\r\n        return `${hoursString}${minutes.toString().padStart(2, '0')}${separator}${seconds.toString().padStart(2, '0')}`;\r\n    }\r\n\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n/**\r\n * 点击屏蔽器组件\r\n * @see TouchBlocker2.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/TouchBlocker2.ts\r\n */\r\n@ccclass\r\nexport default class TouchBlocker2 extends cc.Component {\r\n\r\n    /** 可被点击的节点列表 */\r\n    @property({ type: [cc.Node], tooltip: CC_DEV && '可点击的节点列表' })\r\n    public allowList: cc.Node[] = [];\r\n\r\n    /** 是否屏蔽点击 */\r\n    @property({ tooltip: CC_DEV && '是否屏蔽点击' })\r\n    public blocked: boolean = false;\r\n\r\n    /** 是否设为常驻节点模式 */\r\n    @property({ tooltip: CC_DEV && '是否设为常驻节点模式' })\r\n    private persist: boolean = false;\r\n\r\n    /** 实例 */\r\n    private static instance: TouchBlocker2 = null;\r\n\r\n    /**\r\n     * 生命周期：加载\r\n     */\r\n    protected onLoad() {\r\n        this.init();\r\n        this.registerEvent();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：销毁\r\n     */\r\n    protected onDestroy() {\r\n        this.unregisterEvent();\r\n        TouchBlocker2.instance = null;\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    protected init() {\r\n        if (this.persist) {\r\n            // 设为最外层节点\r\n            this.node.setParent(cc.Canvas.instance.node);\r\n            this.node.setSiblingIndex(cc.macro.MAX_ZINDEX);\r\n            // 设为常驻节点\r\n            cc.game.addPersistRootNode(this.node);\r\n        }\r\n        TouchBlocker2.instance = this;\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    protected registerEvent() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onEvent, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onEvent, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onEvent, this);\r\n        // 取消吞噬事件\r\n        this.setSwallowTouches(false);\r\n    }\r\n\r\n    /**\r\n     * 反注册事件\r\n     */\r\n    protected unregisterEvent() {\r\n        this.node.targetOff(this);\r\n    }\r\n\r\n    /**\r\n     * 事件回调\r\n     * @param event 事件\r\n     */\r\n    protected onEvent(event: cc.Event.EventTouch) {\r\n        if (this.blocked && !this.clickOnAnyTarget(event.getLocation())) {\r\n            event.stopPropagationImmediate();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否点击到任意目标上\r\n     * @param pos 点击位置（世界坐标系）\r\n     */\r\n    protected clickOnAnyTarget(pos: cc.Vec2) {\r\n        for (let i = 0; i < this.allowList.length; i++) {\r\n            const rect = this.allowList[i].getBoundingBoxToWorld();\r\n            if (rect.contains(pos)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 设置节点是否吞噬点击事件\r\n     * @param swallow 状态\r\n     */\r\n    public setSwallowTouches(swallow: boolean) {\r\n        this.node._touchListener.setSwallowTouches(swallow);\r\n    }\r\n\r\n    /**\r\n     * 增加可点击的节点\r\n     * @param nodes 节点\r\n     */\r\n    public static addTargets(nodes: cc.Node | cc.Node[]) {\r\n        if (Array.isArray(nodes)) {\r\n            this.instance.allowList.push(...nodes);\r\n        } else {\r\n            this.instance.allowList.push(nodes);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置唯一可点击的目标（此行为会清空原有的可点击节点列表）\r\n     * @param node 节点\r\n     */\r\n    public static setTarget(node: cc.Node) {\r\n        this.clearTargets();\r\n        this.instance.allowList.push(node);\r\n    }\r\n\r\n    /**\r\n     * 清空可点击节点列表\r\n     */\r\n    public static clearTargets() {\r\n        this.instance.allowList.length = 0;\r\n    }\r\n\r\n    /** 启用屏蔽 */\r\n    public static on() {\r\n        this.instance.blocked = true;\r\n    }\r\n\r\n    /** 禁用屏蔽 */\r\n    public static off() {\r\n        this.instance.blocked = false;\r\n    }\r\n\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n/**\r\n * 点击屏蔽器组件\r\n * @see TouchBlocker.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/TouchBlocker.ts\r\n * @version 20210421\r\n */\r\n@ccclass\r\nexport default class TouchBlocker extends cc.Component {\r\n\r\n    @property({ type: cc.Node, tooltip: CC_DEV && '可被点击的节点' })\r\n    public target: cc.Node = null;\r\n\r\n    /**\r\n     * 拦截状态\r\n     */\r\n    protected isBlockAll: boolean = false;\r\n\r\n    /**\r\n     * 放行状态\r\n     */\r\n    protected isPassAll: boolean = false;\r\n\r\n    /**\r\n     * 生命周期：加载\r\n     */\r\n    protected onLoad() {\r\n        this.registerEvent();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：节点开始\r\n     */\r\n    protected start() {\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * 生命周期：销毁\r\n     */\r\n    protected onDestroy() {\r\n        this.unregisterEvent();\r\n    }\r\n\r\n    /**\r\n     * 注册事件\r\n     */\r\n    protected registerEvent() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchEvent, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchEvent, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEvent, this);\r\n    }\r\n\r\n    /**\r\n     * 反注册事件\r\n     */\r\n    protected unregisterEvent() {\r\n        this.node.targetOff(this);\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    protected reset() {\r\n        // 取消吞噬事件\r\n        this.setSwallowTouches(false);\r\n    }\r\n\r\n    /**\r\n     * 事件回调\r\n     * @param event 事件\r\n     */\r\n    protected onTouchEvent(event: cc.Event.EventTouch) {\r\n        // 全部放行状态\r\n        if (this.isPassAll) {\r\n            return;\r\n        }\r\n        // 拦截状态并且无目标\r\n        if (this.isBlockAll || !this.target) {\r\n            event.stopPropagationImmediate();\r\n            return;\r\n        }\r\n        // 点击是否命中目标节点\r\n        const targetRect = this.target.getBoundingBoxToWorld(),\r\n            isContains = targetRect.contains(event.getLocation());\r\n        if (!isContains) {\r\n            event.stopPropagationImmediate();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 屏蔽所有点击\r\n     */\r\n    public blockAll() {\r\n        this.isBlockAll = true;\r\n        this.isPassAll = false;\r\n    }\r\n\r\n    /**\r\n     * 放行所有点击\r\n     */\r\n    public passAll() {\r\n        this.isPassAll = true;\r\n        this.isBlockAll = false;\r\n    }\r\n\r\n    /**\r\n     * 设置可点击的节点\r\n     * @param node 节点\r\n     */\r\n    public setTarget(node: cc.Node) {\r\n        this.target = node;\r\n        this.isBlockAll = false;\r\n        this.isPassAll = false;\r\n    }\r\n\r\n    /**\r\n     * 设置节点是否吞噬点击事件\r\n     * @param swallow 状态\r\n     */\r\n    public setSwallowTouches(swallow: boolean) {\r\n        this.node._touchListener && this.node._touchListener.setSwallowTouches(swallow);\r\n    }\r\n\r\n}\r\n","const { ccclass, property } = cc._decorator;\n\n/**\n * 点击效果\n * @author 陈皮皮 (ifaswind)\n * @version 20220213\n * @see TouchEffect.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/TouchEffect.ts\n */\n@ccclass\nexport default class TouchEffect extends cc.Component {\n\n    @property({ type: cc.Prefab, displayName: CC_DEV && '效果节点预制体' })\n    protected effectPrefab: cc.Prefab = null;\n\n    @property({ type: cc.Node, displayName: CC_DEV && '效果节点容器' })\n    protected effectContainer: cc.Node = null;\n\n    @property({ displayName: CC_DEV && '持续时间' })\n    protected duration: number = 0.5;\n\n    @property({ displayName: CC_DEV && '触发间隔' })\n    protected interval: number = 0.5;\n\n    @property({ displayName: CC_DEV && '同时存在最大数量' })\n    protected maxQuantity: number = 20;\n\n    @property({ displayName: CC_DEV && '允许滑动触发', tooltip: CC_DEV && '希望你知道你在做什么，试着调整触发时间和同时存在最大数量' })\n    protected triggerByMoving: boolean = false;\n\n    @property({ displayName: CC_DEV && '使用节点池缓存', tooltip: CC_DEV && '提高播放大量效果时的性能' })\n    protected useNodePool: boolean = false;\n\n    @property({ visible() { return this.useNodePool; }, displayName: CC_DEV && '使用节点池缓存', tooltip: CC_DEV && '提高播放大量效果时的性能' })\n    protected nodePoolLimit: number = 20;\n\n    /**\n     * 当前存在效果数量\n     */\n    protected curCount: number = 0;\n\n    /**\n     * 上一个效果触发时间\n     */\n    protected lastTriggerTime: number = 0;\n\n    /**\n     * 节点池\n     */\n    protected nodePool: cc.NodePool = new cc.NodePool();\n\n    /**\n     * 生命周期：加载\n     */\n    protected onLoad() {\n        this.registerEvent();\n    }\n\n    /**\n     * 生命周期：销毁\n     */\n    protected onDestroy() {\n        this.unregisterEvent();\n    }\n\n    /**\n     * 注册事件\n     */\n    protected registerEvent() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        // 取消事件吞噬\n        this.setSwallowTouches(false);\n    }\n\n    /**\n     * 反注册事件\n     */\n    protected unregisterEvent() {\n        this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n    }\n\n    /**\n     * 点击开始回调\n     * @param event \n     */\n    protected onTouchStart(event: cc.Event.EventTouch) {\n        this.playEffect(event.getLocation());\n    }\n\n    /**\n     * 点击移动回调\n     * @param event \n     */\n    protected onTouchMove(event: cc.Event.EventTouch) {\n        if (!this.triggerByMoving) {\n            return;\n        }\n        this.playEffect(event.getLocation());\n    }\n\n    /**\n     * 播放效果\n     * @param pos \n     */\n    protected playEffect(pos: cc.Vec2) {\n        const now = Date.now();\n        if (this.curCount >= this.maxQuantity ||\n            this.lastTriggerTime > (now - this.interval * 1000)) {\n            return;\n        }\n        this.lastTriggerTime = now;\n        this.curCount++;\n        // 创建节点\n        let node: cc.Node = null;\n        if (this.nodePool.size() > 0) {\n            node = this.nodePool.get();\n        } else {\n            node = cc.instantiate(this.effectPrefab);\n        }\n        // 设置节点\n        const container = this.effectContainer || this.node;\n        node.setParent(container);\n        node.setPosition(container.convertToNodeSpaceAR(pos));\n        // 播放动画\n        node.opacity = 255;\n        cc.tween(node)\n            .to(this.duration, { opacity: 0 })\n            .call(() => this.recycleEffect(node))\n            .start();\n    }\n\n    /**\n     * 回收效果\n     * @param node \n     */\n    protected recycleEffect(node: cc.Node) {\n        this.curCount--;\n        // 回收或者销毁\n        if (this.useNodePool && this.nodePool.size() < this.nodePoolLimit) {\n            this.nodePool.put(node);\n        } else {\n            node.destroy();\n        }\n    }\n\n    /**\n     * 设置节点是否吞噬点击事件\n     * @param swallow 状态\n     */\n    protected setSwallowTouches(swallow: boolean) {\n        this.node._touchListener && this.node._touchListener.setSwallowTouches(swallow);\n    }\n\n}\n","/**\r\n * Tween 工具\r\n * @author 陈皮皮 (ifaswind)\r\n * @version 20210320\r\n * @see TweenUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/TweenUtil.ts\r\n */\r\nexport default class TweenUtil {\r\n\r\n    /**\r\n     * 水平翻转（卡片翻转）\r\n     * @param node 节点\r\n     * @param duration 总时长\r\n     * @param onMiddle 中间状态回调\r\n     * @param onComplete 完成回调\r\n     */\r\n    public static flip(node: cc.Node, duration: number, onMiddle?: Function, onComplete?: Function): Promise<void> {\r\n        return new Promise<void>(res => {\r\n            const tween = cc.tween,\r\n                time = duration / 2,\r\n                scaleX = node.scale,\r\n                skewY = scaleX > 0 ? 20 : -20;\r\n            tween(node)\r\n                .parallel(\r\n                    tween().to(time, { scaleX: 0 }, { easing: 'quadIn' }),\r\n                    tween().to(time, { skewY: -skewY }, { easing: 'quadOut' }),\r\n                )\r\n                .call(() => {\r\n                    onMiddle && onMiddle();\r\n                })\r\n                .parallel(\r\n                    tween().to(time, { scaleX: -scaleX }, { easing: 'quadOut' }),\r\n                    tween().to(time, { skewY: 0 }, { easing: 'quadIn' }),\r\n                )\r\n                .call(() => {\r\n                    onComplete && onComplete();\r\n                    res();\r\n                })\r\n                .start();\r\n        });\r\n    }\r\n\r\n}\r\n","const { ccclass, property, executeInEditMode, playOnFocus } = cc._decorator;\n/**\n * 悬浮效果\n * @author 神兽白泽\n */\n@ccclass\n@executeInEditMode()\n@playOnFocus()\nexport default class FloatMove extends cc.Component {\n \n    @property({ displayName: '上下悬浮范围' }) private value: number = 15;\n    @property({ displayName: '消耗时间', tooltip: '悬浮1/4距离消耗的时间' }) private time: number = 1;\n \n    /** 编辑器预览 */\n    private _edit_play: boolean = false;\n    private startPos: cc.Vec3;\n    @property({ displayName: '编辑器预览' })\n    get edit_play(): boolean {\n        if (this._edit_play && !this.edit_playing) this.initShakeSlow();\n        this.edit_playing = this._edit_play;\n        return this._edit_play;\n    }\n    set edit_play(v: boolean) {\n        this._edit_play = v;\n        if (!v) this.stop();\n    }\n \n    /** 编辑器是否正在播放 */\n    private edit_playing = false;\n \n    onLoad() {\n        this.startPos = this.node.position\n    }\n \n    start() {\n        if (CC_EDITOR) {\n            if (this.edit_play) {\n                this.initShakeSlow()\n            }\n        } else {\n            this.initShakeSlow()\n        }\n    }\n \n    /**\n     * 缓动\n     * @param node 动画节点\n     */\n    private initShakeSlow() {\n        let node = this.node;\n        let rotate1 = cc.tween().to(this.time, { position: { value: new cc.Vec2(0, this.startPos.y + this.value), easing: 'sineOut' } })\n        let rotate2 = cc.tween().to(this.time, { position: { value: new cc.Vec2(0, this.startPos.y), easing: 'sineIn' } })\n        let rotate3 = cc.tween().to(this.time, { position: { value: new cc.Vec2(0, this.startPos.y - this.value), easing: 'sineOut' } })\n        let rotate4 = cc.tween().to(this.time, { position: { value: new cc.Vec2(0, this.startPos.y), easing: 'sineIn' } })\n        let sequence1 = cc.tween().sequence(rotate1, rotate2, rotate3, rotate4)\n        cc.tween(node).then(sequence1).repeatForever().start();\n    }\n \n    /** 停止动画 */\n    private stop() {\n        this.node.position = this.startPos \n        this.node.stopAllActions();\n    }\n \n}",";(function (globalScope) {\n    'use strict';\n  \n  \n    /*!\n     *  decimal.js v10.4.3\n     *  An arbitrary-precision Decimal type for JavaScript.\n     *  https://github.com/MikeMcl/decimal.js\n     *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\n     *  MIT Licence\n     */\n  \n  \n    // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\n  \n  \n      // The maximum exponent magnitude.\n      // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\n    var EXP_LIMIT = 9e15,                      // 0 to 9e15\n  \n      // The limit on the value of `precision`, and on the value of the first argument to\n      // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\n      MAX_DIGITS = 1e9,                        // 0 to 1e9\n  \n      // Base conversion alphabet.\n      NUMERALS = '0123456789abcdef',\n  \n      // The natural logarithm of 10 (1025 digits).\n      LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\n  \n      // Pi (1025 digits).\n      PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\n  \n  \n      // The initial configuration properties of the Decimal constructor.\n      DEFAULTS = {\n  \n        // These values must be integers within the stated ranges (inclusive).\n        // Most of these values can be changed at run-time using the `Decimal.config` method.\n  \n        // The maximum number of significant digits of the result of a calculation or base conversion.\n        // E.g. `Decimal.config({ precision: 20 });`\n        precision: 20,                         // 1 to MAX_DIGITS\n  \n        // The rounding mode used when rounding to `precision`.\n        //\n        // ROUND_UP         0 Away from zero.\n        // ROUND_DOWN       1 Towards zero.\n        // ROUND_CEIL       2 Towards +Infinity.\n        // ROUND_FLOOR      3 Towards -Infinity.\n        // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\n        // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\n        // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\n        // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\n        // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\n        //\n        // E.g.\n        // `Decimal.rounding = 4;`\n        // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\n        rounding: 4,                           // 0 to 8\n  \n        // The modulo mode used when calculating the modulus: a mod n.\n        // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\n        // The remainder (r) is calculated as: r = a - n * q.\n        //\n        // UP         0 The remainder is positive if the dividend is negative, else is negative.\n        // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\n        // FLOOR      3 The remainder has the same sign as the divisor (Python %).\n        // HALF_EVEN  6 The IEEE 754 remainder function.\n        // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\n        //\n        // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\n        // division (9) are commonly used for the modulus operation. The other rounding modes can also\n        // be used, but they may not give useful results.\n        modulo: 1,                             // 0 to 9\n  \n        // The exponent value at and beneath which `toString` returns exponential notation.\n        // JavaScript numbers: -7\n        toExpNeg: -7,                          // 0 to -EXP_LIMIT\n  \n        // The exponent value at and above which `toString` returns exponential notation.\n        // JavaScript numbers: 21\n        toExpPos:  21,                         // 0 to EXP_LIMIT\n  \n        // The minimum exponent value, beneath which underflow to zero occurs.\n        // JavaScript numbers: -324  (5e-324)\n        minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\n  \n        // The maximum exponent value, above which overflow to Infinity occurs.\n        // JavaScript numbers: 308  (1.7976931348623157e+308)\n        maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\n  \n        // Whether to use cryptographically-secure random number generation, if available.\n        crypto: false                          // true/false\n      },\n  \n  \n    // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\n  \n  \n      Decimal, inexact, noConflict, quadrant,\n      external = true,\n  \n      decimalError = '[DecimalError] ',\n      invalidArgument = decimalError + 'Invalid argument: ',\n      precisionLimitExceeded = decimalError + 'Precision limit exceeded',\n      cryptoUnavailable = decimalError + 'crypto unavailable',\n      tag = '[object Decimal]',\n  \n      mathfloor = Math.floor,\n      mathpow = Math.pow,\n  \n      isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\n      isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\n      isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\n      isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\n  \n      BASE = 1e7,\n      LOG_BASE = 7,\n      MAX_SAFE_INTEGER = 9007199254740991,\n  \n      LN10_PRECISION = LN10.length - 1,\n      PI_PRECISION = PI.length - 1,\n  \n      // Decimal.prototype object\n      P = { toStringTag: tag };\n  \n  \n    // Decimal prototype methods\n  \n  \n    /*\n     *  absoluteValue             abs\n     *  ceil\n     *  clampedTo                 clamp\n     *  comparedTo                cmp\n     *  cosine                    cos\n     *  cubeRoot                  cbrt\n     *  decimalPlaces             dp\n     *  dividedBy                 div\n     *  dividedToIntegerBy        divToInt\n     *  equals                    eq\n     *  floor\n     *  greaterThan               gt\n     *  greaterThanOrEqualTo      gte\n     *  hyperbolicCosine          cosh\n     *  hyperbolicSine            sinh\n     *  hyperbolicTangent         tanh\n     *  inverseCosine             acos\n     *  inverseHyperbolicCosine   acosh\n     *  inverseHyperbolicSine     asinh\n     *  inverseHyperbolicTangent  atanh\n     *  inverseSine               asin\n     *  inverseTangent            atan\n     *  isFinite\n     *  isInteger                 isInt\n     *  isNaN\n     *  isNegative                isNeg\n     *  isPositive                isPos\n     *  isZero\n     *  lessThan                  lt\n     *  lessThanOrEqualTo         lte\n     *  logarithm                 log\n     *  [maximum]                 [max]\n     *  [minimum]                 [min]\n     *  minus                     sub\n     *  modulo                    mod\n     *  naturalExponential        exp\n     *  naturalLogarithm          ln\n     *  negated                   neg\n     *  plus                      add\n     *  precision                 sd\n     *  round\n     *  sine                      sin\n     *  squareRoot                sqrt\n     *  tangent                   tan\n     *  times                     mul\n     *  toBinary\n     *  toDecimalPlaces           toDP\n     *  toExponential\n     *  toFixed\n     *  toFraction\n     *  toHexadecimal             toHex\n     *  toNearest\n     *  toNumber\n     *  toOctal\n     *  toPower                   pow\n     *  toPrecision\n     *  toSignificantDigits       toSD\n     *  toString\n     *  truncated                 trunc\n     *  valueOf                   toJSON\n     */\n  \n  \n    /*\n     * Return a new Decimal whose value is the absolute value of this Decimal.\n     *\n     */\n    P.absoluteValue = P.abs = function () {\n      var x = new this.constructor(this);\n      if (x.s < 0) x.s = 1;\n      return finalise(x);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\n     * direction of positive Infinity.\n     *\n     */\n    P.ceil = function () {\n      return finalise(new this.constructor(this), this.e + 1, 2);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the value of this Decimal clamped to the range\n     * delineated by `min` and `max`.\n     *\n     * min {number|string|Decimal}\n     * max {number|string|Decimal}\n     *\n     */\n    P.clampedTo = P.clamp = function (min, max) {\n      var k,\n        x = this,\n        Ctor = x.constructor;\n      min = new Ctor(min);\n      max = new Ctor(max);\n      if (!min.s || !max.s) return new Ctor(NaN);\n      if (min.gt(max)) throw Error(invalidArgument + max);\n      k = x.cmp(min);\n      return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\n    };\n  \n  \n    /*\n     * Return\n     *   1    if the value of this Decimal is greater than the value of `y`,\n     *  -1    if the value of this Decimal is less than the value of `y`,\n     *   0    if they have the same value,\n     *   NaN  if the value of either Decimal is NaN.\n     *\n     */\n    P.comparedTo = P.cmp = function (y) {\n      var i, j, xdL, ydL,\n        x = this,\n        xd = x.d,\n        yd = (y = new x.constructor(y)).d,\n        xs = x.s,\n        ys = y.s;\n  \n      // Either NaN or ±Infinity?\n      if (!xd || !yd) {\n        return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\n      }\n  \n      // Either zero?\n      if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\n  \n      // Signs differ?\n      if (xs !== ys) return xs;\n  \n      // Compare exponents.\n      if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\n  \n      xdL = xd.length;\n      ydL = yd.length;\n  \n      // Compare digit by digit.\n      for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\n        if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\n      }\n  \n      // Compare lengths.\n      return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\n     *\n     * Domain: [-Infinity, Infinity]\n     * Range: [-1, 1]\n     *\n     * cos(0)         = 1\n     * cos(-0)        = 1\n     * cos(Infinity)  = NaN\n     * cos(-Infinity) = NaN\n     * cos(NaN)       = NaN\n     *\n     */\n    P.cosine = P.cos = function () {\n      var pr, rm,\n        x = this,\n        Ctor = x.constructor;\n  \n      if (!x.d) return new Ctor(NaN);\n  \n      // cos(0) = cos(-0) = 1\n      if (!x.d[0]) return new Ctor(1);\n  \n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\n      Ctor.rounding = 1;\n  \n      x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\n  \n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n  \n      return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\n    };\n  \n  \n    /*\n     *\n     * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\n     * `precision` significant digits using rounding mode `rounding`.\n     *\n     *  cbrt(0)  =  0\n     *  cbrt(-0) = -0\n     *  cbrt(1)  =  1\n     *  cbrt(-1) = -1\n     *  cbrt(N)  =  N\n     *  cbrt(-I) = -I\n     *  cbrt(I)  =  I\n     *\n     * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\n     *\n     */\n    P.cubeRoot = P.cbrt = function () {\n      var e, m, n, r, rep, s, sd, t, t3, t3plusx,\n        x = this,\n        Ctor = x.constructor;\n  \n      if (!x.isFinite() || x.isZero()) return new Ctor(x);\n      external = false;\n  \n      // Initial estimate.\n      s = x.s * mathpow(x.s * x, 1 / 3);\n  \n       // Math.cbrt underflow/overflow?\n       // Pass x to Math.pow as integer, then adjust the exponent of the result.\n      if (!s || Math.abs(s) == 1 / 0) {\n        n = digitsToString(x.d);\n        e = x.e;\n  \n        // Adjust n exponent so it is a multiple of 3 away from x exponent.\n        if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\n        s = mathpow(n, 1 / 3);\n  \n        // Rarely, e may be one less than the result exponent value.\n        e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\n  \n        if (s == 1 / 0) {\n          n = '5e' + e;\n        } else {\n          n = s.toExponential();\n          n = n.slice(0, n.indexOf('e') + 1) + e;\n        }\n  \n        r = new Ctor(n);\n        r.s = x.s;\n      } else {\n        r = new Ctor(s.toString());\n      }\n  \n      sd = (e = Ctor.precision) + 3;\n  \n      // Halley's method.\n      // TODO? Compare Newton's method.\n      for (;;) {\n        t = r;\n        t3 = t.times(t).times(t);\n        t3plusx = t3.plus(x);\n        r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\n  \n        // TODO? Replace with for-loop and checkRoundingDigits.\n        if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\n          n = n.slice(sd - 3, sd + 1);\n  \n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\n          // , i.e. approaching a rounding boundary, continue the iteration.\n          if (n == '9999' || !rep && n == '4999') {\n  \n            // On the first iteration only, check to see if rounding up gives the exact result as the\n            // nines may infinitely repeat.\n            if (!rep) {\n              finalise(t, e + 1, 0);\n  \n              if (t.times(t).times(t).eq(x)) {\n                r = t;\n                break;\n              }\n            }\n  \n            sd += 4;\n            rep = 1;\n          } else {\n  \n            // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\n            // If not, then there are further digits and m will be truthy.\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\n  \n              // Truncate to the first rounding digit.\n              finalise(r, e + 1, 1);\n              m = !r.times(r).times(r).eq(x);\n            }\n  \n            break;\n          }\n        }\n      }\n  \n      external = true;\n  \n      return finalise(r, e, Ctor.rounding, m);\n    };\n  \n  \n    /*\n     * Return the number of decimal places of the value of this Decimal.\n     *\n     */\n    P.decimalPlaces = P.dp = function () {\n      var w,\n        d = this.d,\n        n = NaN;\n  \n      if (d) {\n        w = d.length - 1;\n        n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\n  \n        // Subtract the number of trailing zeros of the last word.\n        w = d[w];\n        if (w) for (; w % 10 == 0; w /= 10) n--;\n        if (n < 0) n = 0;\n      }\n  \n      return n;\n    };\n  \n  \n    /*\n     *  n / 0 = I\n     *  n / N = N\n     *  n / I = 0\n     *  0 / n = 0\n     *  0 / 0 = N\n     *  0 / N = N\n     *  0 / I = 0\n     *  N / n = N\n     *  N / 0 = N\n     *  N / N = N\n     *  N / I = N\n     *  I / n = I\n     *  I / 0 = I\n     *  I / N = N\n     *  I / I = N\n     *\n     * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\n     * `precision` significant digits using rounding mode `rounding`.\n     *\n     */\n    P.dividedBy = P.div = function (y) {\n      return divide(this, new this.constructor(y));\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\n     * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\n     *\n     */\n    P.dividedToIntegerBy = P.divToInt = function (y) {\n      var x = this,\n        Ctor = x.constructor;\n      return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\n    };\n  \n  \n    /*\n     * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\n     *\n     */\n    P.equals = P.eq = function (y) {\n      return this.cmp(y) === 0;\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\n     * direction of negative Infinity.\n     *\n     */\n    P.floor = function () {\n      return finalise(new this.constructor(this), this.e + 1, 3);\n    };\n  \n  \n    /*\n     * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\n     * false.\n     *\n     */\n    P.greaterThan = P.gt = function (y) {\n      return this.cmp(y) > 0;\n    };\n  \n  \n    /*\n     * Return true if the value of this Decimal is greater than or equal to the value of `y`,\n     * otherwise return false.\n     *\n     */\n    P.greaterThanOrEqualTo = P.gte = function (y) {\n      var k = this.cmp(y);\n      return k == 1 || k === 0;\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\n     * Decimal.\n     *\n     * Domain: [-Infinity, Infinity]\n     * Range: [1, Infinity]\n     *\n     * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\n     *\n     * cosh(0)         = 1\n     * cosh(-0)        = 1\n     * cosh(Infinity)  = Infinity\n     * cosh(-Infinity) = Infinity\n     * cosh(NaN)       = NaN\n     *\n     *  x        time taken (ms)   result\n     * 1000      9                 9.8503555700852349694e+433\n     * 10000     25                4.4034091128314607936e+4342\n     * 100000    171               1.4033316802130615897e+43429\n     * 1000000   3817              1.5166076984010437725e+434294\n     * 10000000  abandoned after 2 minute wait\n     *\n     * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\n     *\n     */\n    P.hyperbolicCosine = P.cosh = function () {\n      var k, n, pr, rm, len,\n        x = this,\n        Ctor = x.constructor,\n        one = new Ctor(1);\n  \n      if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\n      if (x.isZero()) return one;\n  \n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\n      Ctor.rounding = 1;\n      len = x.d.length;\n  \n      // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\n      // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\n  \n      // Estimate the optimum number of times to use the argument reduction.\n      // TODO? Estimation reused from cosine() and may not be optimal here.\n      if (len < 32) {\n        k = Math.ceil(len / 3);\n        n = (1 / tinyPow(4, k)).toString();\n      } else {\n        k = 16;\n        n = '2.3283064365386962890625e-10';\n      }\n  \n      x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\n  \n      // Reverse argument reduction\n      var cosh2_x,\n        i = k,\n        d8 = new Ctor(8);\n      for (; i--;) {\n        cosh2_x = x.times(x);\n        x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\n      }\n  \n      return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\n     * Decimal.\n     *\n     * Domain: [-Infinity, Infinity]\n     * Range: [-Infinity, Infinity]\n     *\n     * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\n     *\n     * sinh(0)         = 0\n     * sinh(-0)        = -0\n     * sinh(Infinity)  = Infinity\n     * sinh(-Infinity) = -Infinity\n     * sinh(NaN)       = NaN\n     *\n     * x        time taken (ms)\n     * 10       2 ms\n     * 100      5 ms\n     * 1000     14 ms\n     * 10000    82 ms\n     * 100000   886 ms            1.4033316802130615897e+43429\n     * 200000   2613 ms\n     * 300000   5407 ms\n     * 400000   8824 ms\n     * 500000   13026 ms          8.7080643612718084129e+217146\n     * 1000000  48543 ms\n     *\n     * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\n     *\n     */\n    P.hyperbolicSine = P.sinh = function () {\n      var k, pr, rm, len,\n        x = this,\n        Ctor = x.constructor;\n  \n      if (!x.isFinite() || x.isZero()) return new Ctor(x);\n  \n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\n      Ctor.rounding = 1;\n      len = x.d.length;\n  \n      if (len < 3) {\n        x = taylorSeries(Ctor, 2, x, x, true);\n      } else {\n  \n        // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\n        // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\n        // 3 multiplications and 1 addition\n  \n        // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\n        // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\n        // 4 multiplications and 2 additions\n  \n        // Estimate the optimum number of times to use the argument reduction.\n        k = 1.4 * Math.sqrt(len);\n        k = k > 16 ? 16 : k | 0;\n  \n        x = x.times(1 / tinyPow(5, k));\n        x = taylorSeries(Ctor, 2, x, x, true);\n  \n        // Reverse argument reduction\n        var sinh2_x,\n          d5 = new Ctor(5),\n          d16 = new Ctor(16),\n          d20 = new Ctor(20);\n        for (; k--;) {\n          sinh2_x = x.times(x);\n          x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\n        }\n      }\n  \n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n  \n      return finalise(x, pr, rm, true);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\n     * Decimal.\n     *\n     * Domain: [-Infinity, Infinity]\n     * Range: [-1, 1]\n     *\n     * tanh(x) = sinh(x) / cosh(x)\n     *\n     * tanh(0)         = 0\n     * tanh(-0)        = -0\n     * tanh(Infinity)  = 1\n     * tanh(-Infinity) = -1\n     * tanh(NaN)       = NaN\n     *\n     */\n    P.hyperbolicTangent = P.tanh = function () {\n      var pr, rm,\n        x = this,\n        Ctor = x.constructor;\n  \n      if (!x.isFinite()) return new Ctor(x.s);\n      if (x.isZero()) return new Ctor(x);\n  \n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + 7;\n      Ctor.rounding = 1;\n  \n      return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\n     * this Decimal.\n     *\n     * Domain: [-1, 1]\n     * Range: [0, pi]\n     *\n     * acos(x) = pi/2 - asin(x)\n     *\n     * acos(0)       = pi/2\n     * acos(-0)      = pi/2\n     * acos(1)       = 0\n     * acos(-1)      = pi\n     * acos(1/2)     = pi/3\n     * acos(-1/2)    = 2*pi/3\n     * acos(|x| > 1) = NaN\n     * acos(NaN)     = NaN\n     *\n     */\n    P.inverseCosine = P.acos = function () {\n      var halfPi,\n        x = this,\n        Ctor = x.constructor,\n        k = x.abs().cmp(1),\n        pr = Ctor.precision,\n        rm = Ctor.rounding;\n  \n      if (k !== -1) {\n        return k === 0\n          // |x| is 1\n          ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\n          // |x| > 1 or x is NaN\n          : new Ctor(NaN);\n      }\n  \n      if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\n  \n      // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\n  \n      Ctor.precision = pr + 6;\n      Ctor.rounding = 1;\n  \n      x = x.asin();\n      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\n  \n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n  \n      return halfPi.minus(x);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\n     * value of this Decimal.\n     *\n     * Domain: [1, Infinity]\n     * Range: [0, Infinity]\n     *\n     * acosh(x) = ln(x + sqrt(x^2 - 1))\n     *\n     * acosh(x < 1)     = NaN\n     * acosh(NaN)       = NaN\n     * acosh(Infinity)  = Infinity\n     * acosh(-Infinity) = NaN\n     * acosh(0)         = NaN\n     * acosh(-0)        = NaN\n     * acosh(1)         = 0\n     * acosh(-1)        = NaN\n     *\n     */\n    P.inverseHyperbolicCosine = P.acosh = function () {\n      var pr, rm,\n        x = this,\n        Ctor = x.constructor;\n  \n      if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\n      if (!x.isFinite()) return new Ctor(x);\n  \n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\n      Ctor.rounding = 1;\n      external = false;\n  \n      x = x.times(x).minus(1).sqrt().plus(x);\n  \n      external = true;\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n  \n      return x.ln();\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\n     * of this Decimal.\n     *\n     * Domain: [-Infinity, Infinity]\n     * Range: [-Infinity, Infinity]\n     *\n     * asinh(x) = ln(x + sqrt(x^2 + 1))\n     *\n     * asinh(NaN)       = NaN\n     * asinh(Infinity)  = Infinity\n     * asinh(-Infinity) = -Infinity\n     * asinh(0)         = 0\n     * asinh(-0)        = -0\n     *\n     */\n    P.inverseHyperbolicSine = P.asinh = function () {\n      var pr, rm,\n        x = this,\n        Ctor = x.constructor;\n  \n      if (!x.isFinite() || x.isZero()) return new Ctor(x);\n  \n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\n      Ctor.rounding = 1;\n      external = false;\n  \n      x = x.times(x).plus(1).sqrt().plus(x);\n  \n      external = true;\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n  \n      return x.ln();\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\n     * value of this Decimal.\n     *\n     * Domain: [-1, 1]\n     * Range: [-Infinity, Infinity]\n     *\n     * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\n     *\n     * atanh(|x| > 1)   = NaN\n     * atanh(NaN)       = NaN\n     * atanh(Infinity)  = NaN\n     * atanh(-Infinity) = NaN\n     * atanh(0)         = 0\n     * atanh(-0)        = -0\n     * atanh(1)         = Infinity\n     * atanh(-1)        = -Infinity\n     *\n     */\n    P.inverseHyperbolicTangent = P.atanh = function () {\n      var pr, rm, wpr, xsd,\n        x = this,\n        Ctor = x.constructor;\n  \n      if (!x.isFinite()) return new Ctor(NaN);\n      if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\n  \n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      xsd = x.sd();\n  \n      if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\n  \n      Ctor.precision = wpr = xsd - x.e;\n  \n      x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\n  \n      Ctor.precision = pr + 4;\n      Ctor.rounding = 1;\n  \n      x = x.ln();\n  \n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n  \n      return x.times(0.5);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\n     * Decimal.\n     *\n     * Domain: [-Infinity, Infinity]\n     * Range: [-pi/2, pi/2]\n     *\n     * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\n     *\n     * asin(0)       = 0\n     * asin(-0)      = -0\n     * asin(1/2)     = pi/6\n     * asin(-1/2)    = -pi/6\n     * asin(1)       = pi/2\n     * asin(-1)      = -pi/2\n     * asin(|x| > 1) = NaN\n     * asin(NaN)     = NaN\n     *\n     * TODO? Compare performance of Taylor series.\n     *\n     */\n    P.inverseSine = P.asin = function () {\n      var halfPi, k,\n        pr, rm,\n        x = this,\n        Ctor = x.constructor;\n  \n      if (x.isZero()) return new Ctor(x);\n  \n      k = x.abs().cmp(1);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n  \n      if (k !== -1) {\n  \n        // |x| is 1\n        if (k === 0) {\n          halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\n          halfPi.s = x.s;\n          return halfPi;\n        }\n  \n        // |x| > 1 or x is NaN\n        return new Ctor(NaN);\n      }\n  \n      // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\n  \n      Ctor.precision = pr + 6;\n      Ctor.rounding = 1;\n  \n      x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\n  \n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n  \n      return x.times(2);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\n     * of this Decimal.\n     *\n     * Domain: [-Infinity, Infinity]\n     * Range: [-pi/2, pi/2]\n     *\n     * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\n     *\n     * atan(0)         = 0\n     * atan(-0)        = -0\n     * atan(1)         = pi/4\n     * atan(-1)        = -pi/4\n     * atan(Infinity)  = pi/2\n     * atan(-Infinity) = -pi/2\n     * atan(NaN)       = NaN\n     *\n     */\n    P.inverseTangent = P.atan = function () {\n      var i, j, k, n, px, t, r, wpr, x2,\n        x = this,\n        Ctor = x.constructor,\n        pr = Ctor.precision,\n        rm = Ctor.rounding;\n  \n      if (!x.isFinite()) {\n        if (!x.s) return new Ctor(NaN);\n        if (pr + 4 <= PI_PRECISION) {\n          r = getPi(Ctor, pr + 4, rm).times(0.5);\n          r.s = x.s;\n          return r;\n        }\n      } else if (x.isZero()) {\n        return new Ctor(x);\n      } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\n        r = getPi(Ctor, pr + 4, rm).times(0.25);\n        r.s = x.s;\n        return r;\n      }\n  \n      Ctor.precision = wpr = pr + 10;\n      Ctor.rounding = 1;\n  \n      // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\n  \n      // Argument reduction\n      // Ensure |x| < 0.42\n      // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\n  \n      k = Math.min(28, wpr / LOG_BASE + 2 | 0);\n  \n      for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\n  \n      external = false;\n  \n      j = Math.ceil(wpr / LOG_BASE);\n      n = 1;\n      x2 = x.times(x);\n      r = new Ctor(x);\n      px = x;\n  \n      // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\n      for (; i !== -1;) {\n        px = px.times(x2);\n        t = r.minus(px.div(n += 2));\n  \n        px = px.times(x2);\n        r = t.plus(px.div(n += 2));\n  \n        if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\n      }\n  \n      if (k) r = r.times(2 << (k - 1));\n  \n      external = true;\n  \n      return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\n    };\n  \n  \n    /*\n     * Return true if the value of this Decimal is a finite number, otherwise return false.\n     *\n     */\n    P.isFinite = function () {\n      return !!this.d;\n    };\n  \n  \n    /*\n     * Return true if the value of this Decimal is an integer, otherwise return false.\n     *\n     */\n    P.isInteger = P.isInt = function () {\n      return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\n    };\n  \n  \n    /*\n     * Return true if the value of this Decimal is NaN, otherwise return false.\n     *\n     */\n    P.isNaN = function () {\n      return !this.s;\n    };\n  \n  \n    /*\n     * Return true if the value of this Decimal is negative, otherwise return false.\n     *\n     */\n    P.isNegative = P.isNeg = function () {\n      return this.s < 0;\n    };\n  \n  \n    /*\n     * Return true if the value of this Decimal is positive, otherwise return false.\n     *\n     */\n    P.isPositive = P.isPos = function () {\n      return this.s > 0;\n    };\n  \n  \n    /*\n     * Return true if the value of this Decimal is 0 or -0, otherwise return false.\n     *\n     */\n    P.isZero = function () {\n      return !!this.d && this.d[0] === 0;\n    };\n  \n  \n    /*\n     * Return true if the value of this Decimal is less than `y`, otherwise return false.\n     *\n     */\n    P.lessThan = P.lt = function (y) {\n      return this.cmp(y) < 0;\n    };\n  \n  \n    /*\n     * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\n     *\n     */\n    P.lessThanOrEqualTo = P.lte = function (y) {\n      return this.cmp(y) < 1;\n    };\n  \n  \n    /*\n     * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\n     * significant digits using rounding mode `rounding`.\n     *\n     * If no base is specified, return log[10](arg).\n     *\n     * log[base](arg) = ln(arg) / ln(base)\n     *\n     * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\n     * otherwise:\n     *\n     * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\n     * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\n     * between the result and the correctly rounded result will be one ulp (unit in the last place).\n     *\n     * log[-b](a)       = NaN\n     * log[0](a)        = NaN\n     * log[1](a)        = NaN\n     * log[NaN](a)      = NaN\n     * log[Infinity](a) = NaN\n     * log[b](0)        = -Infinity\n     * log[b](-0)       = -Infinity\n     * log[b](-a)       = NaN\n     * log[b](1)        = 0\n     * log[b](Infinity) = Infinity\n     * log[b](NaN)      = NaN\n     *\n     * [base] {number|string|Decimal} The base of the logarithm.\n     *\n     */\n    P.logarithm = P.log = function (base) {\n      var isBase10, d, denominator, k, inf, num, sd, r,\n        arg = this,\n        Ctor = arg.constructor,\n        pr = Ctor.precision,\n        rm = Ctor.rounding,\n        guard = 5;\n  \n      // Default base is 10.\n      if (base == null) {\n        base = new Ctor(10);\n        isBase10 = true;\n      } else {\n        base = new Ctor(base);\n        d = base.d;\n  \n        // Return NaN if base is negative, or non-finite, or is 0 or 1.\n        if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\n  \n        isBase10 = base.eq(10);\n      }\n  \n      d = arg.d;\n  \n      // Is arg negative, non-finite, 0 or 1?\n      if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\n        return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\n      }\n  \n      // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\n      // integer power of 10.\n      if (isBase10) {\n        if (d.length > 1) {\n          inf = true;\n        } else {\n          for (k = d[0]; k % 10 === 0;) k /= 10;\n          inf = k !== 1;\n        }\n      }\n  \n      external = false;\n      sd = pr + guard;\n      num = naturalLogarithm(arg, sd);\n      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\n  \n      // The result will have 5 rounding digits.\n      r = divide(num, denominator, sd, 1);\n  \n      // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\n      // calculate 10 further digits.\n      //\n      // If the result is known to have an infinite decimal expansion, repeat this until it is clear\n      // that the result is above or below the boundary. Otherwise, if after calculating the 10\n      // further digits, the last 14 are nines, round up and assume the result is exact.\n      // Also assume the result is exact if the last 14 are zero.\n      //\n      // Example of a result that will be incorrectly rounded:\n      // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\n      // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\n      // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\n      // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\n      // place is still 2.6.\n      if (checkRoundingDigits(r.d, k = pr, rm)) {\n  \n        do {\n          sd += 10;\n          num = naturalLogarithm(arg, sd);\n          denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\n          r = divide(num, denominator, sd, 1);\n  \n          if (!inf) {\n  \n            // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\n            if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\n              r = finalise(r, pr + 1, 0);\n            }\n  \n            break;\n          }\n        } while (checkRoundingDigits(r.d, k += 10, rm));\n      }\n  \n      external = true;\n  \n      return finalise(r, pr, rm);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\n     *\n     * arguments {number|string|Decimal}\n     *\n    P.max = function () {\n      Array.prototype.push.call(arguments, this);\n      return maxOrMin(this.constructor, arguments, 'lt');\n    };\n     */\n  \n  \n    /*\n     * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\n     *\n     * arguments {number|string|Decimal}\n     *\n    P.min = function () {\n      Array.prototype.push.call(arguments, this);\n      return maxOrMin(this.constructor, arguments, 'gt');\n    };\n     */\n  \n  \n    /*\n     *  n - 0 = n\n     *  n - N = N\n     *  n - I = -I\n     *  0 - n = -n\n     *  0 - 0 = 0\n     *  0 - N = N\n     *  0 - I = -I\n     *  N - n = N\n     *  N - 0 = N\n     *  N - N = N\n     *  N - I = N\n     *  I - n = I\n     *  I - 0 = I\n     *  I - N = N\n     *  I - I = N\n     *\n     * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\n     * significant digits using rounding mode `rounding`.\n     *\n     */\n    P.minus = P.sub = function (y) {\n      var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\n        x = this,\n        Ctor = x.constructor;\n  \n      y = new Ctor(y);\n  \n      // If either is not finite...\n      if (!x.d || !y.d) {\n  \n        // Return NaN if either is NaN.\n        if (!x.s || !y.s) y = new Ctor(NaN);\n  \n        // Return y negated if x is finite and y is ±Infinity.\n        else if (x.d) y.s = -y.s;\n  \n        // Return x if y is finite and x is ±Infinity.\n        // Return x if both are ±Infinity with different signs.\n        // Return NaN if both are ±Infinity with the same sign.\n        else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\n  \n        return y;\n      }\n  \n      // If signs differ...\n      if (x.s != y.s) {\n        y.s = -y.s;\n        return x.plus(y);\n      }\n  \n      xd = x.d;\n      yd = y.d;\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n  \n      // If either is zero...\n      if (!xd[0] || !yd[0]) {\n  \n        // Return y negated if x is zero and y is non-zero.\n        if (yd[0]) y.s = -y.s;\n  \n        // Return x if y is zero and x is non-zero.\n        else if (xd[0]) y = new Ctor(x);\n  \n        // Return zero if both are zero.\n        // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\n        else return new Ctor(rm === 3 ? -0 : 0);\n  \n        return external ? finalise(y, pr, rm) : y;\n      }\n  \n      // x and y are finite, non-zero numbers with the same sign.\n  \n      // Calculate base 1e7 exponents.\n      e = mathfloor(y.e / LOG_BASE);\n      xe = mathfloor(x.e / LOG_BASE);\n  \n      xd = xd.slice();\n      k = xe - e;\n  \n      // If base 1e7 exponents differ...\n      if (k) {\n        xLTy = k < 0;\n  \n        if (xLTy) {\n          d = xd;\n          k = -k;\n          len = yd.length;\n        } else {\n          d = yd;\n          e = xe;\n          len = xd.length;\n        }\n  \n        // Numbers with massively different exponents would result in a very high number of\n        // zeros needing to be prepended, but this can be avoided while still ensuring correct\n        // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\n        i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\n  \n        if (k > i) {\n          k = i;\n          d.length = 1;\n        }\n  \n        // Prepend zeros to equalise exponents.\n        d.reverse();\n        for (i = k; i--;) d.push(0);\n        d.reverse();\n  \n      // Base 1e7 exponents equal.\n      } else {\n  \n        // Check digits to determine which is the bigger number.\n  \n        i = xd.length;\n        len = yd.length;\n        xLTy = i < len;\n        if (xLTy) len = i;\n  \n        for (i = 0; i < len; i++) {\n          if (xd[i] != yd[i]) {\n            xLTy = xd[i] < yd[i];\n            break;\n          }\n        }\n  \n        k = 0;\n      }\n  \n      if (xLTy) {\n        d = xd;\n        xd = yd;\n        yd = d;\n        y.s = -y.s;\n      }\n  \n      len = xd.length;\n  \n      // Append zeros to `xd` if shorter.\n      // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\n      for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\n  \n      // Subtract yd from xd.\n      for (i = yd.length; i > k;) {\n  \n        if (xd[--i] < yd[i]) {\n          for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\n          --xd[j];\n          xd[i] += BASE;\n        }\n  \n        xd[i] -= yd[i];\n      }\n  \n      // Remove trailing zeros.\n      for (; xd[--len] === 0;) xd.pop();\n  \n      // Remove leading zeros and adjust exponent accordingly.\n      for (; xd[0] === 0; xd.shift()) --e;\n  \n      // Zero?\n      if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\n  \n      y.d = xd;\n      y.e = getBase10Exponent(xd, e);\n  \n      return external ? finalise(y, pr, rm) : y;\n    };\n  \n  \n    /*\n     *   n % 0 =  N\n     *   n % N =  N\n     *   n % I =  n\n     *   0 % n =  0\n     *  -0 % n = -0\n     *   0 % 0 =  N\n     *   0 % N =  N\n     *   0 % I =  0\n     *   N % n =  N\n     *   N % 0 =  N\n     *   N % N =  N\n     *   N % I =  N\n     *   I % n =  N\n     *   I % 0 =  N\n     *   I % N =  N\n     *   I % I =  N\n     *\n     * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\n     * `precision` significant digits using rounding mode `rounding`.\n     *\n     * The result depends on the modulo mode.\n     *\n     */\n    P.modulo = P.mod = function (y) {\n      var q,\n        x = this,\n        Ctor = x.constructor;\n  \n      y = new Ctor(y);\n  \n      // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\n      if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\n  \n      // Return x if y is ±Infinity or x is ±0.\n      if (!y.d || x.d && !x.d[0]) {\n        return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\n      }\n  \n      // Prevent rounding of intermediate calculations.\n      external = false;\n  \n      if (Ctor.modulo == 9) {\n  \n        // Euclidian division: q = sign(y) * floor(x / abs(y))\n        // result = x - q * y    where  0 <= result < abs(y)\n        q = divide(x, y.abs(), 0, 3, 1);\n        q.s *= y.s;\n      } else {\n        q = divide(x, y, 0, Ctor.modulo, 1);\n      }\n  \n      q = q.times(y);\n  \n      external = true;\n  \n      return x.minus(q);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\n     * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\n     * significant digits using rounding mode `rounding`.\n     *\n     */\n    P.naturalExponential = P.exp = function () {\n      return naturalExponential(this);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\n     * rounded to `precision` significant digits using rounding mode `rounding`.\n     *\n     */\n    P.naturalLogarithm = P.ln = function () {\n      return naturalLogarithm(this);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\n     * -1.\n     *\n     */\n    P.negated = P.neg = function () {\n      var x = new this.constructor(this);\n      x.s = -x.s;\n      return finalise(x);\n    };\n  \n  \n    /*\n     *  n + 0 = n\n     *  n + N = N\n     *  n + I = I\n     *  0 + n = n\n     *  0 + 0 = 0\n     *  0 + N = N\n     *  0 + I = I\n     *  N + n = N\n     *  N + 0 = N\n     *  N + N = N\n     *  N + I = N\n     *  I + n = I\n     *  I + 0 = I\n     *  I + N = N\n     *  I + I = I\n     *\n     * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\n     * significant digits using rounding mode `rounding`.\n     *\n     */\n    P.plus = P.add = function (y) {\n      var carry, d, e, i, k, len, pr, rm, xd, yd,\n        x = this,\n        Ctor = x.constructor;\n  \n      y = new Ctor(y);\n  \n      // If either is not finite...\n      if (!x.d || !y.d) {\n  \n        // Return NaN if either is NaN.\n        if (!x.s || !y.s) y = new Ctor(NaN);\n  \n        // Return x if y is finite and x is ±Infinity.\n        // Return x if both are ±Infinity with the same sign.\n        // Return NaN if both are ±Infinity with different signs.\n        // Return y if x is finite and y is ±Infinity.\n        else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\n  \n        return y;\n      }\n  \n       // If signs differ...\n      if (x.s != y.s) {\n        y.s = -y.s;\n        return x.minus(y);\n      }\n  \n      xd = x.d;\n      yd = y.d;\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n  \n      // If either is zero...\n      if (!xd[0] || !yd[0]) {\n  \n        // Return x if y is zero.\n        // Return y if y is non-zero.\n        if (!yd[0]) y = new Ctor(x);\n  \n        return external ? finalise(y, pr, rm) : y;\n      }\n  \n      // x and y are finite, non-zero numbers with the same sign.\n  \n      // Calculate base 1e7 exponents.\n      k = mathfloor(x.e / LOG_BASE);\n      e = mathfloor(y.e / LOG_BASE);\n  \n      xd = xd.slice();\n      i = k - e;\n  \n      // If base 1e7 exponents differ...\n      if (i) {\n  \n        if (i < 0) {\n          d = xd;\n          i = -i;\n          len = yd.length;\n        } else {\n          d = yd;\n          e = k;\n          len = xd.length;\n        }\n  \n        // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\n        k = Math.ceil(pr / LOG_BASE);\n        len = k > len ? k + 1 : len + 1;\n  \n        if (i > len) {\n          i = len;\n          d.length = 1;\n        }\n  \n        // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\n        d.reverse();\n        for (; i--;) d.push(0);\n        d.reverse();\n      }\n  \n      len = xd.length;\n      i = yd.length;\n  \n      // If yd is longer than xd, swap xd and yd so xd points to the longer array.\n      if (len - i < 0) {\n        i = len;\n        d = yd;\n        yd = xd;\n        xd = d;\n      }\n  \n      // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\n      for (carry = 0; i;) {\n        carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\n        xd[i] %= BASE;\n      }\n  \n      if (carry) {\n        xd.unshift(carry);\n        ++e;\n      }\n  \n      // Remove trailing zeros.\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n      for (len = xd.length; xd[--len] == 0;) xd.pop();\n  \n      y.d = xd;\n      y.e = getBase10Exponent(xd, e);\n  \n      return external ? finalise(y, pr, rm) : y;\n    };\n  \n  \n    /*\n     * Return the number of significant digits of the value of this Decimal.\n     *\n     * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\n     *\n     */\n    P.precision = P.sd = function (z) {\n      var k,\n        x = this;\n  \n      if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\n  \n      if (x.d) {\n        k = getPrecision(x.d);\n        if (z && x.e + 1 > k) k = x.e + 1;\n      } else {\n        k = NaN;\n      }\n  \n      return k;\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\n     * rounding mode `rounding`.\n     *\n     */\n    P.round = function () {\n      var x = this,\n        Ctor = x.constructor;\n  \n      return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\n     *\n     * Domain: [-Infinity, Infinity]\n     * Range: [-1, 1]\n     *\n     * sin(x) = x - x^3/3! + x^5/5! - ...\n     *\n     * sin(0)         = 0\n     * sin(-0)        = -0\n     * sin(Infinity)  = NaN\n     * sin(-Infinity) = NaN\n     * sin(NaN)       = NaN\n     *\n     */\n    P.sine = P.sin = function () {\n      var pr, rm,\n        x = this,\n        Ctor = x.constructor;\n  \n      if (!x.isFinite()) return new Ctor(NaN);\n      if (x.isZero()) return new Ctor(x);\n  \n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\n      Ctor.rounding = 1;\n  \n      x = sine(Ctor, toLessThanHalfPi(Ctor, x));\n  \n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n  \n      return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\n     * significant digits using rounding mode `rounding`.\n     *\n     *  sqrt(-n) =  N\n     *  sqrt(N)  =  N\n     *  sqrt(-I) =  N\n     *  sqrt(I)  =  I\n     *  sqrt(0)  =  0\n     *  sqrt(-0) = -0\n     *\n     */\n    P.squareRoot = P.sqrt = function () {\n      var m, n, sd, r, rep, t,\n        x = this,\n        d = x.d,\n        e = x.e,\n        s = x.s,\n        Ctor = x.constructor;\n  \n      // Negative/NaN/Infinity/zero?\n      if (s !== 1 || !d || !d[0]) {\n        return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\n      }\n  \n      external = false;\n  \n      // Initial estimate.\n      s = Math.sqrt(+x);\n  \n      // Math.sqrt underflow/overflow?\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\n      if (s == 0 || s == 1 / 0) {\n        n = digitsToString(d);\n  \n        if ((n.length + e) % 2 == 0) n += '0';\n        s = Math.sqrt(n);\n        e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\n  \n        if (s == 1 / 0) {\n          n = '5e' + e;\n        } else {\n          n = s.toExponential();\n          n = n.slice(0, n.indexOf('e') + 1) + e;\n        }\n  \n        r = new Ctor(n);\n      } else {\n        r = new Ctor(s.toString());\n      }\n  \n      sd = (e = Ctor.precision) + 3;\n  \n      // Newton-Raphson iteration.\n      for (;;) {\n        t = r;\n        r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\n  \n        // TODO? Replace with for-loop and checkRoundingDigits.\n        if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\n          n = n.slice(sd - 3, sd + 1);\n  \n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\n          // 4999, i.e. approaching a rounding boundary, continue the iteration.\n          if (n == '9999' || !rep && n == '4999') {\n  \n            // On the first iteration only, check to see if rounding up gives the exact result as the\n            // nines may infinitely repeat.\n            if (!rep) {\n              finalise(t, e + 1, 0);\n  \n              if (t.times(t).eq(x)) {\n                r = t;\n                break;\n              }\n            }\n  \n            sd += 4;\n            rep = 1;\n          } else {\n  \n            // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\n            // If not, then there are further digits and m will be truthy.\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\n  \n              // Truncate to the first rounding digit.\n              finalise(r, e + 1, 1);\n              m = !r.times(r).eq(x);\n            }\n  \n            break;\n          }\n        }\n      }\n  \n      external = true;\n  \n      return finalise(r, e, Ctor.rounding, m);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\n     *\n     * Domain: [-Infinity, Infinity]\n     * Range: [-Infinity, Infinity]\n     *\n     * tan(0)         = 0\n     * tan(-0)        = -0\n     * tan(Infinity)  = NaN\n     * tan(-Infinity) = NaN\n     * tan(NaN)       = NaN\n     *\n     */\n    P.tangent = P.tan = function () {\n      var pr, rm,\n        x = this,\n        Ctor = x.constructor;\n  \n      if (!x.isFinite()) return new Ctor(NaN);\n      if (x.isZero()) return new Ctor(x);\n  \n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + 10;\n      Ctor.rounding = 1;\n  \n      x = x.sin();\n      x.s = 1;\n      x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\n  \n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n  \n      return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\n    };\n  \n  \n    /*\n     *  n * 0 = 0\n     *  n * N = N\n     *  n * I = I\n     *  0 * n = 0\n     *  0 * 0 = 0\n     *  0 * N = N\n     *  0 * I = N\n     *  N * n = N\n     *  N * 0 = N\n     *  N * N = N\n     *  N * I = N\n     *  I * n = I\n     *  I * 0 = N\n     *  I * N = N\n     *  I * I = I\n     *\n     * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\n     * digits using rounding mode `rounding`.\n     *\n     */\n    P.times = P.mul = function (y) {\n      var carry, e, i, k, r, rL, t, xdL, ydL,\n        x = this,\n        Ctor = x.constructor,\n        xd = x.d,\n        yd = (y = new Ctor(y)).d;\n  \n      y.s *= x.s;\n  \n       // If either is NaN, ±Infinity or ±0...\n      if (!xd || !xd[0] || !yd || !yd[0]) {\n  \n        return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\n  \n          // Return NaN if either is NaN.\n          // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\n          ? NaN\n  \n          // Return ±Infinity if either is ±Infinity.\n          // Return ±0 if either is ±0.\n          : !xd || !yd ? y.s / 0 : y.s * 0);\n      }\n  \n      e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\n      xdL = xd.length;\n      ydL = yd.length;\n  \n      // Ensure xd points to the longer array.\n      if (xdL < ydL) {\n        r = xd;\n        xd = yd;\n        yd = r;\n        rL = xdL;\n        xdL = ydL;\n        ydL = rL;\n      }\n  \n      // Initialise the result array with zeros.\n      r = [];\n      rL = xdL + ydL;\n      for (i = rL; i--;) r.push(0);\n  \n      // Multiply!\n      for (i = ydL; --i >= 0;) {\n        carry = 0;\n        for (k = xdL + i; k > i;) {\n          t = r[k] + yd[i] * xd[k - i - 1] + carry;\n          r[k--] = t % BASE | 0;\n          carry = t / BASE | 0;\n        }\n  \n        r[k] = (r[k] + carry) % BASE | 0;\n      }\n  \n      // Remove trailing zeros.\n      for (; !r[--rL];) r.pop();\n  \n      if (carry) ++e;\n      else r.shift();\n  \n      y.d = r;\n      y.e = getBase10Exponent(r, e);\n  \n      return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\n    };\n  \n  \n    /*\n     * Return a string representing the value of this Decimal in base 2, round to `sd` significant\n     * digits using rounding mode `rm`.\n     *\n     * If the optional `sd` argument is present then return binary exponential notation.\n     *\n     * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n     *\n     */\n    P.toBinary = function (sd, rm) {\n      return toStringBinary(this, 2, sd, rm);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\n     * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\n     *\n     * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\n     *\n     * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n     *\n     */\n    P.toDecimalPlaces = P.toDP = function (dp, rm) {\n      var x = this,\n        Ctor = x.constructor;\n  \n      x = new Ctor(x);\n      if (dp === void 0) return x;\n  \n      checkInt32(dp, 0, MAX_DIGITS);\n  \n      if (rm === void 0) rm = Ctor.rounding;\n      else checkInt32(rm, 0, 8);\n  \n      return finalise(x, dp + x.e + 1, rm);\n    };\n  \n  \n    /*\n     * Return a string representing the value of this Decimal in exponential notation rounded to\n     * `dp` fixed decimal places using rounding mode `rounding`.\n     *\n     * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n     *\n     */\n    P.toExponential = function (dp, rm) {\n      var str,\n        x = this,\n        Ctor = x.constructor;\n  \n      if (dp === void 0) {\n        str = finiteToString(x, true);\n      } else {\n        checkInt32(dp, 0, MAX_DIGITS);\n  \n        if (rm === void 0) rm = Ctor.rounding;\n        else checkInt32(rm, 0, 8);\n  \n        x = finalise(new Ctor(x), dp + 1, rm);\n        str = finiteToString(x, true, dp + 1);\n      }\n  \n      return x.isNeg() && !x.isZero() ? '-' + str : str;\n    };\n  \n  \n    /*\n     * Return a string representing the value of this Decimal in normal (fixed-point) notation to\n     * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\n     * omitted.\n     *\n     * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\n     *\n     * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n     *\n     * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n     * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n     * (-0).toFixed(3) is '0.000'.\n     * (-0.5).toFixed(0) is '-0'.\n     *\n     */\n    P.toFixed = function (dp, rm) {\n      var str, y,\n        x = this,\n        Ctor = x.constructor;\n  \n      if (dp === void 0) {\n        str = finiteToString(x);\n      } else {\n        checkInt32(dp, 0, MAX_DIGITS);\n  \n        if (rm === void 0) rm = Ctor.rounding;\n        else checkInt32(rm, 0, 8);\n  \n        y = finalise(new Ctor(x), dp + x.e + 1, rm);\n        str = finiteToString(y, false, dp + y.e + 1);\n      }\n  \n      // To determine whether to add the minus sign look at the value before it was rounded,\n      // i.e. look at `x` rather than `y`.\n      return x.isNeg() && !x.isZero() ? '-' + str : str;\n    };\n  \n  \n    /*\n     * Return an array representing the value of this Decimal as a simple fraction with an integer\n     * numerator and an integer denominator.\n     *\n     * The denominator will be a positive non-zero value less than or equal to the specified maximum\n     * denominator. If a maximum denominator is not specified, the denominator will be the lowest\n     * value necessary to represent the number exactly.\n     *\n     * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\n     *\n     */\n    P.toFraction = function (maxD) {\n      var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\n        x = this,\n        xd = x.d,\n        Ctor = x.constructor;\n  \n      if (!xd) return new Ctor(x);\n  \n      n1 = d0 = new Ctor(1);\n      d1 = n0 = new Ctor(0);\n  \n      d = new Ctor(d1);\n      e = d.e = getPrecision(xd) - x.e - 1;\n      k = e % LOG_BASE;\n      d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\n  \n      if (maxD == null) {\n  \n        // d is 10**e, the minimum max-denominator needed.\n        maxD = e > 0 ? d : n1;\n      } else {\n        n = new Ctor(maxD);\n        if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\n        maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\n      }\n  \n      external = false;\n      n = new Ctor(digitsToString(xd));\n      pr = Ctor.precision;\n      Ctor.precision = e = xd.length * LOG_BASE * 2;\n  \n      for (;;)  {\n        q = divide(n, d, 0, 1, 1);\n        d2 = d0.plus(q.times(d1));\n        if (d2.cmp(maxD) == 1) break;\n        d0 = d1;\n        d1 = d2;\n        d2 = n1;\n        n1 = n0.plus(q.times(d2));\n        n0 = d2;\n        d2 = d;\n        d = n.minus(q.times(d2));\n        n = d2;\n      }\n  \n      d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\n      n0 = n0.plus(d2.times(n1));\n      d0 = d0.plus(d2.times(d1));\n      n0.s = n1.s = x.s;\n  \n      // Determine which fraction is closer to x, n0/d0 or n1/d1?\n      r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\n          ? [n1, d1] : [n0, d0];\n  \n      Ctor.precision = pr;\n      external = true;\n  \n      return r;\n    };\n  \n  \n    /*\n     * Return a string representing the value of this Decimal in base 16, round to `sd` significant\n     * digits using rounding mode `rm`.\n     *\n     * If the optional `sd` argument is present then return binary exponential notation.\n     *\n     * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n     *\n     */\n    P.toHexadecimal = P.toHex = function (sd, rm) {\n      return toStringBinary(this, 16, sd, rm);\n    };\n  \n  \n    /*\n     * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\n     * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\n     *\n     * The return value will always have the same sign as this Decimal, unless either this Decimal\n     * or `y` is NaN, in which case the return value will be also be NaN.\n     *\n     * The return value is not affected by the value of `precision`.\n     *\n     * y {number|string|Decimal} The magnitude to round to a multiple of.\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n     *\n     * 'toNearest() rounding mode not an integer: {rm}'\n     * 'toNearest() rounding mode out of range: {rm}'\n     *\n     */\n    P.toNearest = function (y, rm) {\n      var x = this,\n        Ctor = x.constructor;\n  \n      x = new Ctor(x);\n  \n      if (y == null) {\n  \n        // If x is not finite, return x.\n        if (!x.d) return x;\n  \n        y = new Ctor(1);\n        rm = Ctor.rounding;\n      } else {\n        y = new Ctor(y);\n        if (rm === void 0) {\n          rm = Ctor.rounding;\n        } else {\n          checkInt32(rm, 0, 8);\n        }\n  \n        // If x is not finite, return x if y is not NaN, else NaN.\n        if (!x.d) return y.s ? x : y;\n  \n        // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\n        if (!y.d) {\n          if (y.s) y.s = x.s;\n          return y;\n        }\n      }\n  \n      // If y is not zero, calculate the nearest multiple of y to x.\n      if (y.d[0]) {\n        external = false;\n        x = divide(x, y, 0, rm, 1).times(y);\n        external = true;\n        finalise(x);\n  \n      // If y is zero, return zero with the sign of x.\n      } else {\n        y.s = x.s;\n        x = y;\n      }\n  \n      return x;\n    };\n  \n  \n    /*\n     * Return the value of this Decimal converted to a number primitive.\n     * Zero keeps its sign.\n     *\n     */\n    P.toNumber = function () {\n      return +this;\n    };\n  \n  \n    /*\n     * Return a string representing the value of this Decimal in base 8, round to `sd` significant\n     * digits using rounding mode `rm`.\n     *\n     * If the optional `sd` argument is present then return binary exponential notation.\n     *\n     * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n     *\n     */\n    P.toOctal = function (sd, rm) {\n      return toStringBinary(this, 8, sd, rm);\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\n     * to `precision` significant digits using rounding mode `rounding`.\n     *\n     * ECMAScript compliant.\n     *\n     *   pow(x, NaN)                           = NaN\n     *   pow(x, ±0)                            = 1\n  \n     *   pow(NaN, non-zero)                    = NaN\n     *   pow(abs(x) > 1, +Infinity)            = +Infinity\n     *   pow(abs(x) > 1, -Infinity)            = +0\n     *   pow(abs(x) == 1, ±Infinity)           = NaN\n     *   pow(abs(x) < 1, +Infinity)            = +0\n     *   pow(abs(x) < 1, -Infinity)            = +Infinity\n     *   pow(+Infinity, y > 0)                 = +Infinity\n     *   pow(+Infinity, y < 0)                 = +0\n     *   pow(-Infinity, odd integer > 0)       = -Infinity\n     *   pow(-Infinity, even integer > 0)      = +Infinity\n     *   pow(-Infinity, odd integer < 0)       = -0\n     *   pow(-Infinity, even integer < 0)      = +0\n     *   pow(+0, y > 0)                        = +0\n     *   pow(+0, y < 0)                        = +Infinity\n     *   pow(-0, odd integer > 0)              = -0\n     *   pow(-0, even integer > 0)             = +0\n     *   pow(-0, odd integer < 0)              = -Infinity\n     *   pow(-0, even integer < 0)             = +Infinity\n     *   pow(finite x < 0, finite non-integer) = NaN\n     *\n     * For non-integer or very large exponents pow(x, y) is calculated using\n     *\n     *   x^y = exp(y*ln(x))\n     *\n     * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\n     * probability of an incorrectly rounded result\n     * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\n     * i.e. 1 in 250,000,000,000,000\n     *\n     * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\n     *\n     * y {number|string|Decimal} The power to which to raise this Decimal.\n     *\n     */\n    P.toPower = P.pow = function (y) {\n      var e, k, pr, r, rm, s,\n        x = this,\n        Ctor = x.constructor,\n        yn = +(y = new Ctor(y));\n  \n      // Either ±Infinity, NaN or ±0?\n      if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\n  \n      x = new Ctor(x);\n  \n      if (x.eq(1)) return x;\n  \n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n  \n      if (y.eq(1)) return finalise(x, pr, rm);\n  \n      // y exponent\n      e = mathfloor(y.e / LOG_BASE);\n  \n      // If y is a small integer use the 'exponentiation by squaring' algorithm.\n      if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\n        r = intPow(Ctor, x, k, pr);\n        return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\n      }\n  \n      s = x.s;\n  \n      // if x is negative\n      if (s < 0) {\n  \n        // if y is not an integer\n        if (e < y.d.length - 1) return new Ctor(NaN);\n  \n        // Result is positive if x is negative and the last digit of integer y is even.\n        if ((y.d[e] & 1) == 0) s = 1;\n  \n        // if x.eq(-1)\n        if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\n          x.s = s;\n          return x;\n        }\n      }\n  \n      // Estimate result exponent.\n      // x^y = 10^e,  where e = y * log10(x)\n      // log10(x) = log10(x_significand) + x_exponent\n      // log10(x_significand) = ln(x_significand) / ln(10)\n      k = mathpow(+x, yn);\n      e = k == 0 || !isFinite(k)\n        ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\n        : new Ctor(k + '').e;\n  \n      // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\n  \n      // Overflow/underflow?\n      if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\n  \n      external = false;\n      Ctor.rounding = x.s = 1;\n  \n      // Estimate the extra guard digits needed to ensure five correct rounding digits from\n      // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\n      // new Decimal(2.32456).pow('2087987436534566.46411')\n      // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\n      k = Math.min(12, (e + '').length);\n  \n      // r = x^y = exp(y*ln(x))\n      r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\n  \n      // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\n      if (r.d) {\n  \n        // Truncate to the required precision plus five rounding digits.\n        r = finalise(r, pr + 5, 1);\n  \n        // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\n        // the result.\n        if (checkRoundingDigits(r.d, pr, rm)) {\n          e = pr + 10;\n  \n          // Truncate to the increased precision plus five rounding digits.\n          r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\n  \n          // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\n          if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\n            r = finalise(r, pr + 1, 0);\n          }\n        }\n      }\n  \n      r.s = s;\n      external = true;\n      Ctor.rounding = rm;\n  \n      return finalise(r, pr, rm);\n    };\n  \n  \n    /*\n     * Return a string representing the value of this Decimal rounded to `sd` significant digits\n     * using rounding mode `rounding`.\n     *\n     * Return exponential notation if `sd` is less than the number of digits necessary to represent\n     * the integer part of the value in normal notation.\n     *\n     * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n     *\n     */\n    P.toPrecision = function (sd, rm) {\n      var str,\n        x = this,\n        Ctor = x.constructor;\n  \n      if (sd === void 0) {\n        str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n      } else {\n        checkInt32(sd, 1, MAX_DIGITS);\n  \n        if (rm === void 0) rm = Ctor.rounding;\n        else checkInt32(rm, 0, 8);\n  \n        x = finalise(new Ctor(x), sd, rm);\n        str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\n      }\n  \n      return x.isNeg() && !x.isZero() ? '-' + str : str;\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\n     * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\n     * omitted.\n     *\n     * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n     *\n     * 'toSD() digits out of range: {sd}'\n     * 'toSD() digits not an integer: {sd}'\n     * 'toSD() rounding mode not an integer: {rm}'\n     * 'toSD() rounding mode out of range: {rm}'\n     *\n     */\n    P.toSignificantDigits = P.toSD = function (sd, rm) {\n      var x = this,\n        Ctor = x.constructor;\n  \n      if (sd === void 0) {\n        sd = Ctor.precision;\n        rm = Ctor.rounding;\n      } else {\n        checkInt32(sd, 1, MAX_DIGITS);\n  \n        if (rm === void 0) rm = Ctor.rounding;\n        else checkInt32(rm, 0, 8);\n      }\n  \n      return finalise(new Ctor(x), sd, rm);\n    };\n  \n  \n    /*\n     * Return a string representing the value of this Decimal.\n     *\n     * Return exponential notation if this Decimal has a positive exponent equal to or greater than\n     * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\n     *\n     */\n    P.toString = function () {\n      var x = this,\n        Ctor = x.constructor,\n        str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n  \n      return x.isNeg() && !x.isZero() ? '-' + str : str;\n    };\n  \n  \n    /*\n     * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\n     *\n     */\n    P.truncated = P.trunc = function () {\n      return finalise(new this.constructor(this), this.e + 1, 1);\n    };\n  \n  \n    /*\n     * Return a string representing the value of this Decimal.\n     * Unlike `toString`, negative zero will include the minus sign.\n     *\n     */\n    P.valueOf = P.toJSON = function () {\n      var x = this,\n        Ctor = x.constructor,\n        str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n  \n      return x.isNeg() ? '-' + str : str;\n    };\n  \n  \n    // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\n  \n  \n    /*\n     *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\n     *                           finiteToString, naturalExponential, naturalLogarithm\n     *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\n     *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\n     *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\n     *  convertBase              toStringBinary, parseOther\n     *  cos                      P.cos\n     *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\n     *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\n     *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\n     *                           taylorSeries, atan2, parseOther\n     *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\n     *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\n     *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\n     *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\n     *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\n     *                           P.truncated, divide, getLn10, getPi, naturalExponential,\n     *                           naturalLogarithm, ceil, floor, round, trunc\n     *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\n     *                           toStringBinary\n     *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\n     *  getLn10                  P.logarithm, naturalLogarithm\n     *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\n     *  getPrecision             P.precision, P.toFraction\n     *  getZeroString            digitsToString, finiteToString\n     *  intPow                   P.toPower, parseOther\n     *  isOdd                    toLessThanHalfPi\n     *  maxOrMin                 max, min\n     *  naturalExponential       P.naturalExponential, P.toPower\n     *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\n     *                           P.toPower, naturalExponential\n     *  nonFiniteToString        finiteToString, toStringBinary\n     *  parseDecimal             Decimal\n     *  parseOther               Decimal\n     *  sin                      P.sin\n     *  taylorSeries             P.cosh, P.sinh, cos, sin\n     *  toLessThanHalfPi         P.cos, P.sin\n     *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\n     *  truncate                 intPow\n     *\n     *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\n     *                           naturalLogarithm, config, parseOther, random, Decimal\n     */\n  \n  \n    function digitsToString(d) {\n      var i, k, ws,\n        indexOfLastWord = d.length - 1,\n        str = '',\n        w = d[0];\n  \n      if (indexOfLastWord > 0) {\n        str += w;\n        for (i = 1; i < indexOfLastWord; i++) {\n          ws = d[i] + '';\n          k = LOG_BASE - ws.length;\n          if (k) str += getZeroString(k);\n          str += ws;\n        }\n  \n        w = d[i];\n        ws = w + '';\n        k = LOG_BASE - ws.length;\n        if (k) str += getZeroString(k);\n      } else if (w === 0) {\n        return '0';\n      }\n  \n      // Remove trailing zeros of last w.\n      for (; w % 10 === 0;) w /= 10;\n  \n      return str + w;\n    }\n  \n  \n    function checkInt32(i, min, max) {\n      if (i !== ~~i || i < min || i > max) {\n        throw Error(invalidArgument + i);\n      }\n    }\n  \n  \n    /*\n     * Check 5 rounding digits if `repeating` is null, 4 otherwise.\n     * `repeating == null` if caller is `log` or `pow`,\n     * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\n     */\n    function checkRoundingDigits(d, i, rm, repeating) {\n      var di, k, r, rd;\n  \n      // Get the length of the first word of the array d.\n      for (k = d[0]; k >= 10; k /= 10) --i;\n  \n      // Is the rounding digit in the first word of d?\n      if (--i < 0) {\n        i += LOG_BASE;\n        di = 0;\n      } else {\n        di = Math.ceil((i + 1) / LOG_BASE);\n        i %= LOG_BASE;\n      }\n  \n      // i is the index (0 - 6) of the rounding digit.\n      // E.g. if within the word 3487563 the first rounding digit is 5,\n      // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\n      k = mathpow(10, LOG_BASE - i);\n      rd = d[di] % k | 0;\n  \n      if (repeating == null) {\n        if (i < 3) {\n          if (i == 0) rd = rd / 100 | 0;\n          else if (i == 1) rd = rd / 10 | 0;\n          r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\n        } else {\n          r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\n            (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\n              (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\n        }\n      } else {\n        if (i < 4) {\n          if (i == 0) rd = rd / 1000 | 0;\n          else if (i == 1) rd = rd / 100 | 0;\n          else if (i == 2) rd = rd / 10 | 0;\n          r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\n        } else {\n          r = ((repeating || rm < 4) && rd + 1 == k ||\n          (!repeating && rm > 3) && rd + 1 == k / 2) &&\n            (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\n        }\n      }\n  \n      return r;\n    }\n  \n  \n    // Convert string of `baseIn` to an array of numbers of `baseOut`.\n    // Eg. convertBase('255', 10, 16) returns [15, 15].\n    // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\n    function convertBase(str, baseIn, baseOut) {\n      var j,\n        arr = [0],\n        arrL,\n        i = 0,\n        strL = str.length;\n  \n      for (; i < strL;) {\n        for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\n        arr[0] += NUMERALS.indexOf(str.charAt(i++));\n        for (j = 0; j < arr.length; j++) {\n          if (arr[j] > baseOut - 1) {\n            if (arr[j + 1] === void 0) arr[j + 1] = 0;\n            arr[j + 1] += arr[j] / baseOut | 0;\n            arr[j] %= baseOut;\n          }\n        }\n      }\n  \n      return arr.reverse();\n    }\n  \n  \n    /*\n     * cos(x) = 1 - x^2/2! + x^4/4! - ...\n     * |x| < pi/2\n     *\n     */\n    function cosine(Ctor, x) {\n      var k, len, y;\n  \n      if (x.isZero()) return x;\n  \n      // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\n      // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\n  \n      // Estimate the optimum number of times to use the argument reduction.\n      len = x.d.length;\n      if (len < 32) {\n        k = Math.ceil(len / 3);\n        y = (1 / tinyPow(4, k)).toString();\n      } else {\n        k = 16;\n        y = '2.3283064365386962890625e-10';\n      }\n  \n      Ctor.precision += k;\n  \n      x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\n  \n      // Reverse argument reduction\n      for (var i = k; i--;) {\n        var cos2x = x.times(x);\n        x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\n      }\n  \n      Ctor.precision -= k;\n  \n      return x;\n    }\n  \n  \n    /*\n     * Perform division in the specified base.\n     */\n    var divide = (function () {\n  \n      // Assumes non-zero x and k, and hence non-zero result.\n      function multiplyInteger(x, k, base) {\n        var temp,\n          carry = 0,\n          i = x.length;\n  \n        for (x = x.slice(); i--;) {\n          temp = x[i] * k + carry;\n          x[i] = temp % base | 0;\n          carry = temp / base | 0;\n        }\n  \n        if (carry) x.unshift(carry);\n  \n        return x;\n      }\n  \n      function compare(a, b, aL, bL) {\n        var i, r;\n  \n        if (aL != bL) {\n          r = aL > bL ? 1 : -1;\n        } else {\n          for (i = r = 0; i < aL; i++) {\n            if (a[i] != b[i]) {\n              r = a[i] > b[i] ? 1 : -1;\n              break;\n            }\n          }\n        }\n  \n        return r;\n      }\n  \n      function subtract(a, b, aL, base) {\n        var i = 0;\n  \n        // Subtract b from a.\n        for (; aL--;) {\n          a[aL] -= i;\n          i = a[aL] < b[aL] ? 1 : 0;\n          a[aL] = i * base + a[aL] - b[aL];\n        }\n  \n        // Remove leading zeros.\n        for (; !a[0] && a.length > 1;) a.shift();\n      }\n  \n      return function (x, y, pr, rm, dp, base) {\n        var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\n          yL, yz,\n          Ctor = x.constructor,\n          sign = x.s == y.s ? 1 : -1,\n          xd = x.d,\n          yd = y.d;\n  \n        // Either NaN, Infinity or 0?\n        if (!xd || !xd[0] || !yd || !yd[0]) {\n  \n          return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\n            !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\n  \n            // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\n            xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\n        }\n  \n        if (base) {\n          logBase = 1;\n          e = x.e - y.e;\n        } else {\n          base = BASE;\n          logBase = LOG_BASE;\n          e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\n        }\n  \n        yL = yd.length;\n        xL = xd.length;\n        q = new Ctor(sign);\n        qd = q.d = [];\n  \n        // Result exponent may be one less than e.\n        // The digit array of a Decimal from toStringBinary may have trailing zeros.\n        for (i = 0; yd[i] == (xd[i] || 0); i++);\n  \n        if (yd[i] > (xd[i] || 0)) e--;\n  \n        if (pr == null) {\n          sd = pr = Ctor.precision;\n          rm = Ctor.rounding;\n        } else if (dp) {\n          sd = pr + (x.e - y.e) + 1;\n        } else {\n          sd = pr;\n        }\n  \n        if (sd < 0) {\n          qd.push(1);\n          more = true;\n        } else {\n  \n          // Convert precision in number of base 10 digits to base 1e7 digits.\n          sd = sd / logBase + 2 | 0;\n          i = 0;\n  \n          // divisor < 1e7\n          if (yL == 1) {\n            k = 0;\n            yd = yd[0];\n            sd++;\n  \n            // k is the carry.\n            for (; (i < xL || k) && sd--; i++) {\n              t = k * base + (xd[i] || 0);\n              qd[i] = t / yd | 0;\n              k = t % yd | 0;\n            }\n  \n            more = k || i < xL;\n  \n          // divisor >= 1e7\n          } else {\n  \n            // Normalise xd and yd so highest order digit of yd is >= base/2\n            k = base / (yd[0] + 1) | 0;\n  \n            if (k > 1) {\n              yd = multiplyInteger(yd, k, base);\n              xd = multiplyInteger(xd, k, base);\n              yL = yd.length;\n              xL = xd.length;\n            }\n  \n            xi = yL;\n            rem = xd.slice(0, yL);\n            remL = rem.length;\n  \n            // Add zeros to make remainder as long as divisor.\n            for (; remL < yL;) rem[remL++] = 0;\n  \n            yz = yd.slice();\n            yz.unshift(0);\n            yd0 = yd[0];\n  \n            if (yd[1] >= base / 2) ++yd0;\n  \n            do {\n              k = 0;\n  \n              // Compare divisor and remainder.\n              cmp = compare(yd, rem, yL, remL);\n  \n              // If divisor < remainder.\n              if (cmp < 0) {\n  \n                // Calculate trial digit, k.\n                rem0 = rem[0];\n                if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\n  \n                // k will be how many times the divisor goes into the current remainder.\n                k = rem0 / yd0 | 0;\n  \n                //  Algorithm:\n                //  1. product = divisor * trial digit (k)\n                //  2. if product > remainder: product -= divisor, k--\n                //  3. remainder -= product\n                //  4. if product was < remainder at 2:\n                //    5. compare new remainder and divisor\n                //    6. If remainder > divisor: remainder -= divisor, k++\n  \n                if (k > 1) {\n                  if (k >= base) k = base - 1;\n  \n                  // product = divisor * trial digit.\n                  prod = multiplyInteger(yd, k, base);\n                  prodL = prod.length;\n                  remL = rem.length;\n  \n                  // Compare product and remainder.\n                  cmp = compare(prod, rem, prodL, remL);\n  \n                  // product > remainder.\n                  if (cmp == 1) {\n                    k--;\n  \n                    // Subtract divisor from product.\n                    subtract(prod, yL < prodL ? yz : yd, prodL, base);\n                  }\n                } else {\n  \n                  // cmp is -1.\n                  // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\n                  // to avoid it. If k is 1 there is a need to compare yd and rem again below.\n                  if (k == 0) cmp = k = 1;\n                  prod = yd.slice();\n                }\n  \n                prodL = prod.length;\n                if (prodL < remL) prod.unshift(0);\n  \n                // Subtract product from remainder.\n                subtract(rem, prod, remL, base);\n  \n                // If product was < previous remainder.\n                if (cmp == -1) {\n                  remL = rem.length;\n  \n                  // Compare divisor and new remainder.\n                  cmp = compare(yd, rem, yL, remL);\n  \n                  // If divisor < new remainder, subtract divisor from remainder.\n                  if (cmp < 1) {\n                    k++;\n  \n                    // Subtract divisor from remainder.\n                    subtract(rem, yL < remL ? yz : yd, remL, base);\n                  }\n                }\n  \n                remL = rem.length;\n              } else if (cmp === 0) {\n                k++;\n                rem = [0];\n              }    // if cmp === 1, k will be 0\n  \n              // Add the next digit, k, to the result array.\n              qd[i++] = k;\n  \n              // Update the remainder.\n              if (cmp && rem[0]) {\n                rem[remL++] = xd[xi] || 0;\n              } else {\n                rem = [xd[xi]];\n                remL = 1;\n              }\n  \n            } while ((xi++ < xL || rem[0] !== void 0) && sd--);\n  \n            more = rem[0] !== void 0;\n          }\n  \n          // Leading zero?\n          if (!qd[0]) qd.shift();\n        }\n  \n        // logBase is 1 when divide is being used for base conversion.\n        if (logBase == 1) {\n          q.e = e;\n          inexact = more;\n        } else {\n  \n          // To calculate q.e, first get the number of digits of qd[0].\n          for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\n          q.e = i + e * logBase - 1;\n  \n          finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\n        }\n  \n        return q;\n      };\n    })();\n  \n  \n    /*\n     * Round `x` to `sd` significant digits using rounding mode `rm`.\n     * Check for over/under-flow.\n     */\n     function finalise(x, sd, rm, isTruncated) {\n      var digits, i, j, k, rd, roundUp, w, xd, xdi,\n        Ctor = x.constructor;\n  \n      // Don't round if sd is null or undefined.\n      out: if (sd != null) {\n        xd = x.d;\n  \n        // Infinity/NaN.\n        if (!xd) return x;\n  \n        // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\n        // w: the word of xd containing rd, a base 1e7 number.\n        // xdi: the index of w within xd.\n        // digits: the number of digits of w.\n        // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\n        // they had leading zeros)\n        // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\n  \n        // Get the length of the first word of the digits array xd.\n        for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\n        i = sd - digits;\n  \n        // Is the rounding digit in the first word of xd?\n        if (i < 0) {\n          i += LOG_BASE;\n          j = sd;\n          w = xd[xdi = 0];\n  \n          // Get the rounding digit at index j of w.\n          rd = w / mathpow(10, digits - j - 1) % 10 | 0;\n        } else {\n          xdi = Math.ceil((i + 1) / LOG_BASE);\n          k = xd.length;\n          if (xdi >= k) {\n            if (isTruncated) {\n  \n              // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\n              for (; k++ <= xdi;) xd.push(0);\n              w = rd = 0;\n              digits = 1;\n              i %= LOG_BASE;\n              j = i - LOG_BASE + 1;\n            } else {\n              break out;\n            }\n          } else {\n            w = k = xd[xdi];\n  \n            // Get the number of digits of w.\n            for (digits = 1; k >= 10; k /= 10) digits++;\n  \n            // Get the index of rd within w.\n            i %= LOG_BASE;\n  \n            // Get the index of rd within w, adjusted for leading zeros.\n            // The number of leading zeros of w is given by LOG_BASE - digits.\n            j = i - LOG_BASE + digits;\n  \n            // Get the rounding digit at index j of w.\n            rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\n          }\n        }\n  \n        // Are there any non-zero digits after the rounding digit?\n        isTruncated = isTruncated || sd < 0 ||\n          xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\n  \n        // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\n        // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\n        // will give 714.\n  \n        roundUp = rm < 4\n          ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\n          : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\n  \n            // Check whether the digit to the left of the rounding digit is odd.\n            ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\n              rm == (x.s < 0 ? 8 : 7));\n  \n        if (sd < 1 || !xd[0]) {\n          xd.length = 0;\n          if (roundUp) {\n  \n            // Convert sd to decimal places.\n            sd -= x.e + 1;\n  \n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n            xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\n            x.e = -sd || 0;\n          } else {\n  \n            // Zero.\n            xd[0] = x.e = 0;\n          }\n  \n          return x;\n        }\n  \n        // Remove excess digits.\n        if (i == 0) {\n          xd.length = xdi;\n          k = 1;\n          xdi--;\n        } else {\n          xd.length = xdi + 1;\n          k = mathpow(10, LOG_BASE - i);\n  \n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\n          // j > 0 means i > number of leading zeros of w.\n          xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\n        }\n  \n        if (roundUp) {\n          for (;;) {\n  \n            // Is the digit to be rounded up in the first word of xd?\n            if (xdi == 0) {\n  \n              // i will be the length of xd[0] before k is added.\n              for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\n              j = xd[0] += k;\n              for (k = 1; j >= 10; j /= 10) k++;\n  \n              // if i != k the length has increased.\n              if (i != k) {\n                x.e++;\n                if (xd[0] == BASE) xd[0] = 1;\n              }\n  \n              break;\n            } else {\n              xd[xdi] += k;\n              if (xd[xdi] != BASE) break;\n              xd[xdi--] = 0;\n              k = 1;\n            }\n          }\n        }\n  \n        // Remove trailing zeros.\n        for (i = xd.length; xd[--i] === 0;) xd.pop();\n      }\n  \n      if (external) {\n  \n        // Overflow?\n        if (x.e > Ctor.maxE) {\n  \n          // Infinity.\n          x.d = null;\n          x.e = NaN;\n  \n        // Underflow?\n        } else if (x.e < Ctor.minE) {\n  \n          // Zero.\n          x.e = 0;\n          x.d = [0];\n          // Ctor.underflow = true;\n        } // else Ctor.underflow = false;\n      }\n  \n      return x;\n    }\n  \n  \n    function finiteToString(x, isExp, sd) {\n      if (!x.isFinite()) return nonFiniteToString(x);\n      var k,\n        e = x.e,\n        str = digitsToString(x.d),\n        len = str.length;\n  \n      if (isExp) {\n        if (sd && (k = sd - len) > 0) {\n          str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\n        } else if (len > 1) {\n          str = str.charAt(0) + '.' + str.slice(1);\n        }\n  \n        str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\n      } else if (e < 0) {\n        str = '0.' + getZeroString(-e - 1) + str;\n        if (sd && (k = sd - len) > 0) str += getZeroString(k);\n      } else if (e >= len) {\n        str += getZeroString(e + 1 - len);\n        if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\n      } else {\n        if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\n        if (sd && (k = sd - len) > 0) {\n          if (e + 1 === len) str += '.';\n          str += getZeroString(k);\n        }\n      }\n  \n      return str;\n    }\n  \n  \n    // Calculate the base 10 exponent from the base 1e7 exponent.\n    function getBase10Exponent(digits, e) {\n      var w = digits[0];\n  \n      // Add the number of digits of the first word of the digits array.\n      for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\n      return e;\n    }\n  \n  \n    function getLn10(Ctor, sd, pr) {\n      if (sd > LN10_PRECISION) {\n  \n        // Reset global state in case the exception is caught.\n        external = true;\n        if (pr) Ctor.precision = pr;\n        throw Error(precisionLimitExceeded);\n      }\n      return finalise(new Ctor(LN10), sd, 1, true);\n    }\n  \n  \n    function getPi(Ctor, sd, rm) {\n      if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\n      return finalise(new Ctor(PI), sd, rm, true);\n    }\n  \n  \n    function getPrecision(digits) {\n      var w = digits.length - 1,\n        len = w * LOG_BASE + 1;\n  \n      w = digits[w];\n  \n      // If non-zero...\n      if (w) {\n  \n        // Subtract the number of trailing zeros of the last word.\n        for (; w % 10 == 0; w /= 10) len--;\n  \n        // Add the number of digits of the first word.\n        for (w = digits[0]; w >= 10; w /= 10) len++;\n      }\n  \n      return len;\n    }\n  \n  \n    function getZeroString(k) {\n      var zs = '';\n      for (; k--;) zs += '0';\n      return zs;\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\n     * integer of type number.\n     *\n     * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\n     *\n     */\n    function intPow(Ctor, x, n, pr) {\n      var isTruncated,\n        r = new Ctor(1),\n  \n        // Max n of 9007199254740991 takes 53 loop iterations.\n        // Maximum digits array length; leaves [28, 34] guard digits.\n        k = Math.ceil(pr / LOG_BASE + 4);\n  \n      external = false;\n  \n      for (;;) {\n        if (n % 2) {\n          r = r.times(x);\n          if (truncate(r.d, k)) isTruncated = true;\n        }\n  \n        n = mathfloor(n / 2);\n        if (n === 0) {\n  \n          // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\n          n = r.d.length - 1;\n          if (isTruncated && r.d[n] === 0) ++r.d[n];\n          break;\n        }\n  \n        x = x.times(x);\n        truncate(x.d, k);\n      }\n  \n      external = true;\n  \n      return r;\n    }\n  \n  \n    function isOdd(n) {\n      return n.d[n.d.length - 1] & 1;\n    }\n  \n  \n    /*\n     * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\n     */\n    function maxOrMin(Ctor, args, ltgt) {\n      var y,\n        x = new Ctor(args[0]),\n        i = 0;\n  \n      for (; ++i < args.length;) {\n        y = new Ctor(args[i]);\n        if (!y.s) {\n          x = y;\n          break;\n        } else if (x[ltgt](y)) {\n          x = y;\n        }\n      }\n  \n      return x;\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\n     * digits.\n     *\n     * Taylor/Maclaurin series.\n     *\n     * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\n     *\n     * Argument reduction:\n     *   Repeat x = x / 32, k += 5, until |x| < 0.1\n     *   exp(x) = exp(x / 2^k)^(2^k)\n     *\n     * Previously, the argument was initially reduced by\n     * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\n     * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\n     * found to be slower than just dividing repeatedly by 32 as above.\n     *\n     * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\n     * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\n     * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\n     *\n     *  exp(Infinity)  = Infinity\n     *  exp(-Infinity) = 0\n     *  exp(NaN)       = NaN\n     *  exp(±0)        = 1\n     *\n     *  exp(x) is non-terminating for any finite, non-zero x.\n     *\n     *  The result will always be correctly rounded.\n     *\n     */\n    function naturalExponential(x, sd) {\n      var denominator, guard, j, pow, sum, t, wpr,\n        rep = 0,\n        i = 0,\n        k = 0,\n        Ctor = x.constructor,\n        rm = Ctor.rounding,\n        pr = Ctor.precision;\n  \n      // 0/NaN/Infinity?\n      if (!x.d || !x.d[0] || x.e > 17) {\n  \n        return new Ctor(x.d\n          ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\n          : x.s ? x.s < 0 ? 0 : x : 0 / 0);\n      }\n  \n      if (sd == null) {\n        external = false;\n        wpr = pr;\n      } else {\n        wpr = sd;\n      }\n  \n      t = new Ctor(0.03125);\n  \n      // while abs(x) >= 0.1\n      while (x.e > -2) {\n  \n        // x = x / 2^5\n        x = x.times(t);\n        k += 5;\n      }\n  \n      // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\n      // necessary to ensure the first 4 rounding digits are correct.\n      guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\n      wpr += guard;\n      denominator = pow = sum = new Ctor(1);\n      Ctor.precision = wpr;\n  \n      for (;;) {\n        pow = finalise(pow.times(x), wpr, 1);\n        denominator = denominator.times(++i);\n        t = sum.plus(divide(pow, denominator, wpr, 1));\n  \n        if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\n          j = k;\n          while (j--) sum = finalise(sum.times(sum), wpr, 1);\n  \n          // Check to see if the first 4 rounding digits are [49]999.\n          // If so, repeat the summation with a higher precision, otherwise\n          // e.g. with precision: 18, rounding: 1\n          // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\n          // `wpr - guard` is the index of first rounding digit.\n          if (sd == null) {\n  \n            if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\n              Ctor.precision = wpr += 10;\n              denominator = pow = t = new Ctor(1);\n              i = 0;\n              rep++;\n            } else {\n              return finalise(sum, Ctor.precision = pr, rm, external = true);\n            }\n          } else {\n            Ctor.precision = pr;\n            return sum;\n          }\n        }\n  \n        sum = t;\n      }\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\n     * digits.\n     *\n     *  ln(-n)        = NaN\n     *  ln(0)         = -Infinity\n     *  ln(-0)        = -Infinity\n     *  ln(1)         = 0\n     *  ln(Infinity)  = Infinity\n     *  ln(-Infinity) = NaN\n     *  ln(NaN)       = NaN\n     *\n     *  ln(n) (n != 1) is non-terminating.\n     *\n     */\n    function naturalLogarithm(y, sd) {\n      var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\n        n = 1,\n        guard = 10,\n        x = y,\n        xd = x.d,\n        Ctor = x.constructor,\n        rm = Ctor.rounding,\n        pr = Ctor.precision;\n  \n      // Is x negative or Infinity, NaN, 0 or 1?\n      if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\n        return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\n      }\n  \n      if (sd == null) {\n        external = false;\n        wpr = pr;\n      } else {\n        wpr = sd;\n      }\n  \n      Ctor.precision = wpr += guard;\n      c = digitsToString(xd);\n      c0 = c.charAt(0);\n  \n      if (Math.abs(e = x.e) < 1.5e15) {\n  \n        // Argument reduction.\n        // The series converges faster the closer the argument is to 1, so using\n        // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\n        // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\n        // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\n        // later be divided by this number, then separate out the power of 10 using\n        // ln(a*10^b) = ln(a) + b*ln(10).\n  \n        // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\n        //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\n        // max n is 6 (gives 0.7 - 1.3)\n        while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\n          x = x.times(y);\n          c = digitsToString(x.d);\n          c0 = c.charAt(0);\n          n++;\n        }\n  \n        e = x.e;\n  \n        if (c0 > 1) {\n          x = new Ctor('0.' + c);\n          e++;\n        } else {\n          x = new Ctor(c0 + '.' + c.slice(1));\n        }\n      } else {\n  \n        // The argument reduction method above may result in overflow if the argument y is a massive\n        // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\n        // function using ln(x*10^e) = ln(x) + e*ln(10).\n        t = getLn10(Ctor, wpr + 2, pr).times(e + '');\n        x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\n        Ctor.precision = pr;\n  \n        return sd == null ? finalise(x, pr, rm, external = true) : x;\n      }\n  \n      // x1 is x reduced to a value near 1.\n      x1 = x;\n  \n      // Taylor series.\n      // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\n      // where x = (y - 1)/(y + 1)    (|x| < 1)\n      sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\n      x2 = finalise(x.times(x), wpr, 1);\n      denominator = 3;\n  \n      for (;;) {\n        numerator = finalise(numerator.times(x2), wpr, 1);\n        t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\n  \n        if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\n          sum = sum.times(2);\n  \n          // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\n          // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\n          if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\n          sum = divide(sum, new Ctor(n), wpr, 1);\n  \n          // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\n          // been repeated previously) and the first 4 rounding digits 9999?\n          // If so, restart the summation with a higher precision, otherwise\n          // e.g. with precision: 12, rounding: 1\n          // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\n          // `wpr - guard` is the index of first rounding digit.\n          if (sd == null) {\n            if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\n              Ctor.precision = wpr += guard;\n              t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\n              x2 = finalise(x.times(x), wpr, 1);\n              denominator = rep = 1;\n            } else {\n              return finalise(sum, Ctor.precision = pr, rm, external = true);\n            }\n          } else {\n            Ctor.precision = pr;\n            return sum;\n          }\n        }\n  \n        sum = t;\n        denominator += 2;\n      }\n    }\n  \n  \n    // ±Infinity, NaN.\n    function nonFiniteToString(x) {\n      // Unsigned.\n      return String(x.s * x.s / 0);\n    }\n  \n  \n    /*\n     * Parse the value of a new Decimal `x` from string `str`.\n     */\n    function parseDecimal(x, str) {\n      var e, i, len;\n  \n      // Decimal point?\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\n  \n      // Exponential form?\n      if ((i = str.search(/e/i)) > 0) {\n  \n        // Determine exponent.\n        if (e < 0) e = i;\n        e += +str.slice(i + 1);\n        str = str.substring(0, i);\n      } else if (e < 0) {\n  \n        // Integer.\n        e = str.length;\n      }\n  \n      // Determine leading zeros.\n      for (i = 0; str.charCodeAt(i) === 48; i++);\n  \n      // Determine trailing zeros.\n      for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\n      str = str.slice(i, len);\n  \n      if (str) {\n        len -= i;\n        x.e = e = e - i - 1;\n        x.d = [];\n  \n        // Transform base\n  \n        // e is the base 10 exponent.\n        // i is where to slice str to get the first word of the digits array.\n        i = (e + 1) % LOG_BASE;\n        if (e < 0) i += LOG_BASE;\n  \n        if (i < len) {\n          if (i) x.d.push(+str.slice(0, i));\n          for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\n          str = str.slice(i);\n          i = LOG_BASE - str.length;\n        } else {\n          i -= len;\n        }\n  \n        for (; i--;) str += '0';\n        x.d.push(+str);\n  \n        if (external) {\n  \n          // Overflow?\n          if (x.e > x.constructor.maxE) {\n  \n            // Infinity.\n            x.d = null;\n            x.e = NaN;\n  \n          // Underflow?\n          } else if (x.e < x.constructor.minE) {\n  \n            // Zero.\n            x.e = 0;\n            x.d = [0];\n            // x.constructor.underflow = true;\n          } // else x.constructor.underflow = false;\n        }\n      } else {\n  \n        // Zero.\n        x.e = 0;\n        x.d = [0];\n      }\n  \n      return x;\n    }\n  \n  \n    /*\n     * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\n     */\n    function parseOther(x, str) {\n      var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\n  \n      if (str.indexOf('_') > -1) {\n        str = str.replace(/(\\d)_(?=\\d)/g, '$1');\n        if (isDecimal.test(str)) return parseDecimal(x, str);\n      } else if (str === 'Infinity' || str === 'NaN') {\n        if (!+str) x.s = NaN;\n        x.e = NaN;\n        x.d = null;\n        return x;\n      }\n  \n      if (isHex.test(str))  {\n        base = 16;\n        str = str.toLowerCase();\n      } else if (isBinary.test(str))  {\n        base = 2;\n      } else if (isOctal.test(str))  {\n        base = 8;\n      } else {\n        throw Error(invalidArgument + str);\n      }\n  \n      // Is there a binary exponent part?\n      i = str.search(/p/i);\n  \n      if (i > 0) {\n        p = +str.slice(i + 1);\n        str = str.substring(2, i);\n      } else {\n        str = str.slice(2);\n      }\n  \n      // Convert `str` as an integer then divide the result by `base` raised to a power such that the\n      // fraction part will be restored.\n      i = str.indexOf('.');\n      isFloat = i >= 0;\n      Ctor = x.constructor;\n  \n      if (isFloat) {\n        str = str.replace('.', '');\n        len = str.length;\n        i = len - i;\n  \n        // log[10](16) = 1.2041... , log[10](88) = 1.9444....\n        divisor = intPow(Ctor, new Ctor(base), i, i * 2);\n      }\n  \n      xd = convertBase(str, base, BASE);\n      xe = xd.length - 1;\n  \n      // Remove trailing zeros.\n      for (i = xe; xd[i] === 0; --i) xd.pop();\n      if (i < 0) return new Ctor(x.s * 0);\n      x.e = getBase10Exponent(xd, xe);\n      x.d = xd;\n      external = false;\n  \n      // At what precision to perform the division to ensure exact conversion?\n      // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\n      // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\n      // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\n      // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\n      // Therefore using 4 * the number of digits of str will always be enough.\n      if (isFloat) x = divide(x, divisor, len * 4);\n  \n      // Multiply by the binary exponent part if present.\n      if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\n      external = true;\n  \n      return x;\n    }\n  \n  \n    /*\n     * sin(x) = x - x^3/3! + x^5/5! - ...\n     * |x| < pi/2\n     *\n     */\n    function sine(Ctor, x) {\n      var k,\n        len = x.d.length;\n  \n      if (len < 3) {\n        return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\n      }\n  \n      // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\n      // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\n      // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\n  \n      // Estimate the optimum number of times to use the argument reduction.\n      k = 1.4 * Math.sqrt(len);\n      k = k > 16 ? 16 : k | 0;\n  \n      x = x.times(1 / tinyPow(5, k));\n      x = taylorSeries(Ctor, 2, x, x);\n  \n      // Reverse argument reduction\n      var sin2_x,\n        d5 = new Ctor(5),\n        d16 = new Ctor(16),\n        d20 = new Ctor(20);\n      for (; k--;) {\n        sin2_x = x.times(x);\n        x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\n      }\n  \n      return x;\n    }\n  \n  \n    // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\n    function taylorSeries(Ctor, n, x, y, isHyperbolic) {\n      var j, t, u, x2,\n        i = 1,\n        pr = Ctor.precision,\n        k = Math.ceil(pr / LOG_BASE);\n  \n      external = false;\n      x2 = x.times(x);\n      u = new Ctor(y);\n  \n      for (;;) {\n        t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\n        u = isHyperbolic ? y.plus(t) : y.minus(t);\n        y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\n        t = u.plus(y);\n  \n        if (t.d[k] !== void 0) {\n          for (j = k; t.d[j] === u.d[j] && j--;);\n          if (j == -1) break;\n        }\n  \n        j = u;\n        u = y;\n        y = t;\n        t = j;\n        i++;\n      }\n  \n      external = true;\n      t.d.length = k + 1;\n  \n      return t;\n    }\n  \n  \n    // Exponent e must be positive and non-zero.\n    function tinyPow(b, e) {\n      var n = b;\n      while (--e) n *= b;\n      return n;\n    }\n  \n  \n    // Return the absolute value of `x` reduced to less than or equal to half pi.\n    function toLessThanHalfPi(Ctor, x) {\n      var t,\n        isNeg = x.s < 0,\n        pi = getPi(Ctor, Ctor.precision, 1),\n        halfPi = pi.times(0.5);\n  \n      x = x.abs();\n  \n      if (x.lte(halfPi)) {\n        quadrant = isNeg ? 4 : 1;\n        return x;\n      }\n  \n      t = x.divToInt(pi);\n  \n      if (t.isZero()) {\n        quadrant = isNeg ? 3 : 2;\n      } else {\n        x = x.minus(t.times(pi));\n  \n        // 0 <= x < pi\n        if (x.lte(halfPi)) {\n          quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\n          return x;\n        }\n  \n        quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\n      }\n  \n      return x.minus(pi).abs();\n    }\n  \n  \n    /*\n     * Return the value of Decimal `x` as a string in base `baseOut`.\n     *\n     * If the optional `sd` argument is present include a binary exponent suffix.\n     */\n    function toStringBinary(x, baseOut, sd, rm) {\n      var base, e, i, k, len, roundUp, str, xd, y,\n        Ctor = x.constructor,\n        isExp = sd !== void 0;\n  \n      if (isExp) {\n        checkInt32(sd, 1, MAX_DIGITS);\n        if (rm === void 0) rm = Ctor.rounding;\n        else checkInt32(rm, 0, 8);\n      } else {\n        sd = Ctor.precision;\n        rm = Ctor.rounding;\n      }\n  \n      if (!x.isFinite()) {\n        str = nonFiniteToString(x);\n      } else {\n        str = finiteToString(x);\n        i = str.indexOf('.');\n  \n        // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\n        // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\n        // minBinaryExponent = floor(decimalExponent * log[2](10))\n        // log[2](10) = 3.321928094887362347870319429489390175864\n  \n        if (isExp) {\n          base = 2;\n          if (baseOut == 16) {\n            sd = sd * 4 - 3;\n          } else if (baseOut == 8) {\n            sd = sd * 3 - 2;\n          }\n        } else {\n          base = baseOut;\n        }\n  \n        // Convert the number as an integer then divide the result by its base raised to a power such\n        // that the fraction part will be restored.\n  \n        // Non-integer.\n        if (i >= 0) {\n          str = str.replace('.', '');\n          y = new Ctor(1);\n          y.e = str.length - i;\n          y.d = convertBase(finiteToString(y), 10, base);\n          y.e = y.d.length;\n        }\n  \n        xd = convertBase(str, 10, base);\n        e = len = xd.length;\n  \n        // Remove trailing zeros.\n        for (; xd[--len] == 0;) xd.pop();\n  \n        if (!xd[0]) {\n          str = isExp ? '0p+0' : '0';\n        } else {\n          if (i < 0) {\n            e--;\n          } else {\n            x = new Ctor(x);\n            x.d = xd;\n            x.e = e;\n            x = divide(x, y, sd, rm, 0, base);\n            xd = x.d;\n            e = x.e;\n            roundUp = inexact;\n          }\n  \n          // The rounding digit, i.e. the digit after the digit that may be rounded up.\n          i = xd[sd];\n          k = base / 2;\n          roundUp = roundUp || xd[sd + 1] !== void 0;\n  \n          roundUp = rm < 4\n            ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\n            : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\n              rm === (x.s < 0 ? 8 : 7));\n  \n          xd.length = sd;\n  \n          if (roundUp) {\n  \n            // Rounding up may mean the previous digit has to be rounded up and so on.\n            for (; ++xd[--sd] > base - 1;) {\n              xd[sd] = 0;\n              if (!sd) {\n                ++e;\n                xd.unshift(1);\n              }\n            }\n          }\n  \n          // Determine trailing zeros.\n          for (len = xd.length; !xd[len - 1]; --len);\n  \n          // E.g. [4, 11, 15] becomes 4bf.\n          for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\n  \n          // Add binary exponent suffix?\n          if (isExp) {\n            if (len > 1) {\n              if (baseOut == 16 || baseOut == 8) {\n                i = baseOut == 16 ? 4 : 3;\n                for (--len; len % i; len++) str += '0';\n                xd = convertBase(str, base, baseOut);\n                for (len = xd.length; !xd[len - 1]; --len);\n  \n                // xd[0] will always be be 1\n                for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\n              } else {\n                str = str.charAt(0) + '.' + str.slice(1);\n              }\n            }\n  \n            str =  str + (e < 0 ? 'p' : 'p+') + e;\n          } else if (e < 0) {\n            for (; ++e;) str = '0' + str;\n            str = '0.' + str;\n          } else {\n            if (++e > len) for (e -= len; e-- ;) str += '0';\n            else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\n          }\n        }\n  \n        str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\n      }\n  \n      return x.s < 0 ? '-' + str : str;\n    }\n  \n  \n    // Does not strip trailing zeros.\n    function truncate(arr, len) {\n      if (arr.length > len) {\n        arr.length = len;\n        return true;\n      }\n    }\n  \n  \n    // Decimal methods\n  \n  \n    /*\n     *  abs\n     *  acos\n     *  acosh\n     *  add\n     *  asin\n     *  asinh\n     *  atan\n     *  atanh\n     *  atan2\n     *  cbrt\n     *  ceil\n     *  clamp\n     *  clone\n     *  config\n     *  cos\n     *  cosh\n     *  div\n     *  exp\n     *  floor\n     *  hypot\n     *  ln\n     *  log\n     *  log2\n     *  log10\n     *  max\n     *  min\n     *  mod\n     *  mul\n     *  pow\n     *  random\n     *  round\n     *  set\n     *  sign\n     *  sin\n     *  sinh\n     *  sqrt\n     *  sub\n     *  sum\n     *  tan\n     *  tanh\n     *  trunc\n     */\n  \n  \n    /*\n     * Return a new Decimal whose value is the absolute value of `x`.\n     *\n     * x {number|string|Decimal}\n     *\n     */\n    function abs(x) {\n      return new this(x).abs();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the arccosine in radians of `x`.\n     *\n     * x {number|string|Decimal}\n     *\n     */\n    function acos(x) {\n      return new this(x).acos();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\n     * `precision` significant digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal} A value in radians.\n     *\n     */\n    function acosh(x) {\n      return new this(x).acosh();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\n     * digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal}\n     * y {number|string|Decimal}\n     *\n     */\n    function add(x, y) {\n      return new this(x).plus(y);\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\n     * significant digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal}\n     *\n     */\n    function asin(x) {\n      return new this(x).asin();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\n     * `precision` significant digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal} A value in radians.\n     *\n     */\n    function asinh(x) {\n      return new this(x).asinh();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\n     * significant digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal}\n     *\n     */\n    function atan(x) {\n      return new this(x).atan();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\n     * `precision` significant digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal} A value in radians.\n     *\n     */\n    function atanh(x) {\n      return new this(x).atanh();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\n     * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\n     *\n     * Domain: [-Infinity, Infinity]\n     * Range: [-pi, pi]\n     *\n     * y {number|string|Decimal} The y-coordinate.\n     * x {number|string|Decimal} The x-coordinate.\n     *\n     * atan2(±0, -0)               = ±pi\n     * atan2(±0, +0)               = ±0\n     * atan2(±0, -x)               = ±pi for x > 0\n     * atan2(±0, x)                = ±0 for x > 0\n     * atan2(-y, ±0)               = -pi/2 for y > 0\n     * atan2(y, ±0)                = pi/2 for y > 0\n     * atan2(±y, -Infinity)        = ±pi for finite y > 0\n     * atan2(±y, +Infinity)        = ±0 for finite y > 0\n     * atan2(±Infinity, x)         = ±pi/2 for finite x\n     * atan2(±Infinity, -Infinity) = ±3*pi/4\n     * atan2(±Infinity, +Infinity) = ±pi/4\n     * atan2(NaN, x) = NaN\n     * atan2(y, NaN) = NaN\n     *\n     */\n    function atan2(y, x) {\n      y = new this(y);\n      x = new this(x);\n      var r,\n        pr = this.precision,\n        rm = this.rounding,\n        wpr = pr + 4;\n  \n      // Either NaN\n      if (!y.s || !x.s) {\n        r = new this(NaN);\n  \n      // Both ±Infinity\n      } else if (!y.d && !x.d) {\n        r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\n        r.s = y.s;\n  \n      // x is ±Infinity or y is ±0\n      } else if (!x.d || y.isZero()) {\n        r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\n        r.s = y.s;\n  \n      // y is ±Infinity or x is ±0\n      } else if (!y.d || x.isZero()) {\n        r = getPi(this, wpr, 1).times(0.5);\n        r.s = y.s;\n  \n      // Both non-zero and finite\n      } else if (x.s < 0) {\n        this.precision = wpr;\n        this.rounding = 1;\n        r = this.atan(divide(y, x, wpr, 1));\n        x = getPi(this, wpr, 1);\n        this.precision = pr;\n        this.rounding = rm;\n        r = y.s < 0 ? r.minus(x) : r.plus(x);\n      } else {\n        r = this.atan(divide(y, x, wpr, 1));\n      }\n  \n      return r;\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\n     * digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal}\n     *\n     */\n    function cbrt(x) {\n      return new this(x).cbrt();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\n     *\n     * x {number|string|Decimal}\n     *\n     */\n    function ceil(x) {\n      return finalise(x = new this(x), x.e + 1, 2);\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\n     *\n     * x {number|string|Decimal}\n     * min {number|string|Decimal}\n     * max {number|string|Decimal}\n     *\n     */\n    function clamp(x, min, max) {\n      return new this(x).clamp(min, max);\n    }\n  \n  \n    /*\n     * Configure global settings for a Decimal constructor.\n     *\n     * `obj` is an object with one or more of the following properties,\n     *\n     *   precision  {number}\n     *   rounding   {number}\n     *   toExpNeg   {number}\n     *   toExpPos   {number}\n     *   maxE       {number}\n     *   minE       {number}\n     *   modulo     {number}\n     *   crypto     {boolean|number}\n     *   defaults   {true}\n     *\n     * E.g. Decimal.config({ precision: 20, rounding: 4 })\n     *\n     */\n    function config(obj) {\n      if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\n      var i, p, v,\n        useDefaults = obj.defaults === true,\n        ps = [\n          'precision', 1, MAX_DIGITS,\n          'rounding', 0, 8,\n          'toExpNeg', -EXP_LIMIT, 0,\n          'toExpPos', 0, EXP_LIMIT,\n          'maxE', 0, EXP_LIMIT,\n          'minE', -EXP_LIMIT, 0,\n          'modulo', 0, 9\n        ];\n  \n      for (i = 0; i < ps.length; i += 3) {\n        if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\n        if ((v = obj[p]) !== void 0) {\n          if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\n          else throw Error(invalidArgument + p + ': ' + v);\n        }\n      }\n  \n      if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\n      if ((v = obj[p]) !== void 0) {\n        if (v === true || v === false || v === 0 || v === 1) {\n          if (v) {\n            if (typeof crypto != 'undefined' && crypto &&\n              (crypto.getRandomValues || crypto.randomBytes)) {\n              this[p] = true;\n            } else {\n              throw Error(cryptoUnavailable);\n            }\n          } else {\n            this[p] = false;\n          }\n        } else {\n          throw Error(invalidArgument + p + ': ' + v);\n        }\n      }\n  \n      return this;\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\n     * digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal} A value in radians.\n     *\n     */\n    function cos(x) {\n      return new this(x).cos();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\n     * significant digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal} A value in radians.\n     *\n     */\n    function cosh(x) {\n      return new this(x).cosh();\n    }\n  \n  \n    /*\n     * Create and return a Decimal constructor with the same configuration properties as this Decimal\n     * constructor.\n     *\n     */\n    function clone(obj) {\n      var i, p, ps;\n  \n      /*\n       * The Decimal constructor and exported function.\n       * Return a new Decimal instance.\n       *\n       * v {number|string|Decimal} A numeric value.\n       *\n       */\n      function Decimal(v) {\n        var e, i, t,\n          x = this;\n  \n        // Decimal called without new.\n        if (!(x instanceof Decimal)) return new Decimal(v);\n  \n        // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\n        // which points to Object.\n        x.constructor = Decimal;\n  \n        // Duplicate.\n        if (isDecimalInstance(v)) {\n          x.s = v.s;\n  \n          if (external) {\n            if (!v.d || v.e > Decimal.maxE) {\n  \n              // Infinity.\n              x.e = NaN;\n              x.d = null;\n            } else if (v.e < Decimal.minE) {\n  \n              // Zero.\n              x.e = 0;\n              x.d = [0];\n            } else {\n              x.e = v.e;\n              x.d = v.d.slice();\n            }\n          } else {\n            x.e = v.e;\n            x.d = v.d ? v.d.slice() : v.d;\n          }\n  \n          return;\n        }\n  \n        t = typeof v;\n  \n        if (t === 'number') {\n          if (v === 0) {\n            x.s = 1 / v < 0 ? -1 : 1;\n            x.e = 0;\n            x.d = [0];\n            return;\n          }\n  \n          if (v < 0) {\n            v = -v;\n            x.s = -1;\n          } else {\n            x.s = 1;\n          }\n  \n          // Fast path for small integers.\n          if (v === ~~v && v < 1e7) {\n            for (e = 0, i = v; i >= 10; i /= 10) e++;\n  \n            if (external) {\n              if (e > Decimal.maxE) {\n                x.e = NaN;\n                x.d = null;\n              } else if (e < Decimal.minE) {\n                x.e = 0;\n                x.d = [0];\n              } else {\n                x.e = e;\n                x.d = [v];\n              }\n            } else {\n              x.e = e;\n              x.d = [v];\n            }\n  \n            return;\n  \n          // Infinity, NaN.\n          } else if (v * 0 !== 0) {\n            if (!v) x.s = NaN;\n            x.e = NaN;\n            x.d = null;\n            return;\n          }\n  \n          return parseDecimal(x, v.toString());\n  \n        } else if (t !== 'string') {\n          throw Error(invalidArgument + v);\n        }\n  \n        // Minus sign?\n        if ((i = v.charCodeAt(0)) === 45) {\n          v = v.slice(1);\n          x.s = -1;\n        } else {\n          // Plus sign?\n          if (i === 43) v = v.slice(1);\n          x.s = 1;\n        }\n  \n        return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\n      }\n  \n      Decimal.prototype = P;\n  \n      Decimal.ROUND_UP = 0;\n      Decimal.ROUND_DOWN = 1;\n      Decimal.ROUND_CEIL = 2;\n      Decimal.ROUND_FLOOR = 3;\n      Decimal.ROUND_HALF_UP = 4;\n      Decimal.ROUND_HALF_DOWN = 5;\n      Decimal.ROUND_HALF_EVEN = 6;\n      Decimal.ROUND_HALF_CEIL = 7;\n      Decimal.ROUND_HALF_FLOOR = 8;\n      Decimal.EUCLID = 9;\n  \n      Decimal.config = Decimal.set = config;\n      Decimal.clone = clone;\n      Decimal.isDecimal = isDecimalInstance;\n  \n      Decimal.abs = abs;\n      Decimal.acos = acos;\n      Decimal.acosh = acosh;        // ES6\n      Decimal.add = add;\n      Decimal.asin = asin;\n      Decimal.asinh = asinh;        // ES6\n      Decimal.atan = atan;\n      Decimal.atanh = atanh;        // ES6\n      Decimal.atan2 = atan2;\n      Decimal.cbrt = cbrt;          // ES6\n      Decimal.ceil = ceil;\n      Decimal.clamp = clamp;\n      Decimal.cos = cos;\n      Decimal.cosh = cosh;          // ES6\n      Decimal.div = div;\n      Decimal.exp = exp;\n      Decimal.floor = floor;\n      Decimal.hypot = hypot;        // ES6\n      Decimal.ln = ln;\n      Decimal.log = log;\n      Decimal.log10 = log10;        // ES6\n      Decimal.log2 = log2;          // ES6\n      Decimal.max = max;\n      Decimal.min = min;\n      Decimal.mod = mod;\n      Decimal.mul = mul;\n      Decimal.pow = pow;\n      Decimal.random = random;\n      Decimal.round = round;\n      Decimal.sign = sign;          // ES6\n      Decimal.sin = sin;\n      Decimal.sinh = sinh;          // ES6\n      Decimal.sqrt = sqrt;\n      Decimal.sub = sub;\n      Decimal.sum = sum;\n      Decimal.tan = tan;\n      Decimal.tanh = tanh;          // ES6\n      Decimal.trunc = trunc;        // ES6\n  \n      if (obj === void 0) obj = {};\n      if (obj) {\n        if (obj.defaults !== true) {\n          ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\n          for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\n        }\n      }\n  \n      Decimal.config(obj);\n  \n      return Decimal;\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\n     * digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal}\n     * y {number|string|Decimal}\n     *\n     */\n    function div(x, y) {\n      return new this(x).div(y);\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\n     * significant digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal} The power to which to raise the base of the natural log.\n     *\n     */\n    function exp(x) {\n      return new this(x).exp();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\n     *\n     * x {number|string|Decimal}\n     *\n     */\n    function floor(x) {\n      return finalise(x = new this(x), x.e + 1, 3);\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\n     * rounded to `precision` significant digits using rounding mode `rounding`.\n     *\n     * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\n     *\n     * arguments {number|string|Decimal}\n     *\n     */\n    function hypot() {\n      var i, n,\n        t = new this(0);\n  \n      external = false;\n  \n      for (i = 0; i < arguments.length;) {\n        n = new this(arguments[i++]);\n        if (!n.d) {\n          if (n.s) {\n            external = true;\n            return new this(1 / 0);\n          }\n          t = n;\n        } else if (t.d) {\n          t = t.plus(n.times(n));\n        }\n      }\n  \n      external = true;\n  \n      return t.sqrt();\n    }\n  \n  \n    /*\n     * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\n     * otherwise return false.\n     *\n     */\n    function isDecimalInstance(obj) {\n      return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\n     * significant digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal}\n     *\n     */\n    function ln(x) {\n      return new this(x).ln();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\n     * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\n     *\n     * log[y](x)\n     *\n     * x {number|string|Decimal} The argument of the logarithm.\n     * y {number|string|Decimal} The base of the logarithm.\n     *\n     */\n    function log(x, y) {\n      return new this(x).log(y);\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\n     * significant digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal}\n     *\n     */\n    function log2(x) {\n      return new this(x).log(2);\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\n     * significant digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal}\n     *\n     */\n    function log10(x) {\n      return new this(x).log(10);\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the maximum of the arguments.\n     *\n     * arguments {number|string|Decimal}\n     *\n     */\n    function max() {\n      return maxOrMin(this, arguments, 'lt');\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the minimum of the arguments.\n     *\n     * arguments {number|string|Decimal}\n     *\n     */\n    function min() {\n      return maxOrMin(this, arguments, 'gt');\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\n     * using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal}\n     * y {number|string|Decimal}\n     *\n     */\n    function mod(x, y) {\n      return new this(x).mod(y);\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\n     * digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal}\n     * y {number|string|Decimal}\n     *\n     */\n    function mul(x, y) {\n      return new this(x).mul(y);\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\n     * significant digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal} The base.\n     * y {number|string|Decimal} The exponent.\n     *\n     */\n    function pow(x, y) {\n      return new this(x).pow(y);\n    }\n  \n  \n    /*\n     * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\n     * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\n     * are produced).\n     *\n     * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\n     *\n     */\n    function random(sd) {\n      var d, e, k, n,\n        i = 0,\n        r = new this(1),\n        rd = [];\n  \n      if (sd === void 0) sd = this.precision;\n      else checkInt32(sd, 1, MAX_DIGITS);\n  \n      k = Math.ceil(sd / LOG_BASE);\n  \n      if (!this.crypto) {\n        for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\n  \n      // Browsers supporting crypto.getRandomValues.\n      } else if (crypto.getRandomValues) {\n        d = crypto.getRandomValues(new Uint32Array(k));\n  \n        for (; i < k;) {\n          n = d[i];\n  \n          // 0 <= n < 4294967296\n          // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\n          if (n >= 4.29e9) {\n            d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\n          } else {\n  \n            // 0 <= n <= 4289999999\n            // 0 <= (n % 1e7) <= 9999999\n            rd[i++] = n % 1e7;\n          }\n        }\n  \n      // Node.js supporting crypto.randomBytes.\n      } else if (crypto.randomBytes) {\n  \n        // buffer\n        d = crypto.randomBytes(k *= 4);\n  \n        for (; i < k;) {\n  \n          // 0 <= n < 2147483648\n          n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\n  \n          // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\n          if (n >= 2.14e9) {\n            crypto.randomBytes(4).copy(d, i);\n          } else {\n  \n            // 0 <= n <= 2139999999\n            // 0 <= (n % 1e7) <= 9999999\n            rd.push(n % 1e7);\n            i += 4;\n          }\n        }\n  \n        i = k / 4;\n      } else {\n        throw Error(cryptoUnavailable);\n      }\n  \n      k = rd[--i];\n      sd %= LOG_BASE;\n  \n      // Convert trailing digits to zeros according to sd.\n      if (k && sd) {\n        n = mathpow(10, LOG_BASE - sd);\n        rd[i] = (k / n | 0) * n;\n      }\n  \n      // Remove trailing words which are zero.\n      for (; rd[i] === 0; i--) rd.pop();\n  \n      // Zero?\n      if (i < 0) {\n        e = 0;\n        rd = [0];\n      } else {\n        e = -1;\n  \n        // Remove leading words which are zero and adjust exponent accordingly.\n        for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\n  \n        // Count the digits of the first word of rd to determine leading zeros.\n        for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\n  \n        // Adjust the exponent for leading zeros of the first word of rd.\n        if (k < LOG_BASE) e -= LOG_BASE - k;\n      }\n  \n      r.e = e;\n      r.d = rd;\n  \n      return r;\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\n     *\n     * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\n     *\n     * x {number|string|Decimal}\n     *\n     */\n    function round(x) {\n      return finalise(x = new this(x), x.e + 1, this.rounding);\n    }\n  \n  \n    /*\n     * Return\n     *   1    if x > 0,\n     *  -1    if x < 0,\n     *   0    if x is 0,\n     *  -0    if x is -0,\n     *   NaN  otherwise\n     *\n     * x {number|string|Decimal}\n     *\n     */\n    function sign(x) {\n      x = new this(x);\n      return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\n     * using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal} A value in radians.\n     *\n     */\n    function sin(x) {\n      return new this(x).sin();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\n     * significant digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal} A value in radians.\n     *\n     */\n    function sinh(x) {\n      return new this(x).sinh();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\n     * digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal}\n     *\n     */\n    function sqrt(x) {\n      return new this(x).sqrt();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\n     * using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal}\n     * y {number|string|Decimal}\n     *\n     */\n    function sub(x, y) {\n      return new this(x).sub(y);\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\n     * significant digits using rounding mode `rounding`.\n     *\n     * Only the result is rounded, not the intermediate calculations.\n     *\n     * arguments {number|string|Decimal}\n     *\n     */\n    function sum() {\n      var i = 0,\n        args = arguments,\n        x = new this(args[i]);\n  \n      external = false;\n      for (; x.s && ++i < args.length;) x = x.plus(args[i]);\n      external = true;\n  \n      return finalise(x, this.precision, this.rounding);\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\n     * digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal} A value in radians.\n     *\n     */\n    function tan(x) {\n      return new this(x).tan();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\n     * significant digits using rounding mode `rounding`.\n     *\n     * x {number|string|Decimal} A value in radians.\n     *\n     */\n    function tanh(x) {\n      return new this(x).tanh();\n    }\n  \n  \n    /*\n     * Return a new Decimal whose value is `x` truncated to an integer.\n     *\n     * x {number|string|Decimal}\n     *\n     */\n    function trunc(x) {\n      return finalise(x = new this(x), x.e + 1, 1);\n    }\n  \n  \n    // Create and configure initial Decimal constructor.\n    Decimal = clone(DEFAULTS);\n    Decimal.prototype.constructor = Decimal;\n    Decimal['default'] = Decimal.Decimal = Decimal;\n  \n    // Create the internal constants from their string values.\n    LN10 = new Decimal(LN10);\n    PI = new Decimal(PI);\n  \n  \n    // Export.\n  \n  \n    // AMD.\n    if (typeof define == 'function' && define.amd) {\n      define(function () {\n        return Decimal;\n      });\n  \n    // Node and other environments that support module.exports.\n    } else if (typeof module != 'undefined' && module.exports) {\n      if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\n        P[Symbol['for']('nodejs.util.inspect.custom')] = P.toString;\n        P[Symbol.toStringTag] = 'Decimal';\n      }\n  \n      module.exports = Decimal;\n  \n    // Browser.\n    } else {\n      if (!globalScope) {\n        globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\n      }\n  \n      noConflict = globalScope.Decimal;\n      Decimal.noConflict = function () {\n        globalScope.Decimal = noConflict;\n        return Decimal;\n      };\n  \n      globalScope.Decimal = Decimal;\n    }\n  })(this);","/**\r\n * Eazax 全局命名空间\r\n * @see eazax.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/extensions/eazax.ts\r\n */\r\nnamespace eazax {\r\n\r\n    /**\r\n     * 打出光彩夺目的日志（黑蓝白配色）\r\n     * @param title 标题\r\n     * @param msg 信息\r\n     */\r\n    export function log(title: any, msg?: any): void {\r\n        if (msg) {\r\n            console.log(\r\n                `%c ${title} %c ${msg} `,\r\n                'background: #35495E;padding: 1px;border-radius: 2px 0 0 2px;color: #fff;',\r\n                'background: #409EFF;padding: 1px;border-radius: 0 2px 2px 0;color: #fff;'\r\n            );\r\n        } else {\r\n            console.log(\r\n                `%c ${title} `,\r\n                'background: #409EFF;padding: 1px;border-radius: 0 2px 2px 0;color: #fff;',\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nwindow['eazax'] = eazax;\r\nwindow['ez'] = window['eazax'];\r\n","// 类型扩展\r\n// @see extension.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/extensions/extension.ts\r\n\r\nString.prototype.clamp = function (start, threshold, suffix = '...') {\r\n    if (this.replace(/[^\\x00-\\xff]/g, 'xx').length <= threshold) return this;\r\n    let charCount = 0;\r\n    let result = '';\r\n    for (let i = start; i < this.length; i++) {\r\n        charCount += /[^\\x00-\\xff]/.test(this[i]) ? 2 : 1;\r\n        if (charCount > threshold) return result += suffix;\r\n        result += this[i];\r\n    }\r\n    return result;\r\n};\r\n\r\n// String.prototype.translate = function () {\r\n//     // TODO\r\n//     return this;\r\n// };\r\n","let httpDef = require('httpDef').httpDef;\n\nlet {Http, IHttpMethod } = require('Http');\n\nlet ConfirmPopup = require('ConfirmPopup');\n\nlet jieguoTimer = require('jieguoTimer');\n\nlet EventManager = require('EventManager');\n\nlet Decimal = require('decimal');\n\n\nlet Language = [\"brasil\",\"columbia\",\"spanish\"]\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        language: {\n            type: cc.Enum({\n                Brasil: 0,\n                Columbia: 1,\n                Spanish: 2,\n            }),\n            default: 0\n        },\n        btn_dice: {\n            type: cc.Button,\n            default: null,\n        },\n        btn_music: {\n            type: cc.Toggle,\n            default: null,\n        },\n        txt_yuce: {\n            type: cc.Label,\n            default: null,\n        },\n        // txt_jieguo: {\n        //     type: cc.Label,\n        //     default: null,\n        // },\n        txt_Multiplicador: {\n            type: cc.Label,\n            default: null,\n        },\n        txt_Oportunidaddeganar: {\n            type: cc.Label,\n            default: null,\n        },  \n        toggle_scroll1: {\n            type: cc.Toggle,\n            default: null,\n        }, \n        toggle_scroll2: {\n            type: cc.Toggle,\n            default: null,\n        }, \n        slider : {\n            type: cc.Slider,\n            default: null,\n        },\n        progressBar : {\n            type: cc.ProgressBar,\n            default: null,\n        },\n        bar : {\n            type: cc.Node,\n            default: null,\n        },\n        progressLabel : {\n            type: cc.Label,\n            default: null,\n        },\n        btn_min: {\n            type: cc.Button,\n            default: null,\n        },\n        btn_max: {\n            type: cc.Button,\n            default: null,\n        },\n        btn_half: {\n            type: cc.Button,\n            default: null,\n        },\n        btn_double: {\n            type: cc.Button,\n            default: null,\n        },\n        txt_bet: {\n            type: cc.Label,\n            default: null,\n        },  \n        txt_score: {\n            type: cc.Label,\n            default: null,\n        }, \n        btn_play: {\n            type: cc.Button,\n            default: null,\n        },\n\n        saizi_bg: {\n            type: cc.Node,\n            default: null,\n        },\n        mask: {\n            type: cc.Node,\n            default: null,\n        },\n        auto_bg2: {\n            type: cc.Node,\n            default: null,\n        },\n        \n        manual_btn: {\n            type: cc.Button,\n            default: null,\n        },\n        auto_btn: {\n            type: cc.Button,\n            default: null,\n        },\n\n        editbox_number_of_bets: {\n            type: cc.EditBox,\n            default: null,\n        },\n        editbox_stop_on_profit: {\n            type: cc.EditBox,\n            default: null,\n        },\n        editbox_stop_on_loss: {\n            type: cc.EditBox,\n            default: null,\n        },\n        editbox_max_bet_amount: {\n            type: cc.EditBox,\n            default: null,\n        },\n        editbox_on_win: {\n            type: cc.EditBox,\n            default: null,\n        },\n        editbox_on_loss: {\n            type: cc.EditBox,\n            default: null,\n        },\n        toggle_on_win: {\n            type: cc.Toggle,\n            default: null,\n        },\n        toggle_on_loss: {\n            type: cc.Toggle,\n            default: null,\n        },\n        \n        autoOk_btn: {\n            type: cc.Button,\n            default: null,\n        },\n\n        popupNode : {\n            type: cc.Node,\n            default: null,\n        },\n\n        \n        txt_count: {\n            type: cc.Label,\n            default: null,\n        },\n        \n        jieguoTimer:jieguoTimer,\n\n        jiesuanLayer: {\n            type: cc.Node,\n            default: null,\n        },\n\n        tz_ani: {\n            type: cc.Node,\n            default: null,\n        },\n\n        tz: {\n            type: cc.Sprite,\n            default: null,\n        },\n\n        audioSource: cc.AudioSource,\n\n        ruleLayer: {\n            type: cc.Node,\n            default: null,\n        },\n    },\n\n\n    onLoad () {\n\n        this.initData()\n        \n        //取Url参数\n        let account = \"\";\n        let token = \"\";\n        let address = \"\"\n        let language = \"\"\n        var parmStr = window.location.href.split('?')[1];\n        if (parmStr) {\n            var parms = parmStr.split('&');\n            parms.forEach(element => {\n                var parm = element.split('=');\n                if (parm[0] == \"member_account\") {\n                    account = parm[1];\n                }\n                else if (parm[0] == \"token\") {\n                    token = parm[1];\n                    this.token = token\n                }\n                else if (parm[0] == \"svr\") {\n                    address = \"https://\" + parm[1];\n                }\n                else if (parm[0] == \"language\") {\n                    language = parm[1];\n                }\n            });\n        }\n\n        if (CC_DEBUG) {\n            this.address = \"http://192.168.1.36:8080\"\n        }\n        else {\n            if(address === \"\"){\n                this.address = \"https://game.yotuwin.com\"\n            }else{\n                this.address = address\n            }\n\n            if(language === \"PT\" ){        //葡萄牙语\n                this.language = 0\n            }else if(language === \"es\"){ //西班牙语\n                this.language = 2\n            }\n        }\n\n        httpDef.ReqStartDefault.token = token\n        httpDef.ReqStartDefault.language = \"en\"\n\n        Http.request(this.address + \"/dicegame/startDefault?token=\"+token,httpDef.ReqStartDefault,(data) => {\n            cc.log(data);\n            try {\n                const parsedData = JSON.parse(data);\n                this.gold = parsedData.data.gold\n                // this.txt_score.string = parsedData.data.gold\n            } catch (error) {\n                console.error('解析 JSON 出错:', error);\n            }\n                        \n        },IHttpMethod.POST,false)\n\n        cc.resources.preloadDir(\"game\",function(){\n            var infos = cc.resources.getDirWithPath('game', cc.SpriteFrame);\n            let paths = infos.map(function (info) {\n                return info.path;\n            });\n        }.bind(this));\n\n        this.resList\n        cc.resources.loadDir(\"game\", function(err, assets){\n \n            let list = cc.resources.getDirWithPath(\"game\")\n            let uuidDict = {}\n         \n            for(let item of list) {\n                uuidDict[item.uuid] = item\n            }\n         \n            let resList = {}\n            \n            for(let asset of assets) {\n                let path = uuidDict[asset[\"_uuid\"]].path\n                if(!resList[path]) {\n                    resList[path] = []\n                }\n                resList[path].push(asset)\n            }\n            this.resList = resList\n         \n        }.bind(this))\n\n        this.btn_dice.node.on('click', this.ruleButtonClickEvent, this)\n        this.btn_music.node.on('click', this.musicButtonClickEvent, this)\n        \n        this.toggle_scroll1.node.on('click', this.switchButtonClickEvent, this)\n        this.toggle_scroll2.node.on('click', this.switchButtonClickEvent, this)\n        this.slider.node.on('slide', this.sliderEvent, this);\n        this.btn_play.node.on('click', this.playButtonClickEvent, this)\n\n        this.manual_btn.node.on('click', this.switchAutoButtonClickEvent, this)\n        this.auto_btn.node.on('click', this.switchAutoButtonClickEvent, this)\n        this.autoOk_btn.node.on('click', this.switchAutoButtonClickEvent, this)\n        \n\n        \n        this.btn_min.node.on('click', this.betButtonClickEvent, this)\n        this.btn_max.node.on('click', this.betButtonClickEvent, this)\n        this.btn_half.node.on('click', this.betButtonClickEvent, this)\n        this.btn_double.node.on('click', this.betButtonClickEvent, this)\n\n        this.editbox_number_of_bets.node.on('editing-did-ended', this.EditboxEvent, this);\n        this.editbox_stop_on_profit.node.on('editing-did-ended', this.EditboxEvent, this);\n        this.editbox_stop_on_loss.node.on('editing-did-ended', this.EditboxEvent, this);\n        this.editbox_max_bet_amount.node.on('editing-did-ended', this.EditboxEvent, this);\n        this.editbox_on_win.node.on('editing-did-ended', this.EditboxEvent, this);\n        this.editbox_on_loss.node.on('editing-did-ended', this.EditboxEvent, this);\n        \n        this.toggle_on_win.node.on('click', this.resetIncreaseEvent, this);\n        this.toggle_on_loss.node.on('click', this.resetIncreaseEvent, this);\n\n        this.ConfirmPopup = this.popupNode.getComponent(\"ConfirmPopup\")\n\n\n\n    },\n\n    initData(){\n\n        this.min_bet = 100\n        this.max_bet = 12800\n\n        this.bet = this.min_bet\n\n        this.token = \"\"\n        this.scrollSwitch = 0\n        this.isAuto = false\n        this.gold = 0       //分数\n        this.balancegold = 0//输赢分数\n        this.goldnumber = 0 //中奖数字\n        this.prediction = 0 //预测数字\n        this.multiplier = 0 //中奖倍率\n        this.Oportunidaddeganar = 0//获奖几率\n        this.play_btn_state = true\n\n        this.numberofbet = 0\n        this.stoponprofit = 1111111111\n        this.stoponloss = 1111111111\n        this.maxbetamount = 1111111111\n        this.onwinincrease = 0\n        this.onlossincrease = 0\n        this.iswinresetIncrease = false\n        this.islossresetIncrease = false\n        this.totalwin = 0\n        this.istop = true\n    },\n\n    resetData(){\n\n        //this.bet = 100\n        this.numberofbet = 0\n        this.stoponprofit = 1111111111\n        this.stoponloss = 1111111111\n        this.maxbetamount = 1111111111\n        this.onwinincrease = 0\n        this.onlossincrease = 0\n        this.iswinresetIncrease = false\n        this.islossresetIncrease = false\n        this.totalwin = 0\n        this.toggle_on_win.isChecked = this.iswinresetIncrease \n        this.toggle_on_loss.isChecked = this.islossresetIncrease \n        this.isAuto = false\n        this.istop = true\n    },\n\n    start () {\n        this.toggle_on_win.isChecked = this.iswinresetIncrease \n        this.toggle_on_loss.isChecked = this.islossresetIncrease \n        //本地化\n        EventManager.default.emit('lang-change', Language[this.language]);\n    },\n\n    update (dt) {\n\n        //本地化\n        EventManager.default.emit('lang-change', Language[this.language]);\n\n        this.prediction = Math.round(this.slider.progress * 100)\n        if (this.scrollSwitch === 0){\n            this.multiplier = Help.preserveDecimal(97.5/Math.round(this.slider.progress * 100),2)\n            this.Oportunidaddeganar = Math.round(this.slider.progress * 100)\n        }\n        else{\n            this.multiplier = Help.preserveDecimal(97.5/(100 - Math.round(this.slider.progress * 100) - 1),2)\n            this.Oportunidaddeganar = 100 - Math.round(this.slider.progress * 100) - 1\n        }\n\n        if (this.scrollSwitch === 0){\n            if(Math.round(this.slider.progress * 100) < 1){\n                this.slider.progress = 0.01\n            }if(Math.round(this.slider.progress * 100) > 95){\n                this.slider.progress = 0.95\n            }\n        }\n        else{\n            if(Math.round(this.slider.progress * 100) < 4){\n                this.slider.progress = 0.04\n            }if(Math.round(this.slider.progress * 100) > 98){\n                this.slider.progress = 0.98\n            }\n        }\n\n        this.txt_yuce.string = this.prediction \n        this.progressBar.progress = this.slider.progress\n        this.progressLabel.string = this.prediction \n\n        this.txt_Multiplicador.string = this.multiplier\n        this.txt_Oportunidaddeganar.string =  this.Oportunidaddeganar\n\n        this.txt_score.string = this.gold\n        // this.txt_jieguo.string = this.goldnumber\n        // this.jieguoTimer.setLabel(this.goldnumber)\n\n        this.btn_play.interactable = this.play_btn_state\n\n        this.txt_bet.string = this.bet\n        \n        this.iswinresetIncrease = this.toggle_on_win.isChecked\n        this.islossresetIncrease = this.toggle_on_loss.isChecked\n\n        if (this.numberofbet > 0) {\n            this.txt_count.string = this.numberofbet\n            this.txt_count.node.active = true\n        }else{\n            this.txt_count.string = \"\"\n            this.txt_count.node.active = false\n        }\n        \n\n\n    \n\n    },\n\n    playAni(){\n        this.tz.node.active = false\n        this.tz_ani.active = true\n        this.audioSource.play()\n    },\n\n    stopAni(){\n        this.tz.node.active = true\n        this.tz_ani.active = false\n        let random = Math.floor(Math.random() * 6) + 1\n        this.tz.spriteFrame = this.getRes(\"game/jz_\" + random,cc.SpriteFrame)\n\n        this.audioSource.pause();\n    },\n\n    //开始按钮\n    playButtonClickEvent(){\n\n        this.playAni()\n        this.startGame()\n\n    },\n\n    startGame(){\n        httpDef.ReqDiceGameBet.token = httpDef.ReqStartDefault.token\n        httpDef.ReqDiceGameBet.language = \"en\"\n\n\n        //上局赢了\n        if (this.balancegold > 0){\n            \n            this.bet = Help.truncateToTwoDecimalPlacesAndHideZero(this.bet + (this.bet * ((this.iswinresetIncrease === true) ? this.onwinincrease : 0)/100),2)\n\n        }else if(this.balancegold < 0){\n            this.bet = Help.truncateToTwoDecimalPlacesAndHideZero(this.bet + (this.bet * ((this.islossresetIncrease === true) ? this.onlossincrease : 0)/100),2)\n        }\n\n        this.bet = (this.bet >= this.maxbetamount) ? this.maxbetamount : this.bet\n        \n        var num2 = this.bet.toFixed(3)\n        this.bet = Number(num2.substring(0,num2.indexOf('.') + 3))\n\n        httpDef.ReqDiceGameBet.bet = this.bet\n        httpDef.ReqDiceGameBet.isblue = (this.scrollSwitch === 0) ? true : false\n        httpDef.ReqDiceGameBet.prediction = this.prediction\n        httpDef.ReqDiceGameBet.multiplier = this.multiplier\n        httpDef.ReqDiceGameBet.isauto = this.isAuto\n        httpDef.ReqDiceGameBet.numberofbet = this.numberofbet\n        httpDef.ReqDiceGameBet.stoponprofit = this.stoponprofit\n        httpDef.ReqDiceGameBet.stoponloss = this.stoponloss\n        httpDef.ReqDiceGameBet.maxbetamount = (this.iswinresetIncrease === true || this.islossresetIncrease === true) ? this.maxbetamount : 99999999\n        httpDef.ReqDiceGameBet.onwinincrease = (this.iswinresetIncrease === true) ? this.onwinincrease : 0\n        httpDef.ReqDiceGameBet.onlossincrease = (this.islossresetIncrease === true) ? this.onlossincrease : 0\n        httpDef.ReqDiceGameBet.totalwin = this.totalwin\n\n        this.play_btn_state = false\n\n        Http.request(this.address + \"/dicegame/bet\",httpDef.ReqDiceGameBet,function(data) {\n            cc.log(data);\n            try {\n\n                this.jieguoTimer.startTimer(1/20)\n                \n                setTimeout(function(){\n                    this.stopAni()\n                    this.jieguoTimer.stopTimer()\n                    const parsedData = JSON.parse(data);\n                    if(parsedData.code === -1){\n                        //this.dialog(\"\",parsedData.msg)\n                       // this.dialog(\"\",\"Por favor, saia da sala e entre novamente no jogo\")\n                        \n                        return\n                    }\n                    this.gold = parsedData.data.gold\n                    this.goldnumber = parsedData.data.goldnumber\n                    this.jieguoTimer.setLabel(this.goldnumber)\n                    \n                    this.totalwin = parsedData.data.totalwin\n                    \n                    this.balancegold = parsedData.data.balancegold\n                    this.istop = parsedData.data.istop\n                    if (this.istop === true){\n                        this.play_btn_state = true\n                        this.manual_btn.isChecked = true\n                        this.manual_btn.auto_btn = false\n                        this.resetData()\n                        this.editbox_number_of_bets.string = (this.numberofbet === 0) ? \"\" : this.numberofbet\n                        this.editbox_stop_on_profit.string =  \"\"//(this.stoponprofit === 0) ? \"\" : this.stoponprofit\n                        this.editbox_stop_on_loss.string =  \"\"//(this.stoponloss === 0) ? \"\" : this.stoponloss\n                        this.editbox_max_bet_amount.string = \"\"//(this.maxbetamount === 0) ? \"\" : this.maxbetamount\n                        this.editbox_on_win.string = (this.onwinincrease === 0) ? \"\" : this.onwinincrease\n                        this.editbox_on_loss.string = (this.onlossincrease === 0) ? \"\" : this.onlossincrease\n                    }\n\n                    let jiesuanLayerOptions = {\n                        num :this.balancegold,\n                        parent:this\n                    }\n                    this.jiesuanLayer.getComponent(\"jiesuanLayer\").show(jiesuanLayerOptions) \n\n                    if(this.isAuto === true){\n                        this.numberofbet = parsedData.data.numberofbet\n\n                        setTimeout(function(){\n                            this.jiesuanLayer.getComponent(\"jiesuanLayer\").hide()\n                        }.bind(this),700)\n\n                        setTimeout(function(){\n                            this.playButtonClickEvent()\n                        }.bind(this),1000)\n                        \n                    }else{\n                        this.play_btn_state = true\n\n                        setTimeout(function(){\n                            this.jiesuanLayer.getComponent(\"jiesuanLayer\").hide()\n                        }.bind(this),1000)\n                    }\n                    \n\n                }.bind(this), 2000)\n\n            } catch (error) {\n                console.error('解析 JSON 出错:', error);\n            }\n        }.bind(this),IHttpMethod.POST,false)\n    },\n\n\n\n    //规则按钮\n    ruleButtonClickEvent(){\n        this.ruleLayer.getComponent(\"ruleLayer\").show({parent:this})  \n    },\n\n    //music按钮\n    musicButtonClickEvent(event){\n        \n        this.audioSource.volume = event.isChecked\n\n    },\n\n    \n\n    //选择蓝红按钮\n    switchButtonClickEvent(event){\n        if(event.node.name === \"toggle1\"){\n            this.scrollSwitch = 0\n            this.saizi_bg.getComponent(cc.Sprite).spriteFrame = this.getRes(\"game/saizi_bg1\",cc.SpriteFrame)\n            this.progressBar.node.getComponent(cc.Sprite).spriteFrame = this.getRes(\"game/slider3\",cc.SpriteFrame)\n            this.bar.getComponent(cc.Sprite).spriteFrame = this.getRes(\"game/slider2\",cc.SpriteFrame)\n        }else if (event.node.name === \"toggle2\"){\n            this.scrollSwitch = 1\n            this.saizi_bg.getComponent(cc.Sprite).spriteFrame = this.getRes(\"game/saizi_bg2\",cc.SpriteFrame)\n            this.progressBar.node.getComponent(cc.Sprite).spriteFrame = this.getRes(\"game/slider2\",cc.SpriteFrame)\n            this.bar.getComponent(cc.Sprite).spriteFrame = this.getRes(\"game/slider3\",cc.SpriteFrame)\n        }\n    },\n\n    //选择模式按钮\n    switchAutoButtonClickEvent(event){\n        if(event.node.name === \"manual_btn\"){\n            this.resetData()\n\n            this.editbox_number_of_bets.string = \"\"\n            this.editbox_stop_on_profit.string = \"\"\n            this.editbox_stop_on_loss.string = \"\"\n            this.editbox_max_bet_amount.string = \"\"\n            this.editbox_on_win.string = \"\"\n            this.editbox_on_loss.string = \"\"\n            this.isAuto = false\n            this.auto_bg2.active = false\n            this.mask.active = false\n        }else if (event.node.name === \"auto_btn\"){\n            this.isAuto = false\n            this.auto_bg2.active = true\n            this.mask.active = true\n        }else if (event.node.name === \"autoOk_btn\"){\n\n            if(this.numberofbet === 0){\n                if(this.language == 0 || this.language == 1){\n                    this.dialog(\"\",\"número de apostas não pode estar vazio!\")\n                }else if(this.language == 2 ){\n                    this.dialog(\"\",\"el número de apuestas no puede estar vacío\")\n                }\n                \n                return\n            }\n\n\n\n            if(this.iswinresetIncrease === true || this.islossresetIncrease === true){\n                if(Number(this.editbox_max_bet_amount.string) === 0 || this.editbox_max_bet_amount.string === \"\"){\n                    if(this.language == 0 || this.language == 1){\n                        this.dialog(\"\",\"Quando o aumento na ganha ou o aumentar a perda está ativado, o valor máx de aposta não pode servazio!\")\n                    }else if(this.language == 2 ){\n                        this.dialog(\"\",\"Cuando se activa el aumento de ganancias o el aumento de pérdidas, ¡el monto máximo de la apuesta no puede estar vacío!\")\n                    }\n                    \n                    return\n                }\n\n            }\n\n            this.balancegold = 0\n            this.isAuto = true\n            this.auto_bg2.active = false\n            this.mask.active = false\n\n            this.myUpdate = function () {\n                \n                this.playButtonClickEvent()\n\n            };\n\n            this.scheduleOnce(this.myUpdate,1);\n    \n\n\n        }\n    },\n\n    //下注按钮\n    betButtonClickEvent(event){\n\n        if(event.node.name === \"btn_min\"){\n            this.bet = this.min_bet\n        }else if (event.node.name === \"btn_max\"){\n            this.bet = this.max_bet\n        }else if (event.node.name === \"btn_half\"){\n            this.bet = (this.bet/2 < this.min_bet) ? this.min_bet : this.bet/2\n        }else if (event.node.name === \"btn_double\"){  \n            this.bet = (this.bet*2 > this.max_bet) ? this.max_bet : this.bet*2\n        }\n\n    },\n\n    //输入框\n    EditboxEvent(event){\n        \n        if(event.node.name === \"editbox_number_of_bets\"){\n            this.numberofbet = Number(event.string)\n        }else if (event.node.name === \"editbox_stop_on_profit\"){\n            this.stoponprofit = Number(event.string)\n        }else if (event.node.name === \"editbox_stop_on_loss\"){\n            this.stoponloss = Number(event.string)\n        }else if (event.node.name === \"editbox_max_bet_amount\"){  \n            if (Number(event.string)===0){return}\n            this.maxbetamount = Number(event.string)\n        }else if (event.node.name === \"editbox_on_win\"){ \n            if(Number(event.string) > 100){\n                this.editbox_on_win.string = 0\n            } \n            this.onwinincrease = Number(event.string)\n        }else if (event.node.name === \"editbox_on_loss\"){  \n            if(Number(event.string) > 100){\n                this.editbox_on_loss.string = 0\n            } \n            this.onlossincrease = Number(event.string)\n        }\n\n    },\n\n    resetIncreaseEvent(event){\n\n        //todo\n       //onwin onloss按钮相关没做\n\n\n\n        // if(event.node.name === \"toggle_on_win\"){\n        //     this.iswinresetIncrease = event.isChecked\n        // }else if (event.node.name === \"toggle_on_loss\"){\n        //     this.islossresetIncrease = event.isChecked\n        // }\n        \n    },\n\n    //\n    sliderEvent(){\n\n        if (this.scrollSwitch === 0){\n            if(Math.round(this.slider.progress * 100) < 1){\n                this.slider.progress = 0.01\n            }if(Math.round(this.slider.progress * 100) > 95){\n                this.slider.progress = 0.95\n            }\n        }\n        else{\n            if(Math.round(this.slider.progress * 100) < 4){\n                this.slider.progress = 0.04\n            }if(Math.round(this.slider.progress * 100) > 98){\n                this.slider.progress = 0.98\n            }\n        }\n\n\n    },\n\n    getRes(path, type) {\n        let list = this.resList[path]\n     \n        if(!list) {\n            return null\n        }\n     \n        for(let item of list) {\n            if(item instanceof(type)) {\n                return item\n            }\n        }\n     \n        return null\n    },\n\n    dialog(title,content,confirmCallback){\n        const confirmOptions = {\n            title: title,\n            content: content,\n            confirmCallback: confirmCallback\n        };\n        \n        this.ConfirmPopup.show(confirmOptions)\n    },\n});\n","let httpDef = {}\r\n\r\nhttpDef.ReqStartDefault = {\r\n    token : null,\r\n    language : null,\r\n}\r\n\r\nhttpDef.ReqDiceGameBet = {\r\n    token : null,\r\n    language : null,\r\n    bet  : null,\r\n    isblue: null,\r\n    prediction : null,\r\n    multiplier : null,\r\n    isauto  : null,\r\n    numberofbet  : null,\r\n    stoponprofit  : null,\r\n    stoponloss  : null,\r\n    maxbetamount   : null,\r\n    onwinincrease  : null,\r\n    onlossincrease : null,\r\n    totalwin : null\r\n}\r\n\r\n\r\n\r\n \r\n\r\nmodule.exports = {\r\n\t'httpDef': httpDef\r\n};","\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n\n    start () {\n\n    },\n\n    startTimer(time){\n        // 设置每秒更新\n        this.updateInterval = time;\n        this.schedule(this.updateNumber, this.updateInterval);\n    },\n\n    stopTimer(){\n        this.unschedule(this.updateNumber);\n    },\n\n\n\n    setLabel(string){\n        this.node.getComponent(cc.Label).string = string\n    },\n\n    updateNumber(){\n        // 生成随机数\n        let randomNumber = Math.floor(Math.random() * 92) + 4;\n                    \n        // 更新 Label 显示的数字\n        this.setLabel(randomNumber)\n    },\n\n    // update (dt) {},\n});\n","import PopupBase from \"../cocos-eazax-kit-master/components/popups/PopupBase\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class jiesuanLayer extends PopupBase<jiesuanLayerOptions> {\n\n    @property(cc.Sprite)\n    private title: cc.Sprite = null;\n\n    @property(cc.Label)\n    private winnumLabel: cc.Label = null;\n    @property(cc.Label)\n    private lossnumLabel: cc.Label = null;\n\n    // @property(cc.Node)\n    // private confirmBtn: cc.Node = null;\n\n    protected onLoad() {\n        this.registerEvent();\n    }\n\n    protected onDestroy() {\n        this.unregisterEvent();\n    }\n\n    private registerEvent() {\n        //this.confirmBtn.on(cc.Node.EventType.TOUCH_END, this.onConfirmBtnClick, this);\n    }\n\n    private unregisterEvent() {\n        //this.confirmBtn.targetOff(this);\n    }\n\n    protected init() {\n\n    }\n\n    protected updateDisplay(options: jiesuanLayerOptions): void {\n        if(Number(options.num) > 0){\n            this.title.spriteFrame = options.parent.getRes(\"game/WIN\",cc.SpriteFrame)\n            this.winnumLabel.string = (options.num.toString()).replace(/[\\+\\-]/g, '')\n            this.winnumLabel.node.active = true\n            this.lossnumLabel.node.active = false\n        }else{\n            this.title.spriteFrame = options.parent.getRes(\"game/LOSE\",cc.SpriteFrame)\n            this.lossnumLabel.string = (options.num.toString()).replace(/[\\+\\-]/g, '')\n            this.winnumLabel.node.active = false\n            this.lossnumLabel.node.active = true\n        }\n\n    }\n\n    // protected onConfirmBtnClick() {\n    //     this.options.confirmCallback && this.options.confirmCallback();\n    //     this.hide();\n    // }\n\n}\n\n/** 结算选项 */\nexport interface jiesuanLayerOptions {\n    num: string;\n    parent: any;\n    //confirmCallback: Function;\n}\n","import PopupBase from \"../cocos-eazax-kit-master/components/popups/PopupBase\";\n\nconst { ccclass, property } = cc._decorator;\n\nlet Language = [\"brasil\",\"columbia\",\"spanish\"]\n\n@ccclass\nexport default class ruleLayer extends PopupBase<ruleOptions> {\n\n\n    @property(cc.Sprite)\n    private rule_sprite: cc.Sprite = null;\n    @property(cc.Label)\n    private rule_txt: cc.Label = null;\n    @property(cc.Sprite)\n    private hongdian: cc.Sprite = null;\n    @property(cc.Sprite)\n    private huidian: cc.Sprite = null;\n    @property(cc.Node)\n    private nextBtn: cc.Node = null;\n    @property(cc.Node)\n    private confirmBtn: cc.Node = null;\n    @property(cc.Node)\n    private rulebackBtn: cc.Node = null;\n\n    @property(cc.Node)\n    private min_txt: cc.Node = null;\n    \n    @property(cc.Node)\n    private max_txt: cc.Node = null;\n\n    @property(cc.Node)\n    private min_num: cc.Node = null;\n    \n    @property(cc.Node)\n    private max_num: cc.Node = null;\n\n    @property(cc.Node)\n    private checkBtn1: cc.Node = null;\n\n    @property(cc.Node)\n    private checkBtn2: cc.Node = null;\n    @property(cc.Node)\n    private confirmBtn1: cc.Node = null;\n\n    private page = 1\n\n    protected onLoad() {\n        this.registerEvent();\n    }\n\n    protected onDestroy() {\n        this.unregisterEvent();\n    }\n\n    private registerEvent() {\n        this.nextBtn.on(cc.Node.EventType.TOUCH_END, this.onNextBtnClick, this);\n        this.confirmBtn.on(cc.Node.EventType.TOUCH_END, this.onConfirmBtnClick, this);\n        this.rulebackBtn.on(cc.Node.EventType.TOUCH_END, this.onConfirmBtnClick, this);\n        this.confirmBtn1.on(cc.Node.EventType.TOUCH_END, this.onConfirmBtnClick, this);\n\n        this.checkBtn1.on(cc.Node.EventType.TOUCH_END, this.onCheckBtnClick, this);\n        this.checkBtn2.on(cc.Node.EventType.TOUCH_END, this.onCheckBtnClick, this);\n        \n    }\n\n    private unregisterEvent() {\n        this.confirmBtn.targetOff(this);\n    }\n\n    protected init() {\n\n        this.rule_sprite.spriteFrame = this.options.parent.getRes(\"game/rule\" + this.options.parent.language + \"_1\",cc.SpriteFrame)\n        this.hongdian.spriteFrame = this.options.parent.getRes(\"game/hongdian\",cc.SpriteFrame)\n        this.huidian.spriteFrame = this.options.parent.getRes(\"game/huidian\",cc.SpriteFrame)\n        if(this.options.parent.language == 0 || this.options.parent.language == 1){\n            this.rule_txt.string = \"Fazer uma aposta e prever um número Luckycontrolando o deslizador Escolher 'Rodarsobre' ou ' Rodar por baixo' o número escolhido.\" \n        }else if (this.options.parent.language == 2 ){\n            this.rule_txt.string = \"Haga una apuesta y prediga un número de la suerte controlando el control deslizante. Elija 'Girar por encima' o 'Girar por debajo' del número elegido.\" \n        }\n        \n        this.nextBtn.active = true\n        this.confirmBtn.active = false\n\n        this.rule_sprite.node.active = true\n            this.hongdian.node.active = true\n            this.huidian.node.active = true\n            this.rule_txt.node.active = true\n            if(this.page == 1){\n                this.nextBtn.active = true\n                this.confirmBtn.active = false\n            }else if(this.page == 2){\n                this.nextBtn.active = false\n                this.confirmBtn.active = true\n            }\n\n\n        this.checkBtn1.getComponent(cc.Toggle).isChecked = true\n        this.confirmBtn1.active = false\n        this.min_txt.active = false\n        this.max_txt.active = false\n        this.min_num.active = false\n        this.max_num.active = false\n\n        this.page = 1\n    }\n\n    protected updateDisplay(options: ruleOptions): void {\n\n\n    }\n\n    protected onNextBtnClick() {\n        this.rule_sprite.spriteFrame = this.options.parent.getRes(\"game/rule\" + this.options.parent.language + \"_2\",cc.SpriteFrame)\n        this.hongdian.spriteFrame = this.options.parent.getRes(\"game/huidian\",cc.SpriteFrame)\n        this.huidian.spriteFrame = this.options.parent.getRes(\"game/hongdian\",cc.SpriteFrame)\n        if(this.options.parent.language == 0 || this.options.parent.language == 1){\n            this.rule_txt.string = \"O gerador de números aleatórios escolherÃ¡ onÃmero vencedor de 0 a 99. Se o número da sorte for o intervalo escolhido, vocª ganha!\" \n        }else if (this.options.parent.language == 2 ){\n            this.rule_txt.string = \"El generador de números aleatorios elegirá el número ganador del 0 al 99. Si el número de la suerte está en el rango elegido, ¡tú ganas!\"\n        }\n        \n        this.nextBtn.active = false\n        this.confirmBtn.active = true\n        this.page = 2\n    }\n\n    protected onConfirmBtnClick() {\n        this.page = 1\n        this.hide();\n    }\n\n    protected onCheckBtnClick(event) {\n        if(event.target.name == \"toggle1\"){\n            this.rule_sprite.node.active = true\n            this.hongdian.node.active = true\n            this.huidian.node.active = true\n            this.rule_txt.node.active = true\n            if(this.page == 1){\n                this.nextBtn.active = true\n                this.confirmBtn.active = false\n            }else if(this.page == 2){\n                this.nextBtn.active = false\n                this.confirmBtn.active = true\n            }\n\n            this.min_txt.active = false\n            this.max_txt.active = false\n            this.min_num.active = false\n            this.max_num.active = false\n            this.confirmBtn1.active = false\n            \n        }else if(event.target.name == \"toggle2\"){\n            this.nextBtn.active = false\n            this.confirmBtn.active = false\n            this.rule_sprite.node.active = false\n            this.hongdian.node.active = false\n            this.huidian.node.active = false\n            this.rule_txt.node.active = false\n\n            this.min_txt.active = true\n            this.max_txt.active = true\n            this.min_num.active = true\n            this.max_num.active = true\n            this.confirmBtn1.active = true\n\n\n        }\n    }\n\n}\n\n/** 结算选项 */\nexport interface ruleOptions {\n    parent:any\n}\n"],"file":"index.js"}